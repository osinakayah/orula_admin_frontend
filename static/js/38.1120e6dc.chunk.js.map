{"version":3,"sources":["Pages/Authentication/SignIn/SignIn1.js"],"names":["SignUp1","props","_this","Object","_Users_osinakayah_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_osinakayah_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_osinakayah_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","signInUser","attemptLogin","email","state","password","handlesOnEmailChange","event","preventDefault","setState","target","value","trim","handlesOnPasswordChange","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_hoc_Aux__WEBPACK_IMPORTED_MODULE_10__","_Components_Breadcrumb__WEBPACK_IMPORTED_MODULE_11__","className","type","placeholder","onChange","name","id","htmlFor","onClick","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","react_toasts__WEBPACK_IMPORTED_MODULE_13__","store","ToastsStore","position","ToastsContainerPosition","TOP_CENTER","Component","connect","login","dispatch","data","LoginActions","loginRequest"],"mappings":"+NAWMA,cAOF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMVQ,WAAa,WACTP,EAAKD,MAAMS,aAAa,CACpBC,MAAOT,EAAKU,MAAMD,MAClBE,SAAUX,EAAKU,MAAMC,YAVXX,EAqElBY,qBAAuB,SAACC,GAEhBA,IACAA,EAAMC,iBACNd,EAAKe,SAAS,CAAEN,MAAOI,EAAMG,OAAOC,MAAMC,WAzEhClB,EA6ElBmB,wBAA0B,SAACN,GACnBA,IACAA,EAAMC,iBACNd,EAAKe,SAAS,CAAEJ,SAAUE,EAAMG,OAAOC,MAAMC,WA9EjDlB,EAAKU,MAAQ,CACTD,MAAO,GACPE,SAAU,IAJAX,wEAcd,OACIoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,MAChBL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,QAChBL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,QAChBL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,OAGpBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kCAAiCL,EAAAC,EAAAC,cAAA,0BAElDF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,QAAd,SACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAAA,SACII,KAAK,QACLD,UAAU,eACVE,YAAY,QACZV,MAAOd,KAAKO,MAAMD,MAClBmB,SAAUzB,KAAKS,wBAGvBQ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACXL,EAAAC,EAAAC,cAAA,SACII,KAAK,WACLD,UAAU,eACVE,YAAY,WACZV,MAAOd,KAAKO,MAAMC,SAClBiB,SAAUzB,KAAKgB,2BAGvBC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mCACXL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWG,KAAK,kBAAkBC,GAAG,qBAC7CV,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,mBAAmBN,UAAU,MAA5C,uBAGZL,EAAAC,EAAAC,cAAA,UAAQU,QAAS7B,KAAKI,WAAYkB,UAAU,iCAA5C,SACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAAb,oBAAgDL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASC,GAAG,0BAAZ,UAChDd,EAAAC,EAAAC,cAAA,KAAGG,UAAU,mBAAb,+BAAsDL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASC,GAAG,kBAAZ,cAIlEd,EAAAC,EAAAC,cAACa,EAAA,gBAAD,CAAiBC,MAAOC,cAAaC,SAAUC,0BAAwBC,sBArErEC,aAyGPC,sBAZS,SAAChC,GACrB,MAAO,CACHiC,MAAOjC,EAAMiC,QAIM,SAACC,GACxB,MAAO,CACHpC,aAAc,SAACqC,GAAD,OAAUD,EAASE,UAAaC,aAAaF,OAIpDH,CAA6C5C","file":"static/js/38.1120e6dc.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { connect }            from 'react-redux';\r\nimport PropTypes      from 'prop-types';\r\nimport '../../../assets/scss/style.scss';\r\nimport '../../../../node_modules/sweetalert/dist/sweetalert.css';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Breadcrumb from \"../../../Components/Breadcrumb\";\r\nimport LoginActions from '../../../Redux/LoginRedux'\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\n\r\nclass SignUp1 extends Component {\r\n    // #region propTypes\r\n    static propTypes= {\r\n        attemptLogin: PropTypes.func.isRequired\r\n    };\r\n    // #endregion\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n    signInUser = () => {\r\n        this.props.attemptLogin({\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        })\r\n    }\r\n    render () {\r\n        return(\r\n            <Aux>\r\n                <Breadcrumb/>\r\n                <div className=\"auth-wrapper\">\r\n                    <div className=\"auth-content\">\r\n                        <div className=\"auth-bg\">\r\n                            <span className=\"r\"/>\r\n                            <span className=\"r s\"/>\r\n                            <span className=\"r s\"/>\r\n                            <span className=\"r\"/>\r\n                        </div>\r\n\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"mb-4\">\r\n                                    <i className=\"feather icon-unlock auth-icon\"/><h6>Orula Admin</h6>\r\n                                </div>\r\n                                <h3 className=\"mb-4\">Login</h3>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        onChange={this.handlesOnEmailChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"input-group mb-4\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handlesOnPasswordChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group text-left\">\r\n                                    <div className=\"checkbox checkbox-fill d-inline\">\r\n                                        <input type=\"checkbox\" name=\"checkbox-fill-1\" id=\"checkbox-fill-a1\" />\r\n                                            <label htmlFor=\"checkbox-fill-a1\" className=\"cr\"> Save credentials</label>\r\n                                    </div>\r\n                                </div>\r\n                                <button onClick={this.signInUser} className=\"btn btn-primary shadow-2 mb-4\">Login</button>\r\n                                <p className=\"mb-2 text-muted\">Forgot password? <NavLink to=\"/auth/reset-password-1\">Reset</NavLink></p>\r\n                                <p className=\"mb-0 text-muted\">Donâ€™t have an account? <NavLink to=\"/auth/signup-1\">Signup</NavLink></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER}/>\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n\r\n    // #region form inputs change callbacks\r\n    handlesOnEmailChange = (event) => {\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            this.setState({ email: event.target.value.trim() });\r\n        }\r\n    }\r\n\r\n    handlesOnPasswordChange = (event) => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            this.setState({ password: event.target.value.trim() });\r\n        }\r\n    }\r\n    // #endregion\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login: state.login\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        attemptLogin: (data) => dispatch(LoginActions.loginRequest(data)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp1);\r\n"],"sourceRoot":""}