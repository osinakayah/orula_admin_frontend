{"version":3,"sources":["../node_modules/react-bootstrap/es/CardContext.js","../node_modules/react-bootstrap/es/Col.js","../node_modules/react-bootstrap/es/Row.js","../node_modules/react-bootstrap/es/utils/divWithClassName.js","../node_modules/react-bootstrap/es/CardImg.js","../node_modules/react-bootstrap/es/Card.js","../node_modules/react-nvd3/dist/react-nvd3.min.js","../node_modules/d3/d3.js","../node_modules/nvd3/build/nv.d3.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","__webpack_exports__","a","createContext","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","DEVICE_SIZES","Col","forwardRef","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","Object","prefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","createElement","apply","concat","displayName","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","Row","_React$Component","this","arguments","prototype","render","_this$props","noGutters","_this$props$as","defaultProps","divWithClassName","react_default","p","esm_extends","classnames_default","CardImg","variant","objectWithoutPropertiesLoose","ThemeProvider","es_CardImg","DivStyledAsH5","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","react","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","t","e","module","exports","r","o","id","loaded","call","m","c","__esModule","default","defineProperty","i","u","s","f","l","d","h","y","v","b","g","_","x","O","j","w","S","P","F","key","addGraph","renderChart","bind","isCallable","ready","resizeHandler","clear","chart","rendering","models","type","renderStart","parsedProps","bindFunctions","context","getValueFunction","margin","options","pick","propsByPrefix","configureComponents","without","configure","selection","select","refs","svg","datum","utils","windowResize","update","pie","dispatch","lines","renderEnd","on","isPlainObject","chartOptions","containerStyle","style","hasOwnProperty","assign","G","B","W","_e","Function","window","Math","self","__g","version","__e","TypeError","Symbol","split","keys","join","getKeys","getSymbols","isEnum","create","getProto","getPrototypeOf","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getNames","getOwnPropertyNames","getOwnPropertySymbols","each","toString","slice","enumerable","configurable","writable","ReferenceError","constructor","get","JSON","E","stringify","M","k","C","D","N","T","q","z","_k","set","A","V","H","I","J","R","U","for","keyFor","useSetter","useSimple","_e2","random","Array","isArray","__proto__","setPrototypeOf","check","indexOf","includes","negate","filterObject","name","console","warn","reduce","substr","replace","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","d3_arraySlice","d3_array","list","d3_document","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","Date","now","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","min","max","extent","sum","mean","quantile","values","floor","median","numbers","sort","variance","deviation","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","range","start","stop","step","Infinity","Error","d3_range_integerScale","object","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","event","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","d3_requote_re","d3_subclass","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","attr","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","enter","exit","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","top","padding","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","parseRows","eol","EOL","EOF","rows","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","_x","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","L","Z","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","raw","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","transform","methods","_stream2","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","d3_geo_mercator","d3_geo_conicEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","createContextualFragment","json","responseXML","undefined","nv","dev","tooltip","charts","logs","dom","oThis","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","deprecated","info","render_start","renderLoop","graph","generate","render_end","obj","write","fastdom","mutate","read","measure","interactiveGuideline","height","xScale","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","availableWidth","availableHeight","mouseHandler","mouseX","mouseY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","tagName","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","guideLine","NaNtoZero","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","snapDistance","lastPosition","enabled","headerEnabled","valueFormatter","headerFormatter","keyFormatter","contentGenerator","elem","table","trowEnter","highlight","total","percent","opacityScale","outerHTML","footer","pos","client","dataSeriesExists","isObject","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","calcGravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","nvtooltip","newContent","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isFunction","isDate","isNumber","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","state","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","arg","every","deepExtend","dst","srcObj","_setState","_getState","init","getter","fn","settings","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","calls","inheritOptionsD3","oplist","_d3options","item","arrayUnique","symbolMap","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","tspan","getComputedTextLength","arrayEquals","array1","array2","pointIsInArc","pt","ptData","d3Arc","r2","theta1","dist","tickFormatMaxMin","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","axisLabelDistance","fmt","xLabelMargin","axisMaxMin","axisLabel","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","maxMinRange","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","getOlLabel","getOlColor","maxBoxWidth","yData","q3","wl","wh","olItems","boxplots","boxEnter","hover","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","gEnter","defsEnter","disabled","evt","tooltipContent","bullet","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","iA","iB","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","il","rangeClassNames","xp1","h3","markerData","marker","markerLinesData","bulletChart","title","subtitle","bulletWrap","candlestickBar","getY","getOpen","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","stateGetter","stateSetter","indexDrag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","showValues","valueFormat","rectClass","seriesData","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","xTickFormat","yTickFormat","forceDirectedGraph","linkDist","nodeExtras","linkExtras","nodeFieldSet","Set","nodeColor","furiousLegend","maxKeyLength","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","scatter","strokeWidth","isArea","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","hasOnlyNaN","hasNaN","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","donutRatio","arcsRadius","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arcOver","slices","pieLabels","ae","_current","labelsArc","rotateAngle","labelLocationHash","createHashKey","getSlicePercentage","hashKey","getBBox","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","nextNodes","remainingNodes","moveSinksRight","computeNodeBreadths","nodesByBreadth","initializeNodeDepth","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","ascendingSourceDepth","ascendingTargetDepth","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","nodeStyle","fillColor","strokeColor","xDom","yDom","width0","height0","timeoutID","pointBorderColor","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","pX","pY","pointArray","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","titles","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","yValues","maxPoint","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","modes","groupColorByParent","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","centerAngle","cG","sunburstChart"],"mappings":"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","file":"static/js/20.932ab17e.chunk.js","sourcesContent":["import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Row, _React$Component);\n\n  function Row() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Row.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        noGutters = _this$props.noGutters,\n        _this$props$as = _this$props.as,\n        Component = _this$props$as === void 0 ? 'div' : _this$props$as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix, noGutters && 'no-gutters')\n    }));\n  };\n\n  return Row;\n}(React.Component);\n\nRow.defaultProps = {\n  noGutters: false\n};\nexport default createBootstrapComponent(Row, 'row');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"d3\", \"nvd3\"], e) : \"object\" == typeof exports ? exports.NVD3Chart = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : t.NVD3Chart = e(t.React, t.d3, t.nv);\n}(this, function (t, e, n) {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var o = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var o = n(1),\n        i = r(o),\n        u = n(2),\n        c = r(u),\n        s = n(17),\n        a = r(s),\n        f = n(21),\n        p = r(f),\n        l = n(22),\n        d = r(l),\n        h = n(25),\n        y = r(h),\n        v = n(48),\n        b = r(v),\n        g = n(55),\n        m = r(g),\n        _ = n(56),\n        x = r(_),\n        O = n(57),\n        j = r(O),\n        w = n(58),\n        S = [\"x\", \"y\", \"type\", \"datum\", \"configure\"],\n        P = [\"width\", \"height\"],\n        E = \"margin\",\n        M = \"containerStyle\",\n        k = \"renderStart\",\n        C = \"renderEnd\",\n        D = \"ready\",\n        F = function (t) {\n      function e() {\n        return (0, p[\"default\"])(this, e), (0, y[\"default\"])(this, (0, a[\"default\"])(e).apply(this, arguments));\n      }\n\n      return (0, b[\"default\"])(e, t), (0, d[\"default\"])(e, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var t = this;\n          j[\"default\"].addGraph(this.renderChart.bind(this), function (e) {\n            (0, w.isCallable)(t.props.ready) && t.props.ready(e, D);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.renderChart();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this.resizeHandler && this.resizeHandler.clear();\n        }\n      }, {\n        key: \"renderChart\",\n        value: function value() {\n          var t = void 0;\n\n          switch (this.chart = this.chart && !this.rendering ? this.chart : j[\"default\"].models[this.props.type](), (0, w.isCallable)(this.props.renderStart) && this.props.renderStart(this.chart, k), this.parsedProps = (0, w.bindFunctions)(this.props, this.props.context), this.chart.x && this.chart.x((0, w.getValueFunction)(this.parsedProps.x, \"x\")), this.chart.y && this.chart.y((0, w.getValueFunction)(this.parsedProps.y, \"y\")), this.props.margin && this.chart.margin(this.options(E, w.pick).margin || (0, w.propsByPrefix)(\"margin\", this.props) || {}), this.configureComponents(this.chart, this.options(S.concat(M), w.without)), !this.props.configure || this.props.configure(this.chart), this.selection = x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart), this.resizeHandler || (this.resizeHandler = j[\"default\"].utils.windowResize(this.chart.update)), this.props.type) {\n            case \"pieChart\":\n              t = this.chart.pie.dispatch;\n              break;\n\n            case \"lineChart\":\n              t = this.chart.lines.dispatch;\n              break;\n\n            default:\n              t = this.chart.dispatch;\n          }\n\n          return t.renderEnd && t.on(\"renderEnd\", this.renderEnd.bind(this)), this.rendering = !0, this.chart;\n        }\n      }, {\n        key: \"renderEnd\",\n        value: function value(t) {\n          (0, w.isCallable)(this.props.renderEnd) && this.props.renderEnd(this.chart, C), this.rendering = !1;\n        }\n      }, {\n        key: \"configureComponents\",\n        value: function value(t, e) {\n          for (var n in e) {\n            var r = e[n];\n            t && ((0, w.isPlainObject)(r) ? this.configureComponents(t[n], r) : \"function\" == typeof t[n] && t[n](r));\n          }\n        }\n      }, {\n        key: \"options\",\n        value: function value(t, e) {\n          var n = this.parsedProps.options || this.parsedProps || this.props.chartOptions;\n          return (e = e || w.pick)(n, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = (0, w.pick)(this.props, P),\n              e = (0, c[\"default\"])({}, t, this.props.containerStyle);\n          return m[\"default\"].createElement(\"div\", {\n            ref: \"root\",\n            className: \"nv-chart\",\n            style: e\n          }, m[\"default\"].createElement(\"svg\", (0, i[\"default\"])({\n            ref: \"svg\"\n          }, t)));\n        }\n      }]), e;\n    }(m[\"default\"].Component);\n\n    e[\"default\"] = F, t.exports = F;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(2)[\"default\"];\n    e[\"default\"] = r || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(3),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(4), t.exports = n(7).Object.assign;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S + r.F, \"Object\", {\n      assign: n(10)\n    });\n  }, function (t, e, n) {\n    var r = n(6),\n        o = n(7),\n        i = n(8),\n        u = \"prototype\",\n        c = function c(t, e, n) {\n      var s,\n          a,\n          f,\n          p = t & c.F,\n          l = t & c.G,\n          d = t & c.S,\n          h = t & c.P,\n          y = t & c.B,\n          v = t & c.W,\n          b = l ? o : o[e] || (o[e] = {}),\n          g = l ? r : d ? r[e] : (r[e] || {})[u];\n      l && (n = e);\n\n      for (s in n) {\n        a = !p && g && s in g, a && s in b || (f = a ? g[s] : n[s], b[s] = l && \"function\" != typeof g[s] ? n[s] : y && a ? i(f, r) : v && g[s] == f ? function (t) {\n          var e = function e(_e) {\n            return this instanceof t ? new t(_e) : t(_e);\n          };\n\n          return e[u] = t[u], e;\n        }(f) : h && \"function\" == typeof f ? i(Function.call, f) : f, h && ((b[u] || (b[u] = {}))[s] = f));\n      }\n    };\n\n    c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, t.exports = c;\n  }, function (t, e) {\n    var n = t.exports = \"undefined\" != typeof window && window.Math == Math ? window : \"undefined\" != typeof self && self.Math == Math ? self : Function(\"return this\")();\n    \"number\" == typeof __g && (__g = n);\n  }, function (t, e) {\n    var n = t.exports = {\n      version: \"1.2.6\"\n    };\n    \"number\" == typeof __e && (__e = n);\n  }, function (t, e, n) {\n    var r = n(9);\n\n    t.exports = function (t, e, n) {\n      if (r(t), void 0 === e) return t;\n\n      switch (n) {\n        case 1:\n          return function (n) {\n            return t.call(e, n);\n          };\n\n        case 2:\n          return function (n, r) {\n            return t.call(e, n, r);\n          };\n\n        case 3:\n          return function (n, r, o) {\n            return t.call(e, n, r, o);\n          };\n      }\n\n      return function () {\n        return t.apply(e, arguments);\n      };\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"function\" != typeof t) throw TypeError(t + \" is not a function!\");\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(12),\n        i = n(14);\n    t.exports = n(16)(function () {\n      var t = Object.assign,\n          e = {},\n          n = {},\n          r = Symbol(),\n          o = \"abcdefghijklmnopqrst\";\n      return e[r] = 7, o.split(\"\").forEach(function (t) {\n        n[t] = t;\n      }), 7 != t({}, e)[r] || Object.keys(t({}, n)).join(\"\") != o;\n    }) ? function (t, e) {\n      for (var n = o(t), u = arguments, c = u.length, s = 1, a = r.getKeys, f = r.getSymbols, p = r.isEnum; c > s;) {\n        for (var l, d = i(u[s++]), h = f ? a(d).concat(f(d)) : a(d), y = h.length, v = 0; y > v;) {\n          p.call(d, l = h[v++]) && (n[l] = d[l]);\n        }\n      }\n\n      return n;\n    } : Object.assign;\n  }, function (t, e) {\n    var n = Object;\n    t.exports = {\n      create: n.create,\n      getProto: n.getPrototypeOf,\n      isEnum: {}.propertyIsEnumerable,\n      getDesc: n.getOwnPropertyDescriptor,\n      setDesc: n.defineProperty,\n      setDescs: n.defineProperties,\n      getKeys: n.keys,\n      getNames: n.getOwnPropertyNames,\n      getSymbols: n.getOwnPropertySymbols,\n      each: [].forEach\n    };\n  }, function (t, e, n) {\n    var r = n(13);\n\n    t.exports = function (t) {\n      return Object(r(t));\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 == t) throw TypeError(\"Can't call method on  \" + t);\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n    t.exports = Object(\"z\").propertyIsEnumerable(0) ? Object : function (t) {\n      return \"String\" == r(t) ? t.split(\"\") : Object(t);\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = function (t) {\n      return n.call(t).slice(8, -1);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      try {\n        return !!t();\n      } catch (e) {\n        return !0;\n      }\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(18),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(19), t.exports = n(7).Object.getPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"getPrototypeOf\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }, function (t, e, n) {\n    var r = n(5),\n        o = n(7),\n        i = n(16);\n\n    t.exports = function (t, e) {\n      var n = (o.Object || {})[t] || Object[t],\n          u = {};\n      u[t] = e(n), r(r.S + r.F * i(function () {\n        n(1);\n      }), \"Object\", u);\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    e[\"default\"] = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(23),\n        i = r(o);\n    e[\"default\"] = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var r = e[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), (0, i[\"default\"])(t, r.key, r);\n        }\n      }\n\n      return function (e, n, r) {\n        return n && t(e.prototype, n), r && t(e, r), e;\n      };\n    }(), e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(24),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e, n) {\n      return r.setDesc(t, e, n);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(26),\n        i = r(o);\n    e[\"default\"] = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" !== (\"undefined\" == typeof e ? \"undefined\" : (0, i[\"default\"])(e)) && \"function\" != typeof e ? t : e;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(27)[\"default\"];\n    e[\"default\"] = function (t) {\n      return t && t.constructor === r ? \"symbol\" : typeof t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(28),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(29), n(47), t.exports = n(7).Symbol;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(11),\n        o = n(6),\n        i = n(30),\n        u = n(31),\n        c = n(5),\n        s = n(32),\n        a = n(16),\n        f = n(35),\n        p = n(36),\n        l = n(38),\n        d = n(37),\n        h = n(39),\n        y = n(41),\n        v = n(42),\n        b = n(43),\n        g = n(44),\n        m = n(40),\n        _ = n(34),\n        x = r.getDesc,\n        O = r.setDesc,\n        j = r.create,\n        w = y.get,\n        S = o.Symbol,\n        P = o.JSON,\n        E = P && P.stringify,\n        M = !1,\n        k = d(\"_hidden\"),\n        C = r.isEnum,\n        D = f(\"symbol-registry\"),\n        F = f(\"symbols\"),\n        N = \"function\" == typeof S,\n        T = Object.prototype,\n        q = u && a(function () {\n      return 7 != j(O({}, \"a\", {\n        get: function get() {\n          return O(this, \"a\", {\n            value: 7\n          }).a;\n        }\n      })).a;\n    }) ? function (t, e, n) {\n      var r = x(T, e);\n      r && delete T[e], O(t, e, n), r && t !== T && O(T, e, r);\n    } : O,\n        z = function z(t) {\n      var e = F[t] = j(S.prototype);\n      return e._k = t, u && M && q(T, t, {\n        configurable: !0,\n        set: function set(e) {\n          i(this, k) && i(this[k], t) && (this[k][t] = !1), q(this, t, _(1, e));\n        }\n      }), e;\n    },\n        A = function A(t) {\n      return \"symbol\" == typeof t;\n    },\n        V = function V(t, e, n) {\n      return n && i(F, e) ? (n.enumerable ? (i(t, k) && t[k][e] && (t[k][e] = !1), n = j(n, {\n        enumerable: _(0, !1)\n      })) : (i(t, k) || O(t, k, _(1, {})), t[k][e] = !0), q(t, e, n)) : O(t, e, n);\n    },\n        W = function W(t, e) {\n      g(t);\n\n      for (var n, r = v(e = m(e)), o = 0, i = r.length; i > o;) {\n        V(t, n = r[o++], e[n]);\n      }\n\n      return t;\n    },\n        B = function B(t, e) {\n      return void 0 === e ? j(t) : W(j(t), e);\n    },\n        G = function G(t) {\n      var e = C.call(this, t);\n      return e || !i(this, t) || !i(F, t) || i(this, k) && this[k][t] ? e : !0;\n    },\n        H = function H(t, e) {\n      var n = x(t = m(t), e);\n      return !n || !i(F, e) || i(t, k) && t[k][e] || (n.enumerable = !0), n;\n    },\n        I = function I(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) || e == k || r.push(e);\n      }\n\n      return r;\n    },\n        J = function J(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) && r.push(F[e]);\n      }\n\n      return r;\n    },\n        K = function K(t) {\n      if (void 0 !== t && !A(t)) {\n        for (var e, n, r = [t], o = 1, i = arguments; i.length > o;) {\n          r.push(i[o++]);\n        }\n\n        return e = r[1], \"function\" == typeof e && (n = e), (n || !b(e)) && (e = function e(t, _e2) {\n          return n && (_e2 = n.call(this, t, _e2)), A(_e2) ? void 0 : _e2;\n        }), r[1] = e, E.apply(P, r);\n      }\n    },\n        R = a(function () {\n      var t = S();\n      return \"[null]\" != E([t]) || \"{}\" != E({\n        a: t\n      }) || \"{}\" != E(Object(t));\n    });\n\n    N || (S = function S() {\n      if (A(this)) throw TypeError(\"Symbol is not a constructor\");\n      return z(l(arguments.length > 0 ? arguments[0] : void 0));\n    }, s(S.prototype, \"toString\", function () {\n      return this._k;\n    }), A = function A(t) {\n      return t instanceof S;\n    }, r.create = B, r.isEnum = G, r.getDesc = H, r.setDesc = V, r.setDescs = W, r.getNames = y.get = I, r.getSymbols = J, u && !n(46) && s(T, \"propertyIsEnumerable\", G, !0));\n    var U = {\n      \"for\": function _for(t) {\n        return i(D, t += \"\") ? D[t] : D[t] = S(t);\n      },\n      keyFor: function keyFor(t) {\n        return h(D, t);\n      },\n      useSetter: function useSetter() {\n        M = !0;\n      },\n      useSimple: function useSimple() {\n        M = !1;\n      }\n    };\n    r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"), function (t) {\n      var e = d(t);\n      U[t] = N ? e : z(e);\n    }), M = !0, c(c.G + c.W, {\n      Symbol: S\n    }), c(c.S, \"Symbol\", U), c(c.S + c.F * !N, \"Object\", {\n      create: B,\n      defineProperty: V,\n      defineProperties: W,\n      getOwnPropertyDescriptor: H,\n      getOwnPropertyNames: I,\n      getOwnPropertySymbols: J\n    }), P && c(c.S + c.F * (!N || R), \"JSON\", {\n      stringify: K\n    }), p(S, \"Symbol\"), p(Math, \"Math\", !0), p(o.JSON, \"JSON\", !0);\n  }, function (t, e) {\n    var n = {}.hasOwnProperty;\n\n    t.exports = function (t, e) {\n      return n.call(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = !n(16)(function () {\n      return 7 != Object.defineProperty({}, \"a\", {\n        get: function get() {\n          return 7;\n        }\n      }).a;\n    });\n  }, function (t, e, n) {\n    t.exports = n(33);\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(34);\n    t.exports = n(31) ? function (t, e, n) {\n      return r.setDesc(t, e, o(1, n));\n    } : function (t, e, n) {\n      return t[e] = n, t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return {\n        enumerable: !(1 & t),\n        configurable: !(2 & t),\n        writable: !(4 & t),\n        value: e\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(6),\n        o = \"__core-js_shared__\",\n        i = r[o] || (r[o] = {});\n\n    t.exports = function (t) {\n      return i[t] || (i[t] = {});\n    };\n  }, function (t, e, n) {\n    var r = n(11).setDesc,\n        o = n(30),\n        i = n(37)(\"toStringTag\");\n\n    t.exports = function (t, e, n) {\n      t && !o(t = n ? t : t.prototype, i) && r(t, i, {\n        configurable: !0,\n        value: e\n      });\n    };\n  }, function (t, e, n) {\n    var r = n(35)(\"wks\"),\n        o = n(38),\n        i = n(6).Symbol;\n\n    t.exports = function (t) {\n      return r[t] || (r[t] = i && i[t] || (i || o)(\"Symbol.\" + t));\n    };\n  }, function (t, e) {\n    var n = 0,\n        r = Math.random();\n\n    t.exports = function (t) {\n      return \"Symbol(\".concat(void 0 === t ? \"\" : t, \")_\", (++n + r).toString(36));\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(40);\n\n    t.exports = function (t, e) {\n      for (var n, i = o(t), u = r.getKeys(i), c = u.length, s = 0; c > s;) {\n        if (i[n = u[s++]] === e) return n;\n      }\n    };\n  }, function (t, e, n) {\n    var r = n(14),\n        o = n(13);\n\n    t.exports = function (t) {\n      return r(o(t));\n    };\n  }, function (t, e, n) {\n    var r = n(40),\n        o = n(11).getNames,\n        i = {}.toString,\n        u = \"object\" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],\n        c = function c(t) {\n      try {\n        return o(t);\n      } catch (e) {\n        return u.slice();\n      }\n    };\n\n    t.exports.get = function (t) {\n      return u && \"[object Window]\" == i.call(t) ? c(t) : o(r(t));\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t) {\n      var e = r.getKeys(t),\n          n = r.getSymbols;\n      if (n) for (var o, i = n(t), u = r.isEnum, c = 0; i.length > c;) {\n        u.call(t, o = i[c++]) && e.push(o);\n      }\n      return e;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n\n    t.exports = Array.isArray || function (t) {\n      return \"Array\" == r(t);\n    };\n  }, function (t, e, n) {\n    var r = n(45);\n\n    t.exports = function (t) {\n      if (!r(t)) throw TypeError(t + \" is not an object!\");\n      return t;\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return \"object\" == typeof t ? null !== t : \"function\" == typeof t;\n    };\n  }, function (t, e) {\n    t.exports = !0;\n  }, function (t, e) {}, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(49)[\"default\"],\n        o = n(51)[\"default\"];\n    e[\"default\"] = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = r(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (o ? o(t, e) : t.__proto__ = e);\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(50),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e) {\n      return r.create(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(52),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(53), t.exports = n(7).Object.setPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S, \"Object\", {\n      setPrototypeOf: n(54).set\n    });\n  }, function (t, e, n) {\n    var r = n(11).getDesc,\n        o = n(45),\n        i = n(44),\n        u = function u(t, e) {\n      if (i(t), !o(e) && null !== e) throw TypeError(e + \": can't set as prototype!\");\n    };\n\n    t.exports = {\n      set: Object.setPrototypeOf || (\"__proto__\" in {} ? function (t, e, o) {\n        try {\n          o = n(8)(Function.call, r(Object.prototype, \"__proto__\").set, 2), o(t, []), e = !(t instanceof Array);\n        } catch (i) {\n          e = !0;\n        }\n\n        return function (t, n) {\n          return u(t, n), e ? t.__proto__ = n : o(t, n), t;\n        };\n      }({}, !1) : void 0),\n      check: u\n    };\n  }, function (e, n) {\n    e.exports = t;\n  }, function (t, n) {\n    t.exports = e;\n  }, function (t, e) {\n    t.exports = n;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    function o(t, e) {\n      return t.indexOf(e) >= 0;\n    }\n\n    function i(t) {\n      return function () {\n        return !t.apply(this, arguments);\n      };\n    }\n\n    function u(t, e, n) {\n      for (var r = {}, o = (0, m[\"default\"])(t), i = 0, u = o.length; u > i; i++) {\n        var c = o[i],\n            s = t[c];\n        n(e, c) && (r[c] = s);\n      }\n\n      return r;\n    }\n\n    function c(t, e) {\n      return u(t, e, o);\n    }\n\n    function s(t, e) {\n      return u(t, e, i(o));\n    }\n\n    function a(t) {\n      if (\"object\" == (\"undefined\" == typeof t ? \"undefined\" : (0, b[\"default\"])(t)) && null !== t) {\n        if (\"function\" == typeof y[\"default\"]) {\n          var e = (0, y[\"default\"])(t);\n          return e === Object.prototype || null === e;\n        }\n\n        return \"[object Object]\" == Object.prototype.toString.call(t);\n      }\n\n      return !1;\n    }\n\n    function f(t, e) {\n      var n, r, o;\n      n = Array.isArray(t) ? [] : {};\n\n      for (o in t) {\n        r = t[o], null != r && (\"object\" === (\"undefined\" == typeof r ? \"undefined\" : (0, b[\"default\"])(r)) && null !== r && \"function\" !== r.type ? n[o] = f(r, e) : \"function\" === r.type ? n[o] = e[r.name] : n[o] = r);\n      }\n\n      return n;\n    }\n\n    function p(t, e) {\n      return \"function\" == typeof t ? t : function (n) {\n        return \"undefined\" != typeof n[t] ? n[t] : n[e];\n      };\n    }\n\n    function l(t, e) {\n      return console.warn(\"Set margin with prefixes is deprecated use an object instead\"), t += \"-\", (0, m[\"default\"])(e).reduce(function (n, r) {\n        return r.substr(0, t.length) === t && (n[r.replace(t, \"\")] = e[r]), n;\n      }, {});\n    }\n\n    function d(t) {\n      return t && \"function\" == typeof t;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.includes = o, e.negate = i, e.filterObject = u, e.pick = c, e.without = s, e.isPlainObject = a, e.bindFunctions = f, e.getValueFunction = p, e.propsByPrefix = l, e.isCallable = d;\n    var h = n(17),\n        y = r(h),\n        v = n(26),\n        b = r(v),\n        g = n(59),\n        m = r(g);\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(60),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(61), t.exports = n(7).Object.keys;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"keys\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }]);\n});","!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function () {\n  // set up main nv object\n  var nv = {}; // the major global objects under the nv namespace\n\n  nv.dev = false; //set false when in production\n\n  nv.tooltip = nv.tooltip || {}; // For the tooltip system\n\n  nv.utils = nv.utils || {}; // Utility subsystem\n\n  nv.models = nv.models || {}; //stores all the possible models/components\n\n  nv.charts = {}; //stores all the ready to use charts\n\n  nv.logs = {}; //stores some statistics and potential error messages\n\n  nv.dom = {}; //DOM manipulation functions\n  // Node/CommonJS - require D3\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined' && typeof d3 == 'undefined') {\n    d3 = require('d3');\n  }\n\n  nv.dispatch = d3.dispatch('render_start', 'render_end'); // Function bind polyfill\n  // Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n  // https://github.com/ariya/phantomjs/issues/10522\n  // http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n  // phantomJS is used for running the test suite\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } //  Development render timers - disabled if dev = false\n\n\n  if (nv.dev) {\n    nv.dispatch.on('render_start', function (e) {\n      nv.logs.startTime = +new Date();\n    });\n    nv.dispatch.on('render_end', function (e) {\n      nv.logs.endTime = +new Date();\n      nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n      nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n  } // Logs all arguments, and returns the last so you can test things in place\n  // Note: in IE8 console.log is an object not a function, and if modernizr is used\n  // then calling Function.prototype.bind with with anything other than a function\n  // causes a TypeError to be thrown.\n\n\n  nv.log = function () {\n    if (nv.dev && window.console && console.log && console.log.apply) console.log.apply(console, arguments);else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n      var log = Function.prototype.bind.call(console.log, console);\n      log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n  }; // print console warning, should be used by deprecated functions\n\n\n  nv.deprecated = function (name, info) {\n    if (console && console.warn) {\n      console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n  }; // The nv.render function is used to queue up chart rendering\n  // in non-blocking async functions.\n  // When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\n\n  nv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function renderLoop() {\n      var chart, graph;\n\n      for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n        chart = graph.generate();\n        if (typeof graph.callback == typeof Function) graph.callback(chart);\n      }\n\n      nv.render.queue.splice(0, i);\n\n      if (nv.render.queue.length) {\n        setTimeout(renderLoop);\n      } else {\n        nv.dispatch.render_end();\n        nv.render.active = false;\n      }\n    };\n\n    setTimeout(renderLoop);\n  };\n\n  nv.render.active = false;\n  nv.render.queue = [];\n  /*\n  Adds a chart to the async rendering queue. This method can take arguments in two forms:\n  nv.addGraph({\n      generate: <Function>\n      callback: <Function>\n  })\n  \n  or\n  \n  nv.addGraph(<generate Function>, <callback Function>)\n  \n  The generate function should contain code that creates the NVD3 model, sets options\n  on it, adds data to an SVG element, and invokes the chart model. The generate function\n  should return the chart model.  See examples/lineChart.html for a usage example.\n  \n  The callback function is optional, and it is called when the generate function completes.\n  */\n\n  nv.addGraph = function (obj) {\n    if (typeof arguments[0] === typeof Function) {\n      obj = {\n        generate: arguments[0],\n        callback: arguments[1]\n      };\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n      nv.render();\n    }\n  }; // Node/CommonJS exports\n\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = nv;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.nv = nv;\n  }\n  /* Facade for queueing DOM write operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.write = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.mutate(callback);\n    }\n\n    return callback();\n  };\n  /* Facade for queueing DOM read operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.read = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.measure(callback);\n    }\n\n    return callback();\n  };\n  /* Utility class to handle creation of an interactive layer.\n   This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n   containing the X-coordinate. It can also render a vertical line where the mouse is located.\n  \n   dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n   the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n   It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n   */\n\n\n  nv.interactiveGuideline = function () {\n    \"use strict\";\n\n    var margin = {\n      left: 0,\n      top: 0 //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\n    },\n        width = null,\n        height = null,\n        xScale = d3.scale.linear(),\n        dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp'),\n        showGuideLine = true,\n        svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n    ,\n        tooltip = nv.models.tooltip(),\n        isMSIE = window.ActiveXObject // Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n    tooltip.duration(0).hideDelay(0).hidden(false);\n\n    function layer(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this);\n        var availableWidth = width || 960,\n            availableHeight = height || 400;\n        var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\").data([data]);\n        var wrapEnter = wrap.enter().append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n        wrapEnter.append(\"g\").attr(\"class\", \"nv-interactiveGuideLine\");\n\n        if (!svgContainer) {\n          return;\n        }\n\n        function mouseHandler() {\n          var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n          var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n          var subtractMargin = true;\n          var mouseOutAnyReason = false;\n\n          if (isMSIE) {\n            /*\n             D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n             d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n             over a rect in IE 10.\n             However, d3.event.offsetX/Y also returns the mouse coordinates\n             relative to the triggering <rect>. So we use offsetX/Y on IE.\n             */\n            mouseX = d3.event.offsetX;\n            mouseY = d3.event.offsetY;\n            /*\n             On IE, if you attach a mouse event listener to the <svg> container,\n             it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n             When this happens on IE, the offsetX/Y is set to where ever the child element\n             is located.\n             As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n             position under this scenario. Removing the line below *will* cause\n             the interactive layer to not work right on IE.\n             */\n\n            if (d3.event.target.tagName !== \"svg\") {\n              subtractMargin = false;\n            }\n\n            if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n              mouseOutAnyReason = true;\n            }\n          }\n\n          if (subtractMargin) {\n            mouseX -= margin.left;\n            mouseY -= margin.top;\n          }\n          /* If mouseX/Y is outside of the chart's bounds,\n           trigger a mouseOut event.\n           */\n\n\n          if (d3.event.type === 'mouseout' || mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) {\n            if (isMSIE) {\n              if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && (d3.event.relatedTarget.className === undefined || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n                return;\n              }\n            }\n\n            dispatch.elementMouseout({\n              mouseX: mouseX,\n              mouseY: mouseY\n            });\n            layer.renderGuideLine(null); //hide the guideline\n\n            tooltip.hidden(true);\n            return;\n          } else {\n            tooltip.hidden(false);\n          }\n\n          var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n          var pointXValue = undefined; // Ordinal scale has no invert method\n\n          if (scaleIsOrdinal) {\n            var elementIndex = d3.bisect(xScale.range(), mouseX) - 1; // Check if mouseX is in the range band\n\n            if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n              pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n            } else {\n              dispatch.elementMouseout({\n                mouseX: mouseX,\n                mouseY: mouseY\n              });\n              layer.renderGuideLine(null); //hide the guideline\n\n              tooltip.hidden(true);\n              return;\n            }\n          } else {\n            pointXValue = xScale.invert(mouseX);\n          }\n\n          dispatch.elementMousemove({\n            mouseX: mouseX,\n            mouseY: mouseY,\n            pointXValue: pointXValue\n          }); //If user double clicks the layer, fire a elementDblclick\n\n          if (d3.event.type === \"dblclick\") {\n            dispatch.elementDblclick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user single clicks the layer, fire elementClick\n\n\n          if (d3.event.type === 'click') {\n            dispatch.elementClick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseDown\n\n\n          if (d3.event.type === 'mousedown') {\n            dispatch.elementMouseDown({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseUp\n\n\n          if (d3.event.type === 'mouseup') {\n            dispatch.elementMouseUp({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          }\n        }\n\n        svgContainer.on(\"touchmove\", mouseHandler).on(\"mousemove\", mouseHandler, true).on(\"mouseout\", mouseHandler, true).on(\"mousedown\", mouseHandler, true).on(\"mouseup\", mouseHandler, true).on(\"dblclick\", mouseHandler).on(\"click\", mouseHandler);\n        layer.guideLine = null; //Draws a vertical guideline at the given X postion.\n\n        layer.renderGuideLine = function (x) {\n          if (!showGuideLine) return;\n          if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n          nv.dom.write(function () {\n            var line = wrap.select(\".nv-interactiveGuideLine\").selectAll(\"line\").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String);\n            line.enter().append(\"line\").attr(\"class\", \"nv-guideline\").attr(\"x1\", function (d) {\n              return d;\n            }).attr(\"x2\", function (d) {\n              return d;\n            }).attr(\"y1\", availableHeight).attr(\"y2\", 0);\n            line.exit().remove();\n          });\n        };\n      });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return layer;\n    };\n\n    layer.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return layer;\n    };\n\n    layer.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return layer;\n    };\n\n    layer.xScale = function (_) {\n      if (!arguments.length) return xScale;\n      xScale = _;\n      return layer;\n    };\n\n    layer.showGuideLine = function (_) {\n      if (!arguments.length) return showGuideLine;\n      showGuideLine = _;\n      return layer;\n    };\n\n    layer.svgContainer = function (_) {\n      if (!arguments.length) return svgContainer;\n      svgContainer = _;\n      return layer;\n    };\n\n    return layer;\n  };\n  /* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n   This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n  \n   For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n   Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n   because 28 is closer to 30 than 10.\n  \n   Unit tests can be found in: interactiveBisectTest.html\n  \n   Has the following known issues:\n   * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n   * Won't work if there are duplicate x coordinate values.\n   */\n\n\n  nv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n\n    if (!(values instanceof Array)) {\n      return null;\n    }\n\n    var _xAccessor;\n\n    if (typeof xAccessor !== 'function') {\n      _xAccessor = function _xAccessor(d) {\n        return d.x;\n      };\n    } else {\n      _xAccessor = xAccessor;\n    }\n\n    var _cmp = function _cmp(d, v) {\n      // Accessors are no longer passed the index of the element along with\n      // the element itself when invoked by d3.bisector.\n      //\n      // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n      // function passed to determine if it should consider it an accessor\n      // or a comparator. This meant that accessors that take two arguments\n      // (expecting an index as the second parameter) are treated as\n      // comparators where the second argument is the search value against\n      // which the first argument is compared.\n      return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values, searchVal) - 1]);\n\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n      currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n      return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index + 1, values.length - 1]);\n\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n      nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n      return index;\n    } else {\n      return nextIndex;\n    }\n  };\n  /*\n   Returns the index in the array \"values\" that is closest to searchVal.\n   Only returns an index if searchVal is within some \"threshold\".\n   Otherwise, returns null.\n   */\n\n\n  nv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n\n    var yDistMax = Infinity,\n        indexToHighlight = null;\n    values.forEach(function (d, i) {\n      var delta = Math.abs(searchVal - d);\n\n      if (d != null && delta <= yDistMax && delta < threshold) {\n        yDistMax = delta;\n        indexToHighlight = i;\n      }\n    });\n    return indexToHighlight;\n  };\n  /* Model which can be instantiated to handle tooltip rendering.\n   Example usage:\n   var tip = nv.models.tooltip().gravity('w').distance(23)\n   .data(myDataObject);\n  \n   tip();    //just invoke the returned function to render tooltip.\n   */\n\n\n  nv.models.tooltip = function () {\n    \"use strict\";\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n    ,\n        data = null,\n        gravity = 'w' // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n    ,\n        distance = 25 // Distance to offset tooltip from the mouse location.\n    ,\n        snapDistance = 0 // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n    ,\n        classes = null // Attaches additional CSS classes to the tooltip DIV that is created.\n    ,\n        hidden = true // Start off hidden, toggle with hide/show functions below.\n    ,\n        hideDelay = 200 // Delay (in ms) before the tooltip hides after calling hide().\n    ,\n        tooltip = null // d3 select of the tooltip div.\n    ,\n        lastPosition = {\n      left: null,\n      top: null // Last position the tooltip was in.\n\n    },\n        enabled = true // True -> tooltips are rendered. False -> don't render tooltips.\n    ,\n        duration = 100 // Tooltip movement duration, in ms.\n    ,\n        headerEnabled = true // If is to show the tooltip header.\n    ,\n        nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ; // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n\n    var valueFormatter = function valueFormatter(d, i, p) {\n      return d;\n    }; // Format function for the tooltip header value.\n\n\n    var headerFormatter = function headerFormatter(d) {\n      return d;\n    };\n\n    var keyFormatter = function keyFormatter(d, i) {\n      return d;\n    }; // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n\n\n    var contentGenerator = function contentGenerator(d, elem) {\n      if (d === null) {\n        return '';\n      }\n\n      var table = d3.select(document.createElement(\"table\"));\n\n      if (headerEnabled) {\n        var theadEnter = table.selectAll(\"thead\").data([d]).enter().append(\"thead\");\n        theadEnter.append(\"tr\").append(\"td\").attr(\"colspan\", 3).append(\"strong\").classed(\"x-value\", true).html(headerFormatter(d.value));\n      }\n\n      var tbodyEnter = table.selectAll(\"tbody\").data([d]).enter().append(\"tbody\");\n      var trowEnter = tbodyEnter.selectAll(\"tr\").data(function (p) {\n        return p.series;\n      }).enter().append(\"tr\").classed(\"highlight\", function (p) {\n        return p.highlight;\n      });\n      trowEnter.append(\"td\").classed(\"legend-color-guide\", true).append(\"div\").style(\"background-color\", function (p) {\n        return p.color;\n      });\n      trowEnter.append(\"td\").classed(\"key\", true).classed(\"total\", function (p) {\n        return !!p.total;\n      }).html(function (p, i) {\n        return keyFormatter(p.key, i);\n      });\n      trowEnter.append(\"td\").classed(\"value\", true).html(function (p, i) {\n        return valueFormatter(p.value, i, p);\n      });\n      trowEnter.filter(function (p, i) {\n        return p.percent !== undefined;\n      }).append(\"td\").classed(\"percent\", true).html(function (p, i) {\n        return \"(\" + d3.format('%')(p.percent) + \")\";\n      });\n      trowEnter.selectAll(\"td\").each(function (p) {\n        if (p.highlight) {\n          var opacityScale = d3.scale.linear().domain([0, 1]).range([\"#fff\", p.color]);\n          var opacity = 0.6;\n          d3.select(this).style(\"border-bottom-color\", opacityScale(opacity)).style(\"border-top-color\", opacityScale(opacity));\n        }\n      });\n      var html = table.node().outerHTML;\n      if (d.footer !== undefined) html += \"<div class='footer'>\" + d.footer + \"</div>\";\n      return html;\n    };\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n\n\n    var position = function position() {\n      var pos = {\n        left: d3.event !== null ? d3.event.clientX : 0,\n        top: d3.event !== null ? d3.event.clientY : 0\n      };\n\n      if (getComputedStyle(document.body).transform != 'none') {\n        // Take the offset into account, as now the tooltip is relative\n        // to document.body.\n        var client = document.body.getBoundingClientRect();\n        pos.left -= client.left;\n        pos.top -= client.top;\n      }\n\n      return pos;\n    };\n\n    var dataSeriesExists = function dataSeriesExists(d) {\n      if (d && d.series) {\n        if (nv.utils.isArray(d.series)) {\n          return true;\n        } // if object, it's okay just convert to array of the object\n\n\n        if (nv.utils.isObject(d.series)) {\n          d.series = [d.series];\n          return true;\n        }\n      }\n\n      return false;\n    }; // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n\n\n    var calcGravityOffset = function calcGravityOffset(pos) {\n      var height = tooltip.node().offsetHeight,\n          width = tooltip.node().offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          // Don't want scrollbars.\n      clientHeight = document.documentElement.clientHeight,\n          // Don't want scrollbars.\n      left,\n          top,\n          tmp; // calculate position based on gravity\n\n      switch (gravity) {\n        case 'e':\n          left = -width - distance;\n          top = -(height / 2);\n          if (pos.left + left < 0) left = distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'w':\n          left = distance;\n          top = -(height / 2);\n          if (pos.left + left + width > clientWidth) left = -width - distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'n':\n          left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\n          top = distance;\n          if (pos.top + top + height > clientHeight) top = -height - distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 's':\n          left = -(width / 2);\n          top = -height - distance;\n          if (pos.top + top < 0) top = distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 'center':\n          left = -(width / 2);\n          top = -(height / 2);\n          break;\n\n        default:\n          left = 0;\n          top = 0;\n          break;\n      }\n\n      return {\n        'left': left,\n        'top': top\n      };\n    };\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n\n\n    var positionTooltip = function positionTooltip() {\n      nv.dom.read(function () {\n        var pos = position(),\n            gravityOffset = calcGravityOffset(pos),\n            left = pos.left + gravityOffset.left,\n            top = pos.top + gravityOffset.top; // delay hiding a bit to avoid flickering\n\n        if (hidden) {\n          tooltip.interrupt().transition().delay(hideDelay).duration(0).style('opacity', 0);\n        } else {\n          // using tooltip.style('transform') returns values un-usable for tween\n          var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n          var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n          var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n          var is_hidden = tooltip.style('opacity') < 0.1;\n          tooltip.interrupt() // cancel running transitions\n          .transition().duration(is_hidden ? 0 : duration) // using tween since some versions of d3 can't auto-tween a translate on a div\n          .styleTween('transform', function (d) {\n            return translateInterpolator;\n          }, 'important') // Safari has its own `-webkit-transform` and does not support `transform`\n          .styleTween('-webkit-transform', function (d) {\n            return translateInterpolator;\n          }).style('-ms-transform', new_translate).style('opacity', 1);\n        }\n\n        lastPosition.left = left;\n        lastPosition.top = top;\n      });\n    }; // Creates new tooltip container, or uses existing one on DOM.\n\n\n    function initTooltip() {\n      if (!tooltip || !tooltip.node()) {\n        // Create new tooltip div if it doesn't exist on DOM.\n        var data = [1];\n        tooltip = d3.select(document.body).select('#' + id).data(data);\n        tooltip.enter().append('div').attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\")).attr(\"id\", id).style(\"top\", 0).style(\"left\", 0).style('opacity', 0).style('position', 'fixed').selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true).classed(nvPointerEventsClass, true);\n        tooltip.exit().remove();\n      }\n    } // Draw the tooltip onto the DOM.\n\n\n    function nvtooltip() {\n      if (!enabled) return;\n      if (!dataSeriesExists(data)) return;\n      nv.dom.write(function () {\n        initTooltip(); // Generate data and set it into tooltip.\n        // Bonus - If you override contentGenerator and return false, you can use something like\n        //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n\n        var newContent = contentGenerator(data, tooltip.node());\n\n        if (newContent) {\n          tooltip.node().innerHTML = newContent;\n        }\n\n        positionTooltip();\n      });\n      return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n    nvtooltip._options = Object.create({}, {\n      // simple read/write options\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      distance: {\n        get: function get() {\n          return distance;\n        },\n        set: function set(_) {\n          distance = _;\n        }\n      },\n      snapDistance: {\n        get: function get() {\n          return snapDistance;\n        },\n        set: function set(_) {\n          snapDistance = _;\n        }\n      },\n      classes: {\n        get: function get() {\n          return classes;\n        },\n        set: function set(_) {\n          classes = _;\n        }\n      },\n      enabled: {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(_) {\n          enabled = _;\n        }\n      },\n      hideDelay: {\n        get: function get() {\n          return hideDelay;\n        },\n        set: function set(_) {\n          hideDelay = _;\n        }\n      },\n      contentGenerator: {\n        get: function get() {\n          return contentGenerator;\n        },\n        set: function set(_) {\n          contentGenerator = _;\n        }\n      },\n      valueFormatter: {\n        get: function get() {\n          return valueFormatter;\n        },\n        set: function set(_) {\n          valueFormatter = _;\n        }\n      },\n      headerFormatter: {\n        get: function get() {\n          return headerFormatter;\n        },\n        set: function set(_) {\n          headerFormatter = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      headerEnabled: {\n        get: function get() {\n          return headerEnabled;\n        },\n        set: function set(_) {\n          headerEnabled = _;\n        }\n      },\n      position: {\n        get: function get() {\n          return position;\n        },\n        set: function set(_) {\n          position = _;\n        }\n      },\n      // Deprecated options\n      chartContainer: {\n        get: function get() {\n          return document.body;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.3\n          nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }\n      },\n      fixedTop: {\n        get: function get() {\n          return null;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }\n      },\n      offset: {\n        get: function get() {\n          return {\n            left: 0,\n            top: 0\n          };\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }\n      },\n      // options with extra logic\n      hidden: {\n        get: function get() {\n          return hidden;\n        },\n        set: function set(_) {\n          if (hidden != _) {\n            hidden = !!_;\n            nvtooltip();\n          }\n        }\n      },\n      data: {\n        get: function get() {\n          return data;\n        },\n        set: function set(_) {\n          // if showing a single data point, adjust data format with that\n          if (_.point) {\n            _.value = _.point.x;\n            _.series = _.series || {};\n            _.series.value = _.point.y;\n            _.series.color = _.point.color || _.series.color;\n          }\n\n          data = _;\n        }\n      },\n      // read only properties\n      node: {\n        get: function get() {\n          return tooltip.node();\n        },\n        set: function set(_) {}\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {}\n      }\n    });\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n  };\n  /*\n  Gets the browser window size\n  \n  Returns object with height and width properties\n   */\n\n\n  nv.utils.windowSize = function () {\n    // Sane defaults\n    var size = {\n      width: 640,\n      height: 480\n    }; // Most recent browsers use\n\n    if (window.innerWidth && window.innerHeight) {\n      size.width = window.innerWidth;\n      size.height = window.innerHeight;\n      return size;\n    } // IE can use depending on mode it is in\n\n\n    if (document.compatMode == 'CSS1Compat' && document.documentElement && document.documentElement.offsetWidth) {\n      size.width = document.documentElement.offsetWidth;\n      size.height = document.documentElement.offsetHeight;\n      return size;\n    } // Earlier IE uses Doc.body\n\n\n    if (document.body && document.body.offsetWidth) {\n      size.width = document.body.offsetWidth;\n      size.height = document.body.offsetHeight;\n      return size;\n    }\n\n    return size;\n  };\n  /* handle dumb browser quirks...  isinstance breaks if you use frames\n  typeof returns 'object' for null, NaN is a number, etc.\n   */\n\n\n  nv.utils.isArray = Array.isArray;\n\n  nv.utils.isObject = function (a) {\n    return a !== null && typeof a === 'object';\n  };\n\n  nv.utils.isFunction = function (a) {\n    return typeof a === 'function';\n  };\n\n  nv.utils.isDate = function (a) {\n    return toString.call(a) === '[object Date]';\n  };\n\n  nv.utils.isNumber = function (a) {\n    return !isNaN(a) && typeof a === 'number';\n  };\n  /*\n  Binds callback function to run when window is resized\n   */\n\n\n  nv.utils.windowResize = function (handler) {\n    if (window.addEventListener) {\n      window.addEventListener('resize', handler);\n    } else {\n      nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    } // return object with clear function to remove the single added callback.\n\n\n    return {\n      callback: handler,\n      clear: function clear() {\n        window.removeEventListener('resize', handler);\n      }\n    };\n  };\n  /*\n  Backwards compatible way to implement more d3-like coloring of graphs.\n  Can take in nothing, an array, or a function/scale\n  To use a normal scale, get the range and pass that because we must be able\n  to take two arguments and use the index to keep backward compatibility\n  */\n\n\n  nv.utils.getColor = function (color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n      return nv.utils.defaultColor(); //if passed an array, turn it into a color scale\n    } else if (nv.utils.isArray(color)) {\n      var color_scale = d3.scale.ordinal().range(color);\n      return function (d, i) {\n        var key = i === undefined ? d : i;\n        return d.color || color_scale(key);\n      }; //if passed a function or scale, return it, or whatever it may be\n      //external libs, such as angularjs-nvd3-directives use this\n    } else {\n      //can't really help it if someone passes rubbish as color\n      return color;\n    }\n  };\n  /*\n  Default color chooser uses a color scale of 20 colors from D3\n   https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n   */\n\n\n  nv.utils.defaultColor = function () {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n  };\n  /*\n  Returns a color function that takes the result of 'getKey' for each series and\n  looks for a corresponding color from the dictionary\n  */\n\n\n  nv.utils.customTheme = function (dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function (series) {\n      return series.key;\n    };\n\n    defaultColors = defaultColors || d3.scale.category20().range(); // start at end of default color list and walk back to index 0\n\n    var defIndex = defaultColors.length;\n    return function (series, index) {\n      var key = getKey(series);\n\n      if (nv.utils.isFunction(dictionary[key])) {\n        return dictionary[key]();\n      } else if (dictionary[key] !== undefined) {\n        return dictionary[key];\n      } else {\n        // no match in dictionary, use a default color\n        if (!defIndex) {\n          // used all the default colors, start over\n          defIndex = defaultColors.length;\n        }\n\n        defIndex = defIndex - 1;\n        return defaultColors[defIndex];\n      }\n    };\n  };\n  /*\n  From the PJAX example on d3js.org, while this is not really directly needed\n  it's a very cool method for doing pjax, I may expand upon it a little bit,\n  open to suggestions on anything that may be useful\n  */\n\n\n  nv.utils.pjax = function (links, content) {\n    var load = function load(href) {\n      d3.html(href, function (fragment) {\n        var target = d3.select(content).node();\n        target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target);\n        nv.utils.pjax(links, content);\n      });\n    };\n\n    d3.selectAll(links).on(\"click\", function () {\n      history.pushState(this.href, this.textContent, this.href);\n      load(this.href);\n      d3.event.preventDefault();\n    });\n    d3.select(window).on(\"popstate\", function () {\n      if (d3.event.state) {\n        load(d3.event.state);\n      }\n    });\n  };\n  /*\n  For when we want to approximate the width in pixels for an SVG:text element.\n  Most common instance is when the element is in a display:none; container.\n  Forumla is : text.length * font-size * constant_factor\n  */\n\n\n  nv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n      var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\", \"\"), 10);\n      var textLength = svgTextElem.text().length;\n      return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n\n    return 0;\n  };\n  /*\n  Numbers that are undefined, null or NaN, convert them to zeros.\n  */\n\n\n  nv.utils.NaNtoZero = function (n) {\n    if (!nv.utils.isNumber(n) || isNaN(n) || n === null || n === Infinity || n === -Infinity) {\n      return 0;\n    }\n\n    return n;\n  };\n  /*\n  Add a way to watch for d3 transition ends to d3\n  */\n\n\n  d3.selection.prototype.watchTransition = function (renderWatch) {\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n  };\n  /*\n  Helper object to watch when d3 has rendered something\n  */\n\n\n  nv.utils.renderWatch = function (dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n      return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n\n    var renderStack = [];\n    var self = this;\n\n    this.models = function (models) {\n      models = [].slice.call(arguments, 0);\n      models.forEach(function (model) {\n        model.__rendered = false;\n\n        (function (m) {\n          m.dispatch.on('renderEnd', function (arg) {\n            m.__rendered = true;\n            self.renderEnd('model');\n          });\n        })(model);\n\n        if (renderStack.indexOf(model) < 0) {\n          renderStack.push(model);\n        }\n      });\n      return this;\n    };\n\n    this.reset = function (duration) {\n      if (duration !== undefined) {\n        _duration = duration;\n      }\n\n      renderStack = [];\n    };\n\n    this.transition = function (selection, args, duration) {\n      args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n      if (args.length > 1) {\n        duration = args.pop();\n      } else {\n        duration = _duration !== undefined ? _duration : 250;\n      }\n\n      selection.__rendered = false;\n\n      if (renderStack.indexOf(selection) < 0) {\n        renderStack.push(selection);\n      }\n\n      if (duration === 0) {\n        selection.__rendered = true;\n\n        selection.delay = function () {\n          return this;\n        };\n\n        selection.duration = function () {\n          return this;\n        };\n\n        return selection;\n      } else {\n        if (selection.length === 0) {\n          selection.__rendered = true;\n        } else if (selection.every(function (d) {\n          return !d.length;\n        })) {\n          selection.__rendered = true;\n        } else {\n          selection.__rendered = false;\n        }\n\n        var n = 0;\n        return selection.transition().duration(duration).each(function () {\n          ++n;\n        }).each('end', function (d, i) {\n          if (--n === 0) {\n            selection.__rendered = true;\n            self.renderEnd.apply(this, args);\n          }\n        });\n      }\n    };\n\n    this.renderEnd = function () {\n      if (renderStack.every(function (d) {\n        return d.__rendered;\n      })) {\n        renderStack.forEach(function (d) {\n          d.__rendered = false;\n        });\n        dispatch.renderEnd.apply(this, arguments);\n      }\n    };\n  };\n  /*\n  Takes multiple objects and combines them into the first one (dst)\n  example:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n  gives:  {a: 2, b: 3, c: 4}\n  */\n\n\n  nv.utils.deepExtend = function (dst) {\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function (source) {\n      for (var key in source) {\n        var isArray = nv.utils.isArray(dst[key]);\n        var isObject = nv.utils.isObject(dst[key]);\n        var srcObj = nv.utils.isObject(source[key]);\n\n        if (isObject && !isArray && srcObj) {\n          nv.utils.deepExtend(dst[key], source[key]);\n        } else {\n          dst[key] = source[key];\n        }\n      }\n    });\n  };\n  /*\n  state utility object, used to track d3 states in the models\n  */\n\n\n  nv.utils.state = function () {\n    if (!(this instanceof nv.utils.state)) {\n      return new nv.utils.state();\n    }\n\n    var state = {};\n\n    var _self = this;\n\n    var _setState = function _setState() {};\n\n    var _getState = function _getState() {\n      return {};\n    };\n\n    var init = null;\n    var changed = null;\n    this.dispatch = d3.dispatch('change', 'set');\n    this.dispatch.on('set', function (state) {\n      _setState(state, true);\n    });\n\n    this.getter = function (fn) {\n      _getState = fn;\n      return this;\n    };\n\n    this.setter = function (fn, callback) {\n      if (!callback) {\n        callback = function callback() {};\n      }\n\n      _setState = function _setState(state, update) {\n        fn(state);\n\n        if (update) {\n          callback();\n        }\n      };\n\n      return this;\n    };\n\n    this.init = function (state) {\n      init = init || {};\n      nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function _set() {\n      var settings = _getState();\n\n      if (JSON.stringify(settings) === JSON.stringify(state)) {\n        return false;\n      }\n\n      for (var key in settings) {\n        if (state[key] === undefined) {\n          state[key] = {};\n        }\n\n        state[key] = settings[key];\n        changed = true;\n      }\n\n      return true;\n    };\n\n    this.update = function () {\n      if (init) {\n        _setState(init, false);\n\n        init = null;\n      }\n\n      if (_set.call(this)) {\n        this.dispatch.change(state);\n      }\n    };\n  };\n  /*\n  Snippet of code you can insert into each nv.models.* to give you the ability to\n  do things like:\n  chart.options({\n    showXAxis: true,\n    tooltips: true\n  });\n  \n  To enable in the chart:\n  chart.options = nv.utils.optionsFunc.bind(chart);\n  */\n\n\n  nv.utils.optionsFunc = function (args) {\n    if (args) {\n      d3.map(args).forEach(function (key, value) {\n        if (nv.utils.isFunction(this[key])) {\n          this[key](value);\n        }\n      }.bind(this));\n    }\n\n    return this;\n  };\n  /*\n  numTicks:  requested number of ticks\n  data:  the chart data\n  \n  returns the number of ticks to actually use on X axis, based on chart data\n  to avoid duplicate ticks with the same value\n  */\n\n\n  nv.utils.calcTicksX = function (numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n\n    for (i; i < data.length; i += 1) {\n      var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n      numValues = stream_len > numValues ? stream_len : numValues;\n    }\n\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues); // make sure we don't have more ticks than values to avoid duplicates\n\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks; // make sure we have at least one tick\n\n    numTicks = numTicks < 1 ? 1 : numTicks; // make sure it's an integer\n\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n  };\n  /*\n  returns number of ticks to actually use on Y axis, based on chart data\n  */\n\n\n  nv.utils.calcTicksY = function (numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n  };\n  /*\n  Add a particular option from an options object onto chart\n  Options exposed on a chart are a getter/setter function that returns chart\n  on set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n  \n  option objects should be generated via Object.create() to provide\n  the option of manipulating data via get/set functions.\n  */\n\n\n  nv.utils.initOption = function (chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n      chart[name] = chart._calls[name];\n    } else {\n      chart[name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n        chart._overrides[name] = true;\n        chart._options[name] = _;\n        return chart;\n      }; // calling the option as _option will ignore if set by option already\n      // so nvd3 can set options internally but the stop if set manually\n\n\n      chart['_' + name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n\n        if (!chart._overrides[name]) {\n          chart._options[name] = _;\n        }\n\n        return chart;\n      };\n    }\n  };\n  /*\n  Add all options in an options object to the chart\n  */\n\n\n  nv.utils.initOptions = function (chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n\n    for (var i in ops) {\n      nv.utils.initOption(chart, ops[i]);\n    }\n  };\n  /*\n  Inherit options from a D3 object\n  d3.rebind makes calling the function on target actually call it on source\n  Also use _d3options so we can track what we inherit for documentation and chained inheritance\n  */\n\n\n  nv.utils.inheritOptionsD3 = function (target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []); // Find unique d3 options (string) and update d3options\n\n    target._d3options = (target._d3options || []).filter(function (item, i, ar) {\n      return ar.indexOf(item) === i;\n    });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n  };\n  /*\n  Remove duplicates from an array\n  */\n\n\n  nv.utils.arrayUnique = function (a) {\n    return a.sort().filter(function (item, pos) {\n      return !pos || item != a[pos - 1];\n    });\n  };\n  /*\n  Keeps a list of custom symbols to draw from in addition to d3.svg.symbol\n  Necessary since d3 doesn't let you extend its list -_-\n  Add new symbols by doing nv.utils.symbols.set('name', function(size){...});\n  */\n\n\n  nv.utils.symbolMap = d3.map();\n  /*\n  Replaces d3.svg.symbol so that we can look both there and our own map\n   */\n\n  nv.utils.symbol = function () {\n    var type,\n        size = 64;\n\n    function symbol(d, i) {\n      var t = type.call(this, d, i);\n      var s = size.call(this, d, i);\n\n      if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n        return d3.svg.symbol().type(t).size(s)();\n      } else {\n        return nv.utils.symbolMap.get(t)(s);\n      }\n    }\n\n    symbol.type = function (_) {\n      if (!arguments.length) return type;\n      type = d3.functor(_);\n      return symbol;\n    };\n\n    symbol.size = function (_) {\n      if (!arguments.length) return size;\n      size = d3.functor(_);\n      return symbol;\n    };\n\n    return symbol;\n  };\n  /*\n  Inherit option getter/setter functions from source to target\n  d3.rebind makes calling the function on target actually call it on source\n  Also track via _inherited and _d3options so we can track what we inherit\n  for documentation generation purposes and chained inheritance\n  */\n\n\n  nv.utils.inheritOptions = function (target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args); // pass along the lists to keep track of them, don't allow duplicates\n\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n  };\n  /*\n  Runs common initialize code on the svg before the chart builds\n  */\n\n\n  nv.utils.initSVG = function (svg) {\n    svg.classed({\n      'nvd3-svg': true\n    });\n  };\n  /*\n  Sanitize and provide default for the container height.\n  */\n\n\n  nv.utils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n  };\n  /*\n  Sanitize and provide default for the container width.\n  */\n\n\n  nv.utils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n  };\n  /*\n  Calculate the available height for a chart.\n  */\n\n\n  nv.utils.availableHeight = function (height, container, margin) {\n    return Math.max(0, nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n  };\n  /*\n  Calculate the available width for a chart.\n  */\n\n\n  nv.utils.availableWidth = function (width, container, margin) {\n    return Math.max(0, nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n  };\n  /*\n  Clear any rendered chart components and display a chart's 'noData' message\n  */\n\n\n  nv.utils.noData = function (chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = noData == null ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width / 2,\n        y = margin.top + height / 2; //Remove any previously created chart components\n\n    container.selectAll('g').remove();\n    var noDataText = container.selectAll('.nv-noData').data(data);\n    noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n    noDataText.attr('x', x).attr('y', y).text(function (t) {\n      return t;\n    });\n  };\n  /*\n   Wrap long labels.\n   */\n\n\n  nv.utils.wrapTicks = function (text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1,\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  };\n  /*\n  Check equality of 2 array\n  */\n\n\n  nv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2) return true;\n    if (!array1 || !array2) return false; // compare lengths - can save a lot of time\n\n    if (array1.length != array2.length) return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (array1[i] instanceof Array && array2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!nv.arrayEquals(array1[i], array2[i])) return false;\n      } else if (array1[i] != array2[i]) {\n        // Warning - two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /*\n   Check if a point within an arc\n   */\n\n\n  nv.utils.pointIsInArc = function (pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData),\n        // Note: Using the innerRadius\n    r2 = d3Arc.outerRadius()(ptData),\n        theta1 = d3Arc.startAngle()(ptData),\n        theta2 = d3Arc.endAngle()(ptData);\n    var dist = pt.x * pt.x + pt.y * pt.y,\n        angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = angle < 0 ? angle + Math.PI * 2 : angle;\n    return r1 * r1 <= dist && dist <= r2 * r2 && theta1 <= angle && angle <= theta2;\n  };\n\n  nv.models.axis = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 75 //only used for tickLabel currently\n    ,\n        height = 60 //only used for tickLabel currently\n    ,\n        axisLabelText = null,\n        showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n    ,\n        rotateLabels = 0,\n        rotateYLabel = true,\n        staggerLabels = false,\n        isOrdinal = false,\n        ticks = null,\n        axisLabelDistance = 0,\n        fontSize = undefined,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'),\n        tickFormatMaxMin;\n    axis.scale(scale).orient('bottom').tickFormat(function (d) {\n      return d;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        if (ticks !== null) axis.ticks(ticks);else if (axis.orient() == 'top' || axis.orient() == 'bottom') axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\n        g.watchTransition(renderWatch, 'axis').call(axis);\n        scale0 = scale0 || axis.scale();\n        var fmt = axis.tickFormat();\n\n        if (fmt == null) {\n          fmt = scale0.tickFormat();\n        }\n\n        var axisLabel = g.selectAll('text.nv-axislabel').data([axisLabelText || null]);\n        axisLabel.exit().remove(); //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\n        if (fontSize !== undefined) {\n          g.selectAll('g').select(\"text\").style('font-size', fontSize);\n        }\n\n        var xLabelMargin;\n        var axisMaxMin;\n        var w;\n\n        switch (axis.orient()) {\n          case 'top':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', 0).attr('x', w / 2);\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)';\n              }).select('text').attr('dy', '-0.5em').attr('y', -axis.tickPadding()).attr('text-anchor', 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max top').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'bottom':\n            xLabelMargin = axisLabelDistance + 36;\n            var maxTextWidth = 30;\n            var textHeight = 0;\n            var xTicks = g.selectAll('g').select(\"text\");\n            var rotateLabelsRule = '';\n\n            if (rotateLabels % 360) {\n              //Reset transform on ticks so textHeight can be calculated correctly\n              xTicks.attr('transform', ''); //Calculate the longest xTick width\n\n              xTicks.each(function (d, i) {\n                var box = this.getBoundingClientRect();\n                var width = box.width;\n                textHeight = box.height;\n                if (width > maxTextWidth) maxTextWidth = width;\n              });\n              rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight / 2 + axis.tickPadding()) + ')'; //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\n              var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n              xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; //Rotate all xTicks\n\n              xTicks.attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n            } else {\n              if (staggerLabels) {\n                xTicks.attr('transform', function (d, i) {\n                  return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')';\n                });\n              } else {\n                xTicks.attr('transform', \"translate(0,0)\");\n              }\n            }\n\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', xLabelMargin).attr('x', w / 2);\n\n            if (showMaxMin) {\n              //if (showMaxMin && !isOrdinal) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin') //.data(scale.domain())\n              .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              }).select('text').attr('dy', '.71em').attr('y', axis.tickPadding()).attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels ? rotateLabels % 360 > 0 ? 'start' : 'end' : 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max bottom').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'right':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'begin').attr('transform', rotateYLabel ? 'rotate(90)' : '').attr('y', rotateYLabel ? -Math.max(margin.right, width) + 12 - (axisLabelDistance || 0) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n            .attr('x', rotateYLabel ? d3.max(scale.range()) / 2 : axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', axis.tickPadding()).style('text-anchor', 'start').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n\n          case 'left':\n            /*\n             //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n             var yTicks = g.selectAll('g').select(\"text\");\n             yTicks.each(function(d,i){\n             var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n             if(labelPadding > width) width = labelPadding;\n             });\n             */\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'end').attr('transform', rotateYLabel ? 'rotate(-90)' : '').attr('y', rotateYLabel ? -Math.max(margin.left, width) + 25 - (axisLabelDistance || 0) : -10).attr('x', rotateYLabel ? -d3.max(scale.range()) / 2 : -axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', -axis.tickPadding()).attr('text-anchor', 'end').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n        }\n\n        axisLabel.text(function (d) {\n          return d;\n        });\n\n        if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n          //check if max and min overlap other values, if so, hide the values that overlap\n          g.selectAll('g') // the g's wrapping each tick\n          .each(function (d, i) {\n            d3.select(this).select('text').attr('opacity', 1);\n\n            if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) {\n              // 10 is assuming text height is 16... if d is 0, leave it!\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).attr('opacity', 0);\n              d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n            }\n          }); //if Max and Min = 0 only show min, Issue #281\n\n          if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n            wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n              return !i ? 1 : 0;\n            });\n          }\n        }\n\n        if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n          var maxMinRange = [];\n          wrap.selectAll('g.nv-axisMaxMin').each(function (d, i) {\n            try {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4);\n            } catch (err) {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + 4);\n            }\n          }); // the g's wrapping each tick\n\n          g.selectAll('g').each(function (d, i) {\n            if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).remove();else d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n            }\n          });\n        } //Highlight zero tick line\n\n\n        g.selectAll('.tick').filter(function (d) {\n          /*\n          The filter needs to return only ticks at or near zero.\n          Numbers like 0.00001 need to count as zero as well,\n          and the arithmetic trick below solves that.\n          */\n          return !parseFloat(Math.round(d * 100000) / 1000000) && d !== undefined;\n        }).classed('zero', true); //store old scales for use in transitions on update\n\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('axis immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      axisLabelDistance: {\n        get: function get() {\n          return axisLabelDistance;\n        },\n        set: function set(_) {\n          axisLabelDistance = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      rotateYLabel: {\n        get: function get() {\n          return rotateYLabel;\n        },\n        set: function set(_) {\n          rotateYLabel = _;\n        }\n      },\n      showMaxMin: {\n        get: function get() {\n          return showMaxMin;\n        },\n        set: function set(_) {\n          showMaxMin = _;\n        }\n      },\n      axisLabel: {\n        get: function get() {\n          return axisLabelText;\n        },\n        set: function set(_) {\n          axisLabelText = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      fontSize: {\n        get: function get() {\n          return fontSize;\n        },\n        set: function set(_) {\n          fontSize = _;\n        }\n      },\n      tickFormatMaxMin: {\n        get: function get() {\n          return tickFormatMaxMin;\n        },\n        set: function set(_) {\n          tickFormatMaxMin = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      scale: {\n        get: function get() {\n          return scale;\n        },\n        set: function set(_) {\n          scale = _;\n          axis.scale(scale);\n          isOrdinal = typeof scale.rangeBands === 'function';\n          nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n    return chart;\n  };\n\n  nv.models.boxPlot = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000),\n        // Create semi-unique ID in case user doesn't select one\n    xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.label;\n    },\n        // Default data model selectors.\n    getQ1 = function getQ1(d) {\n      return d.values.Q1;\n    },\n        getQ2 = function getQ2(d) {\n      return d.values.Q2;\n    },\n        getQ3 = function getQ3(d) {\n      return d.values.Q3;\n    },\n        getWl = function getWl(d) {\n      return d.values.whisker_low;\n    },\n        getWh = function getWh(d) {\n      return d.values.whisker_high;\n    },\n        getColor = function getColor(d) {\n      return d.color;\n    },\n        getOlItems = function getOlItems(d) {\n      return d.values.outliers;\n    },\n        getOlValue = function getOlValue(d, i, j) {\n      return d;\n    },\n        getOlLabel = function getOlLabel(d, i, j) {\n      return d;\n    },\n        getOlColor = function getOlColor(d, i, j) {\n      return undefined;\n    },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain,\n        xRange,\n        yDomain,\n        yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        xScale.domain(xDomain || data.map(function (d, i) {\n          return getX(d, i);\n        })).rangeBands(xRange || [0, availableWidth], 0.1); // if we know yDomain, no need to calculate\n\n        var yData = [];\n\n        if (!yDomain) {\n          // (y-range is based on quartiles, whiskers and outliers)\n          var values = [],\n              yMin,\n              yMax;\n          data.forEach(function (d, i) {\n            var q1 = getQ1(d),\n                q3 = getQ3(d),\n                wl = getWl(d),\n                wh = getWh(d);\n            var olItems = getOlItems(d);\n\n            if (olItems) {\n              olItems.forEach(function (e, i) {\n                values.push(getOlValue(e, i, undefined));\n              });\n            }\n\n            if (wl) {\n              values.push(wl);\n            }\n\n            if (q1) {\n              values.push(q1);\n            }\n\n            if (q3) {\n              values.push(q3);\n            }\n\n            if (wh) {\n              values.push(wh);\n            }\n          });\n          yMin = d3.min(values);\n          yMax = d3.max(values);\n          yData = [yMin, yMax];\n        }\n\n        yScale.domain(yDomain || yData);\n        yScale.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        xScale0 = xScale0 || xScale;\n        yScale0 = yScale0 || yScale.copy().range([yScale(0), yScale(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var boxplots = wrap.selectAll('.nv-boxplot').data(function (d) {\n          return d;\n        });\n        var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        boxplots.attr('class', 'nv-boxplot').attr('transform', function (d, i, j) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        boxplots.watchTransition(renderWatch, 'nv-boxplot: boxplots').style('stroke-opacity', 1).style('fill-opacity', 0.75).delay(function (d, i) {\n          return i * duration / data.length;\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        });\n        boxplots.exit().remove(); // ----- add the SVG elements for each boxPlot -----\n        // conditionally append whisker lines\n\n        boxEnter.each(function (d, i) {\n          var box = d3.select(this);\n          [getWl, getWh].forEach(function (f) {\n            if (f(d) !== undefined && f(d) !== null) {\n              var key = f === getWl ? 'low' : 'high';\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n            }\n          });\n        });\n\n        var box_width = function box_width() {\n          return maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9);\n        };\n\n        var box_left = function box_left() {\n          return xScale.rangeBand() * 0.45 - box_width() / 2;\n        };\n\n        var box_right = function box_right() {\n          return xScale.rangeBand() * 0.45 + box_width() / 2;\n        }; // update whisker lines and ticks\n\n\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          var endpoint = f === getWl ? getQ1 : getQ3;\n          boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', xScale.rangeBand() * 0.45).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', xScale.rangeBand() * 0.45).attr('y2', function (d, i) {\n            return yScale(endpoint(d));\n          });\n          boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', box_left).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', box_right).attr('y2', function (d, i) {\n            return yScale(f(d));\n          });\n        });\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          boxEnter.selectAll('.nv-boxplot-' + key).on('mouseover', function (d, i, j) {\n            d3.select(this).classed('hover', true);\n            dispatch.elementMouseover({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mouseout', function (d, i, j) {\n            d3.select(this).classed('hover', false);\n            dispatch.elementMouseout({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mousemove', function (d, i) {\n            dispatch.elementMousemove({\n              e: d3.event\n            });\n          });\n        }); // boxes\n\n        boxEnter.append('rect').attr('class', 'nv-boxplot-box') // tooltip events\n        .on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        }); // box transitions\n\n        boxplots.select('rect.nv-boxplot-box').watchTransition(renderWatch, 'nv-boxplot: boxes').attr('y', function (d, i) {\n          return yScale(getQ3(d));\n        }).attr('width', box_width).attr('x', box_left).attr('height', function (d, i) {\n          return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1;\n        }).style('fill', function (d, i) {\n          return getColor(d) || color(d, i);\n        }).style('stroke', function (d, i) {\n          return getColor(d) || color(d, i);\n        }); // median line\n\n        boxEnter.append('line').attr('class', 'nv-boxplot-median');\n        boxplots.select('line.nv-boxplot-median').watchTransition(renderWatch, 'nv-boxplot: boxplots line').attr('x1', box_left).attr('y1', function (d, i) {\n          return yScale(getQ2(d));\n        }).attr('x2', box_right).attr('y2', function (d, i) {\n          return yScale(getQ2(d));\n        }); // outliers\n\n        var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function (d) {\n          return getOlItems(d) || [];\n        });\n        outliers.enter().append('circle').style('fill', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('stroke', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('z-index', 9000).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        });\n        outliers.attr('class', 'nv-boxplot-outlier');\n        outliers.watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier').attr('cx', xScale.rangeBand() * 0.45).attr('cy', function (d, i, j) {\n          return yScale(getOlValue(d, i, j));\n        }).attr('r', '3');\n        outliers.exit().remove(); //store old scales for use in transitions on update\n\n        xScale0 = xScale.copy();\n        yScale0 = yScale.copy();\n      });\n      renderWatch.renderEnd('nv-boxplot immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      maxBoxWidth: {\n        get: function get() {\n          return maxBoxWidth;\n        },\n        set: function set(_) {\n          maxBoxWidth = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      q1: {\n        get: function get() {\n          return getQ1;\n        },\n        set: function set(_) {\n          getQ1 = _;\n        }\n      },\n      q2: {\n        get: function get() {\n          return getQ2;\n        },\n        set: function set(_) {\n          getQ2 = _;\n        }\n      },\n      q3: {\n        get: function get() {\n          return getQ3;\n        },\n        set: function set(_) {\n          getQ3 = _;\n        }\n      },\n      wl: {\n        get: function get() {\n          return getWl;\n        },\n        set: function set(_) {\n          getWl = _;\n        }\n      },\n      wh: {\n        get: function get() {\n          return getWh;\n        },\n        set: function set(_) {\n          getWh = _;\n        }\n      },\n      itemColor: {\n        get: function get() {\n          return getColor;\n        },\n        set: function set(_) {\n          getColor = _;\n        }\n      },\n      outliers: {\n        get: function get() {\n          return getOlItems;\n        },\n        set: function set(_) {\n          getOlItems = _;\n        }\n      },\n      outlierValue: {\n        get: function get() {\n          return getOlValue;\n        },\n        set: function set(_) {\n          getOlValue = _;\n        }\n      },\n      outlierLabel: {\n        get: function get() {\n          return getOlLabel;\n        },\n        set: function set(_) {\n          getOlLabel = _;\n        }\n      },\n      outlierColor: {\n        get: function get() {\n          return getOlColor;\n        },\n        set: function set(_) {\n          getOlColor = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return xScale;\n        },\n        set: function set(_) {\n          xScale = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return yScale;\n        },\n        set: function set(_) {\n          yScale = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n      y: {\n        get: function get() {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n          return {};\n        },\n        set: function set(_) {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.boxPlotChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x,\n        y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(boxplot);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n        var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n        // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\n        if (!data || !data.length) {\n          var noDataText = container.selectAll('.nv-noData').data([noData]);\n          noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n          noDataText.attr('x', margin.left + availableWidth / 2).attr('y', margin.top + availableHeight / 2).text(function (d) {\n            return d;\n          });\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = boxplot.xScale();\n        y = boxplot.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(' + availableWidth + ',0)');\n        } // Main Chart Component(s)\n\n\n        boxplot.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(boxplot);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + boxplot.id()).append('rect');\n        g.select('#nv-x-label-clip-' + boxplot.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x).ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')';\n            });\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y).ticks(Math.floor(availableHeight / 36)) // can't use nv.utils.calcTicksY with Object data\n          .tickSize(-availableWidth, 0);\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select('.nv-zeroLine line').attr('x1', 0).attr('x2', availableWidth).attr('y1', y(0)).attr('y2', y(0)); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n      });\n      renderWatch.renderEnd('nv-boxplot chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.data(evt).hidden(false);\n    });\n    boxplot.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.data(evt).hidden(true);\n    });\n    boxplot.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      tooltipContent: {\n        get: function get() {\n          return tooltip;\n        },\n        set: function set(_) {\n          tooltip = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          boxplot.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          boxplot.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bullet = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        markerLines = function markerLines(d) {\n      return d.markerLines ? d.markerLines : [0];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        rangeLabels = function rangeLabels(d) {\n      return d.rangeLabels ? d.rangeLabels : [];\n    },\n        markerLabels = function markerLabels(d) {\n      return d.markerLabels ? d.markerLabels : [];\n    },\n        markerLineLabels = function markerLineLabels(d) {\n      return d.markerLineLabels ? d.markerLineLabels : [];\n    },\n        measureLabels = function measureLabels(d) {\n      return d.measureLabels ? d.measureLabels : [];\n    },\n        forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        width = 380,\n        height = 30,\n        container = null,\n        tickFormat = null,\n        color = nv.utils.getColor(['#1f77b4']),\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove'),\n        defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"],\n        legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"],\n        duration = 1000;\n\n    function sortLabels(labels, values) {\n      var lz = labels.slice();\n      labels.sort(function (a, b) {\n        var iA = lz.indexOf(a);\n        var iB = lz.indexOf(b);\n        return d3.descending(values[iA], values[iB]);\n      });\n    }\n\n    ;\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var rangez = ranges.call(this, d, i).slice(),\n            markerz = markers.call(this, d, i).slice(),\n            markerLinez = markerLines.call(this, d, i).slice(),\n            measurez = measures.call(this, d, i).slice(),\n            rangeLabelz = rangeLabels.call(this, d, i).slice(),\n            markerLabelz = markerLabels.call(this, d, i).slice(),\n            markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n            measureLabelz = measureLabels.call(this, d, i).slice(); // Sort labels according to their sorted values\n\n        sortLabels(rangeLabelz, rangez);\n        sortLabels(markerLabelz, markerz);\n        sortLabels(markerLineLabelz, markerLinez);\n        sortLabels(measureLabelz, measurez); // sort values descending\n\n        rangez.sort(d3.descending);\n        markerz.sort(d3.descending);\n        markerLinez.sort(d3.descending);\n        measurez.sort(d3.descending); // Setup Scales\n        // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n        var rangeMin = d3.min(rangez),\n            //rangez[2]\n        rangeMax = d3.max(rangez),\n            //rangez[0]\n        rangeAvg = rangez[1]; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var rangeClassNames = 'nv-range nv-range' + i;\n\n          if (i <= 2) {\n            rangeClassNames = rangeClassNames + ' nv-range' + legacyRangeClassNames[i];\n          }\n\n          gEnter.append('rect').attr('class', rangeClassNames);\n        }\n\n        gEnter.append('rect').attr('class', 'nv-measure');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var xp0 = function xp0(d) {\n          return d < 0 ? x0(d) : x0(0);\n        },\n            xp1 = function xp1(d) {\n          return d < 0 ? x1(d) : x1(0);\n        };\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var range = rangez[i];\n          g.select('rect.nv-range' + i).datum(range).attr('height', availableHeight).transition().duration(duration).attr('width', w1(range)).attr('x', xp1(range));\n        }\n\n        g.select('rect.nv-measure').style('fill', color).attr('height', availableHeight / 3).attr('y', availableHeight / 3).on('mouseover', function () {\n          dispatch.elementMouseover({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function () {\n          dispatch.elementMouseout({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).transition().duration(duration).attr('width', measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr('x', xp1(measurez));\n        var h3 = availableHeight / 6;\n        var markerData = markerz.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"path.nv-markerTriangle\").data(markerData).enter().append('path').attr('class', 'nv-markerTriangle').attr('d', 'M0,' + h3 + 'L' + h3 + ',' + -h3 + ' ' + -h3 + ',' + -h3 + 'Z').on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"path.nv-markerTriangle\").data(markerData).transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + x1(d.value) + ',' + availableHeight / 2 + ')';\n        });\n        var markerLinesData = markerLinez.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLineLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"line.nv-markerLine\").data(markerLinesData).enter().append('line').attr('cursor', '').attr('class', 'nv-markerLine').attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('y1', '2').attr('x2', function (d) {\n          return x1(d.value);\n        }).attr('y2', availableHeight - 2).on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"line.nv-markerLine\").data(markerLinesData).transition().duration(duration).attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('x2', function (d) {\n          return x1(d.value);\n        });\n        wrap.selectAll('.nv-range').on('mouseover', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseover({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseout({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bulletChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        margin = {\n      top: 5,\n      right: 40,\n      bottom: 20,\n      left: 120\n    },\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        width = null,\n        height = 55,\n        tickFormat = null,\n        ticks = null,\n        noData = null,\n        dispatch = d3.dispatch();\n\n    tooltip.duration(0).headerEnabled(false);\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom,\n            that = this;\n\n        chart.update = function () {\n          chart(selection);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!d || !ranges.call(this, d, i)) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n            markerz = markers.call(this, d, i).slice().sort(d3.descending),\n            measurez = measures.call(this, d, i).slice().sort(d3.descending); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bulletWrap');\n        gEnter.append('g').attr('class', 'nv-titles');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0] || 0, measurez[0])]) // TODO: need to allow forceX and forceY, and xDomain, yDomain\n        .range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var title = gEnter.select('.nv-titles').append('g').attr('text-anchor', 'end').attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n        title.append('text').attr('class', 'nv-title').text(function (d) {\n          return d.title;\n        });\n        title.append('text').attr('class', 'nv-subtitle').attr('dy', '1em').text(function (d) {\n          return d.subtitle;\n        });\n        bullet.width(availableWidth).height(availableHeight);\n        var bulletWrap = g.select('.nv-bulletWrap');\n        d3.transition(bulletWrap).call(bullet); // Compute the tick format.\n\n        var format = tickFormat || x1.tickFormat(availableWidth / 100); // Update the tick groups.\n\n        var tick = g.selectAll('g.nv-tick').data(x1.ticks(ticks ? ticks : availableWidth / 50), function (d) {\n          return this.textContent || format(d);\n        }); // Initialize the ticks with the old scale, x0.\n\n        var tickEnter = tick.enter().append('g').attr('class', 'nv-tick').attr('transform', function (d) {\n          return 'translate(' + x0(d) + ',0)';\n        }).style('opacity', 1e-6);\n        tickEnter.append('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickEnter.append('text').attr('text-anchor', 'middle').attr('dy', '1em').attr('y', availableHeight * 7 / 6).text(format); // Transition the updating ticks to the new scale, x1.\n\n        var tickUpdate = d3.transition(tick).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1);\n        tickUpdate.select('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickUpdate.select('text').attr('y', availableHeight * 7 / 6); // Transition the exiting ticks to the new scale, x1.\n\n        d3.transition(tick.exit()).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1e-6).remove();\n      });\n      d3.timer.flush();\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bullet.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: evt.label,\n        value: evt.value,\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bullet.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bullet.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.candlestickBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Width of the candlestick bars.\n\n        var barWidth = availableWidth / data[0].values.length * .45; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        var tickGroups = ticks.enter().append('g'); // The colors are currently controlled by CSS.\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        var lines = tickGroups.append('line').attr('class', 'nv-candlestick-lines').attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        var rects = tickGroups.append('rect').attr('class', 'nv-candlestick-rects nv-bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n        ticks.select('.nv-candlestick-lines').transition().attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        ticks.select('.nv-candlestick-rects').transition().attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-candlestickBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.cumulativeLineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        showControls = true,\n        useInteractiveGuideline = false,\n        rescaleY = true,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        id = lines.id(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        average = function average(d) {\n      return d.average;\n    },\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250,\n        duration = 250,\n        noErrorCheck = false //if set to TRUE, will bypass an error check in the indexify function.\n    ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear(),\n        index = {\n      i: 0,\n      x: 0\n    },\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        currentYDomain;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          index: index.i,\n          rescaleY: rescaleY\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.index !== undefined) index.i = state.index;\n        if (state.rescaleY !== undefined) rescaleY = state.rescaleY;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        container.classed('nv-chart-' + id, true);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        }\n\n        var indexDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd);\n\n        function dragStart(d, i) {\n          d3.select(chart.container).style('cursor', 'ew-resize');\n        }\n\n        function dragMove(d, i) {\n          index.x = d3.event.x;\n          index.i = Math.round(dx.invert(index.x));\n          updateZero();\n        }\n\n        function dragEnd(d, i) {\n          d3.select(chart.container).style('cursor', 'auto'); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = lines.xScale();\n        y = lines.yScale();\n        dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n        .range([0, availableWidth]).clamp(true);\n        var data = indexify(index.i, data); // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n\n        if (typeof currentYDomain === \"undefined\") {\n          currentYDomain = getCurrentYDomain(data);\n        }\n\n        if (!rescaleY) {\n          lines.yDomain(currentYDomain);\n          lines.clipEdge(true);\n        } else {\n          lines.yDomain(null);\n        } // Setup containers and skeleton of chart\n\n\n        var interactivePointerEvents = useInteractiveGuideline ? \"none\" : \"all\";\n        var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-background');\n        gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\", interactivePointerEvents);\n        gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: 'Re-scale y-axis',\n            disabled: !rescaleY\n          }];\n          controls.width(140).color(['#444', '#444', '#444']).rightAlign(false).margin({\n            top: 5,\n            right: 0,\n            bottom: 5,\n            left: 20\n          });\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Show error if index point value is 0 (division by zero avoided)\n\n\n        var tempDisabled = data.filter(function (d) {\n          return d.tempDisabled;\n        });\n        wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\n        if (tempDisabled.length) {\n          wrap.append('text').attr('class', 'tempDisabled').attr('x', availableWidth / 2).attr('y', '-.71em').style('text-anchor', 'end').text(tempDisabled.map(function (d) {\n            return d.key;\n          }).join(', ') + ' values cannot be calculated for this time period.');\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        gEnter.select('.nv-background').append('rect');\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines //.x(function(d) { return d.x })\n        .y(function (d) {\n          return d.display.y;\n        }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].tempDisabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled && !d.tempDisabled;\n        }));\n        linesWrap.call(lines); //Store a series index number in the data array.\n\n        data.forEach(function (d, i) {\n          d.seriesIndex = i;\n        });\n        var avgLineData = data.filter(function (d) {\n          return !d.disabled && !!average(d);\n        });\n        var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\").data(avgLineData, function (d) {\n          return d.key;\n        });\n\n        var getAvgLineY = function getAvgLineY(d) {\n          //If average lines go off the svg element, clamp them to the svg bounds.\n          var yVal = y(average(d));\n          if (yVal < 0) return 0;\n          if (yVal > availableHeight) return availableHeight;\n          return yVal;\n        };\n\n        avgLines.enter().append('line').style('stroke-width', 2).style('stroke-dasharray', '10,10').style('stroke', function (d, i) {\n          return lines.color()(d, d.seriesIndex);\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.style('stroke-opacity', function (d) {\n          //If average lines go offscreen, make them transparent\n          var yVal = y(average(d));\n          if (yVal < 0 || yVal > availableHeight) return 0;\n          return 1;\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.exit().remove(); //Create index line\n\n        var indexLine = linesWrap.selectAll('.nv-indexLine').data([index]);\n        indexLine.enter().append('rect').attr('class', 'nv-indexLine').attr('width', 3).attr('x', -2).attr('fill', 'red').attr('fill-opacity', .5).style(\"pointer-events\", \"all\").call(indexDrag);\n        indexLine.attr('transform', function (d) {\n          return 'translate(' + dx(d.i) + ',0)';\n        }).attr('height', availableHeight); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 70, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        function updateZero() {\n          indexLine.data([index]); //When dragging the index line, turn off line transitions.\n          // Then turn them back on when done dragging.\n\n          var oldDuration = chart.duration();\n          chart.duration(0);\n          chart.update();\n          chart.duration(oldDuration);\n        }\n\n        g.select('.nv-background rect').on('click', function () {\n          index.x = d3.mouse(this)[0];\n          index.i = Math.round(dx.invert(index.x)); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        lines.dispatch.on('elementClick', function (e) {\n          index.i = e.pointIndex;\n          index.x = dx(index.i); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n          rescaleY = !d.disabled;\n          state.rescaleY = rescaleY;\n\n          if (!rescaleY) {\n            currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !(series.disabled || series.tempDisabled);\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            lines.highlightPoint(i, pointIndex, true);\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex)\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex);\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.index !== 'undefined') {\n            index.i = e.index;\n            index.x = dx(index.i);\n            state.index = e.index;\n            indexLine.data([index]);\n          }\n\n          if (typeof e.rescaleY !== 'undefined') {\n            rescaleY = e.rescaleY;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('cumulativeLineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var point = {\n        x: chart.x()(evt.point),\n        y: chart.y()(evt.point),\n        color: evt.point.color\n      };\n      evt.point = point;\n      tooltip.data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n\n    function indexify(idx, data) {\n      if (!indexifyYGetter) indexifyYGetter = lines.y();\n      return data.map(function (line, i) {\n        if (!line.values) {\n          return line;\n        }\n\n        var indexValue = line.values[idx];\n\n        if (indexValue == null) {\n          return line;\n        }\n\n        var v = indexifyYGetter(indexValue, idx); // avoid divide by zero\n\n        if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n          line.tempDisabled = true;\n          return line;\n        }\n\n        line.tempDisabled = false;\n        line.values = line.values.map(function (point, pointIndex) {\n          point.display = {\n            'y': (indexifyYGetter(point, pointIndex) - v) / v\n          };\n          return point;\n        });\n        return line;\n      });\n    }\n\n    function getCurrentYDomain(data) {\n      var seriesDomains = data.filter(function (series) {\n        return !(series.disabled || series.tempDisabled);\n      }).map(function (series, i) {\n        return d3.extent(series.values, function (d) {\n          return d.display.y;\n        });\n      });\n      return [d3.min(seriesDomains, function (d) {\n        return d[0];\n      }), d3.max(seriesDomains, function (d) {\n        return d[1];\n      })];\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      average: {\n        get: function get() {\n          return average;\n        },\n        set: function set(_) {\n          average = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noErrorCheck: {\n        get: function get() {\n          return noErrorCheck;\n        },\n        set: function set(_) {\n          noErrorCheck = _;\n        }\n      },\n      // options that require extra logic in the setter\n      rescaleY: {\n        get: function get() {\n          return rescaleY;\n        },\n        set: function set(_) {\n          rescaleY = _;\n          chart.state.rescaleY = _; // also update state\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n            chart.useVoronoi(false);\n          }\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          lines.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating by adding necessary features to multiBar model\n\n\n  nv.models.discreteBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        showValues = false,\n        valueFormat = d3.format(',.2f'),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        rectClass = 'discreteBar',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], .1);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return d.y;\n        }).concat(forceY))); // If showValues, pad the Y axis range to account for label height\n\n        if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);else y.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        x0 = x0 || x;\n        y0 = y0 || y.copy().range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'discreteBar: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'discreteBar: groups').style('stroke-opacity', 1).style('fill-opacity', .75);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + (x(getX(d, i)) + x.rangeBand() * .05) + ', ' + y(0) + ')';\n        }).on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        barsEnter.append('rect').attr('height', 0).attr('width', x.rangeBand() * .9 / data.length);\n\n        if (showValues) {\n          barsEnter.append('text').attr('text-anchor', 'middle');\n          bars.select('text').text(function (d, i) {\n            return valueFormat(getY(d, i));\n          }).watchTransition(renderWatch, 'discreteBar: bars text').attr('x', x.rangeBand() * .9 / 2).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4;\n          });\n        } else {\n          bars.selectAll('text').remove();\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).style('fill', function (d, i) {\n          return d.color || color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).select('rect').attr('class', rectClass).watchTransition(renderWatch, 'discreteBar: bars rect').attr('width', x.rangeBand() * .9 / data.length);\n        bars.watchTransition(renderWatch, 'discreteBar: bars') //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n        .attr('transform', function (d, i) {\n          var left = x(getX(d, i)) + x.rangeBand() * .05,\n              top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : //make 1 px positive bars show up above y=0\n          y(getY(d, i));\n          return 'translate(' + left + ', ' + top + ')';\n        }).select('rect').attr('height', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('discreteBar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      rectClass: {\n        get: function get() {\n          return rectClass;\n        },\n        set: function set(_) {\n          rectClass = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.discreteBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x,\n        y,\n        noData = null,\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).keyFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(discretebar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = discretebar.xScale();\n        y = discretebar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        discretebar.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(discretebar);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + discretebar.id()).append('rect');\n        g.select('#nv-x-label-clip-' + discretebar.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')';\n            });\n          }\n\n          if (rotateLabels) {\n            xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", 0).attr(\"x2\", rightAlignYAxis ? -availableWidth : availableWidth).attr(\"y1\", y(0)).attr(\"y2\", y(0));\n      });\n      renderWatch.renderEnd('discreteBar chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    discretebar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    discretebar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          discretebar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          discretebar.color(color);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.distribution = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 400 //technically width or height depending on x or y....\n    ,\n        size = 8,\n        axis = 'x' // 'x' or 'y'... horizontal or vertical\n    ,\n        getData = function getData(d) {\n      return d[axis];\n    } // defaults d.x or d.y\n    ,\n        color = nv.utils.defaultColor(),\n        scale = d3.scale.linear(),\n        domain,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n            naxis = axis == 'x' ? 'y' : 'x',\n            container = d3.select(this);\n        nv.utils.initSVG(container); //------------------------------------------------------------\n        // Setup Scales\n\n        scale0 = scale0 || scale; //------------------------------------------------------------\n        //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-distribution').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //------------------------------------------------------------\n\n        var distWrap = g.selectAll('g.nv-dist').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        distWrap.enter().append('g');\n        distWrap.attr('class', function (d, i) {\n          return 'nv-dist nv-series-' + i;\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        var dist = distWrap.selectAll('line.nv-dist' + axis).data(function (d) {\n          return d.values;\n        });\n        dist.enter().append('line').attr(axis + '1', function (d, i) {\n          return scale0(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale0(getData(d, i));\n        });\n        renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        }).style('stroke-opacity', 0).remove();\n        dist.attr('class', function (d, i) {\n          return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i;\n        }).attr(naxis + '1', 0).attr(naxis + '2', size);\n        renderWatch.transition(dist, 'dist') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        });\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('distribution immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n      margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return chart;\n    };\n\n    chart.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return chart;\n    };\n\n    chart.getData = function (_) {\n      if (!arguments.length) return getData;\n      getData = d3.functor(_);\n      return chart;\n    };\n\n    chart.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return chart;\n    };\n\n    chart.color = function (_) {\n      if (!arguments.length) return color;\n      color = nv.utils.getColor(_);\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      return chart;\n    }; //============================================================\n\n\n    return chart;\n  };\n\n  nv.models.focus = function (content) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        brush = d3.svg.brush();\n    var margin = {\n      top: 10,\n      right: 0,\n      bottom: 30,\n      left: 0\n    },\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = 70,\n        showXAxis = true,\n        showYAxis = false,\n        rightAlignYAxis = false,\n        ticks = null,\n        x,\n        y,\n        brushExtent = null,\n        duration = 250,\n        dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd'),\n        syncBrushing = true;\n    content.interactive(false);\n    content.pointActive(function (d) {\n      return false;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(content);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom;\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this; // Setup Scales\n\n        x = content.xScale();\n        y = content.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-focus').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        gEnter.append('g').attr('class', 'nv-background').append('rect');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-contentWrap');\n        gEnter.append('g').attr('class', 'nv-brushBackground');\n        gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        }\n\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        content.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var contentWrap = g.select('.nv-contentWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        d3.transition(contentWrap).call(content); // Setup Brush\n\n        brush.x(x).on('brush', function () {\n          onBrush(syncBrushing);\n        });\n        brush.on('brushend', function () {\n          if (!syncBrushing) {\n            dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n          }\n        });\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect').attr('height', availableHeight);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n        onBrush(true);\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          d3.transition(g.select('.nv-y.nv-axis')).call(yAxis);\n        }\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')'); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x(d[0]) - x.range()[0],\n                rightWidth = availableWidth - x(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush(shouldDispatch) {\n          brushExtent = brush.empty() ? null : brush.extent();\n          var extent = brush.empty() ? x.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG();\n\n          if (shouldDispatch) {\n            dispatch.onBrush(extent);\n          }\n        }\n      });\n      renderWatch.renderEnd('focus immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      syncBrushing: {\n        get: function get() {\n          return syncBrushing;\n        },\n        set: function set(_) {\n          syncBrushing = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          content.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          content.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return content.interpolate();\n        },\n        set: function set(_) {\n          content.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return content.x();\n        },\n        set: function set(_) {\n          content.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return content.y();\n        },\n        set: function set(_) {\n          content.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.forceDirectedGraph = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        dispatch = d3.dispatch('renderEnd'),\n        color = nv.utils.getColor(['#000']),\n        tooltip = nv.models.tooltip(),\n        noData = null // Force directed graph specific parameters [default values]\n    ,\n        linkStrength = 0.1,\n        friction = 0.9,\n        linkDist = 30,\n        charge = -120,\n        gravity = 0.1,\n        theta = 0.8,\n        alpha = 0.1,\n        radius = 5 // These functions allow to add extra attributes to ndes and links\n    ,\n        nodeExtras = function nodeExtras(nodes) {\n      /* Do nothing */\n    },\n        linkExtras = function linkExtras(links) {\n      /* Do nothing */\n    },\n        getX = d3.functor(0.0),\n        getY = d3.functor(0.0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        container.attr(\"width\", availableWidth).attr(\"height\", availableHeight); // Display No Data message if there's nothing to show.\n\n        if (!data || !data.links || !data.nodes) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        container.selectAll('*').remove(); // Collect names of all fields in the nodes\n\n        var nodeFieldSet = new Set();\n        data.nodes.forEach(function (node) {\n          var keys = Object.keys(node);\n          keys.forEach(function (key) {\n            nodeFieldSet.add(key);\n          });\n        });\n        var force = d3.layout.force().nodes(data.nodes).links(data.links).size([availableWidth, availableHeight]).linkStrength(linkStrength).friction(friction).linkDistance(linkDist).charge(charge).gravity(gravity).theta(theta).alpha(alpha).start();\n        var link = container.selectAll(\".link\").data(data.links).enter().append(\"line\").attr(\"class\", \"nv-force-link\").style(\"stroke-width\", function (d) {\n          return Math.sqrt(d.value);\n        });\n        var node = container.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"nv-force-node\").call(force.drag);\n        node.append(\"circle\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return color(d);\n        }).on(\"mouseover\", function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.py);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.px); // Add 'series' object to\n\n          var nodeColor = color(evt);\n          evt.series = [];\n          nodeFieldSet.forEach(function (field) {\n            evt.series.push({\n              color: nodeColor,\n              key: field,\n              value: evt[field]\n            });\n          });\n          tooltip.data(evt).hidden(false);\n        }).on(\"mouseout\", function (d) {\n          tooltip.hidden(true);\n        });\n        tooltip.headerFormatter(function (d) {\n          return \"Node\";\n        }); // Apply extra attributes to nodes and links (if any)\n\n        linkExtras(link);\n        nodeExtras(node);\n        force.on(\"tick\", function () {\n          link.attr(\"x1\", function (d) {\n            return d.source.x;\n          }).attr(\"y1\", function (d) {\n            return d.source.y;\n          }).attr(\"x2\", function (d) {\n            return d.target.x;\n          }).attr(\"y2\", function (d) {\n            return d.target.y;\n          });\n          node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \", \" + d.y + \")\";\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      // Force directed graph specific parameters\n      linkStrength: {\n        get: function get() {\n          return linkStrength;\n        },\n        set: function set(_) {\n          linkStrength = _;\n        }\n      },\n      friction: {\n        get: function get() {\n          return friction;\n        },\n        set: function set(_) {\n          friction = _;\n        }\n      },\n      linkDist: {\n        get: function get() {\n          return linkDist;\n        },\n        set: function set(_) {\n          linkDist = _;\n        }\n      },\n      charge: {\n        get: function get() {\n          return charge;\n        },\n        set: function set(_) {\n          charge = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      theta: {\n        get: function get() {\n          return theta;\n        },\n        set: function set(_) {\n          theta = _;\n        }\n      },\n      alpha: {\n        get: function get() {\n          return alpha;\n        },\n        set: function set(_) {\n          alpha = _;\n        }\n      },\n      radius: {\n        get: function get() {\n          return radius;\n        },\n        set: function set(_) {\n          radius = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nodeExtras: {\n        get: function get() {\n          return nodeExtras;\n        },\n        set: function set(_) {\n          nodeExtras = _;\n        }\n      },\n      linkExtras: {\n        get: function get() {\n          return linkExtras;\n        },\n        set: function set(_) {\n          linkExtras = _;\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.furiousLegend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 28 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('circle');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('rect');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (vers == 'furious' && expanded) return;\n          dispatch.legendDblclick(d, i);\n\n          if (updateState) {\n            // make sure we re-get data in case it was modified\n            var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n            // is to set all other series' to false, and make the double clicked series enabled.\n\n            data.forEach(function (series) {\n              series.disabled = true;\n              if (vers == 'furious') series.userDisabled = series.disabled;\n            });\n            d.disabled = false;\n            if (vers == 'furious') d.userDisabled = d.disabled;\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              })\n            });\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var legendWidth = 0;\n          var columnWidths = [];\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15);\n        }\n\n        seriesShape.style('fill', setBGColor).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? color(d, i) : '#fff';\n        } else if (!expanded) {\n          return !!d.disabled ? color(d, i) : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#fff' : color(d, i);\n        } else {\n          return !!d.disabled ? '#fff' : color(d, i);\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating and using multibar with single series for this\n\n\n  nv.models.historicalBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceX = [],\n        forceY = [0],\n        padData = false,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        interactive = true;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bars');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var bars = wrap.select('.nv-bars').selectAll('.nv-bar').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return getX(d, i);\n        });\n        bars.exit().remove();\n        bars.enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n          return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i))));\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0)));\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }).on('mouseover', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          if (!interactive) return;\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('fill', function (d, i) {\n          return color(d, i);\n        }).attr('class', function (d, i, j) {\n          return (getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i;\n        }).watchTransition(renderWatch, 'bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }) //TODO: better width calculations that don't assume always uniform data spacing;w\n        .attr('width', availableWidth / data[0].values.length * .9);\n        bars.watchTransition(renderWatch, 'bars').attr('y', function (d, i) {\n          var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i));\n          return nv.utils.NaNtoZero(rval);\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1));\n        });\n      });\n      renderWatch.renderEnd('historicalBar immediate');\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      container.select(\".nv-bars .nv-bar-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-bars .nv-bar.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.historicalBarChart = function (bar_model) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 90,\n      bottom: 50,\n      left: 90\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        state = {},\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        renderWatch.models(bars);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this; //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = bars.xScale();\n        y = bars.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(bars); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').transition().call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').transition().call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          bars.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            bars.highlightPoint(pointIndex, true);\n            var point = series.values[pointIndex];\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex),\n              data: series.values[pointIndex]\n            });\n          });\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex));\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          dispatch.tooltipHide();\n          bars.clearHighlights();\n        });\n        legend.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n\n          if (!data.filter(function (d) {\n            return !d.disabled;\n          }).length) {\n            data.map(function (d) {\n              d.disabled = false;\n              wrap.selectAll('.nv-series').classed('disabled', false);\n              return d;\n            });\n          }\n\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          selection.transition().call(chart);\n        });\n        legend.dispatch.on('legendDblclick', function (d) {\n          //Double clicking should always enable current series, and disabled all others.\n          data.forEach(function (d) {\n            d.disabled = true;\n          });\n          d.disabled = false;\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('historicalBarChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          bars.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n          renderWatch.reset(transitionDuration);\n          yAxis.duration(transitionDuration);\n          xAxis.duration(transitionDuration);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // ohlcChart is just a historical chart with ohlc bars and some tweaks\n\n\n  nv.models.ohlcBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  }; // candlestickChart is just a historical chart with candlestick bars and some tweaks\n\n\n  nv.models.candlestickBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  };\n\n  nv.models.legend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 32 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        enableDoubleClick = true //If true, legend will enable double click handling\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        if (rightAlign) wrap.attr('transform', 'translate(' + -margin.right + ',' + margin.top + ')');else wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('.nv-legend-symbol');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('.nv-legend-symbol');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (enableDoubleClick) {\n            if (vers == 'furious' && expanded) return;\n            dispatch.legendDblclick(d, i);\n\n            if (updateState) {\n              // make sure we re-get data in case it was modified\n              var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n              // is to set all other series' to false, and make the double clicked series enabled.\n\n              data.forEach(function (series) {\n                series.disabled = true;\n                if (vers == 'furious') series.userDisabled = series.disabled;\n              });\n              d.disabled = false;\n              if (vers == 'furious') d.userDisabled = d.disabled;\n              dispatch.stateChange({\n                disabled: data.map(function (d) {\n                  return !!d.disabled;\n                })\n              });\n            }\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var legendWidth = 0;\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var columnWidths = [];\n          legendWidth = 0;\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n\n            if (legendWidth < xpos + maxwidth) {\n              legendWidth = xpos + maxwidth;\n            }\n\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15); // The background for the expanded legend (UI)\n\n          gEnter.insert('rect', ':first-child').attr('class', 'nv-legend-bg').attr('fill', '#eee') // .attr('stroke', '#444')\n          .attr('opacity', 0);\n          var seriesBG = g.select('.nv-legend-bg');\n          seriesBG.transition().duration(300).attr('x', -versPadding).attr('width', legendWidth + versPadding - 12).attr('height', height + 10).attr('y', -margin.top - 10).attr('opacity', expanded ? 1 : 0);\n        }\n\n        seriesShape.style('fill', setBGColor).style('fill-opacity', setBGOpacity).style('stroke', setBGColor);\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? '#000' : '#fff';\n        } else if (!expanded) {\n          if (!d.color) d.color = color(d, i);\n          return !!d.disabled ? d.color : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#eee' : d.color || color(d, i);\n        } else {\n          return d.color || color(d, i);\n        }\n      }\n\n      function setBGOpacity(d, i) {\n        if (expanded && vers == 'furious') {\n          return 1;\n        } else {\n          return !!d.disabled ? 0 : 1;\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      enableDoubleClick: {\n        get: function get() {\n          return enableDoubleClick;\n        },\n        set: function set(_) {\n          enableDoubleClick = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.line = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        container = null,\n        strokeWidth = 1.5,\n        color = nv.utils.defaultColor() // a function that returns a color\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        isArea = function isArea(d) {\n      return d.area;\n    } // decides if a line is an area or just a line\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        interpolate = \"linear\" // controls the line interpolation\n    ,\n        duration = 250,\n        dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    scatter.pointSize(16) // default size\n    .pointDomain([16, 256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        scatter.width(availableWidth).height(availableHeight);\n        var scatterWrap = wrap.select('.nv-scatterWrap');\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + scatter.id()).append('rect');\n        wrap.select('#nv-edge-clip-' + scatter.id() + ' rect').attr('width', availableWidth).attr('height', availableHeight > 0 ? availableHeight : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        scatterWrap.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('stroke-width', function (d) {\n          return d.strokeWidth || strokeWidth;\n        }).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'line: groups').style('stroke-opacity', 1).style('fill-opacity', function (d) {\n          return d.fillOpacity || .5;\n        });\n        var areaPaths = groups.selectAll('path.nv-area').data(function (d) {\n          return isArea(d) ? [d] : [];\n        }); // this is done differently than lines because I need to check if series is an area\n\n        areaPaths.enter().append('path').attr('class', 'nv-area').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x0(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y0(getY(d, i)));\n          }).y1(function (d, i) {\n            return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        groups.exit().selectAll('path.nv-area').remove();\n        areaPaths.watchTransition(renderWatch, 'line: areaPaths').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y(getY(d, i)));\n          }).y1(function (d, i) {\n            return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        var linePaths = groups.selectAll('path.nv-line').data(function (d) {\n          return [d.values];\n        });\n        linePaths.enter().append('path').attr('class', 'nv-line').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x0(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y0(getY(d, i)));\n        }));\n        linePaths.watchTransition(renderWatch, 'line: linePaths').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y(getY(d, i)));\n        })); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter; // Pass through events\n\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      },\n      isArea: {\n        get: function get() {\n          return isArea;\n        },\n        set: function set(_) {\n          isArea = d3.functor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          scatter.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          scatter.y(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          scatter.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.line());\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        focusEnable = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        duration = 250; // set options on sub-objects for this chart\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    lines.clipEdge(true).duration(0);\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n        /* Update `main' graph on brush update. */\n\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Setup Scales\n\n        x = lines.xScale();\n        y = lines.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-linesWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive');\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Main (Focus) Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(duration).call(yAxis);\n          }\n        }\n\n        g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')'); //============================================================\n        // Update Focus\n        //============================================================\n\n        if (!focusEnable && focus.brush.extent() === null) {\n          linesWrap.call(lines);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').style('display', focusEnable ? 'initial' : 'none').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled && !series.disableTooltip;\n          }).forEach(function (series, i) {\n            var extent = focus.brush.extent() !== null ? focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent() : x.domain();\n            var currentValues = series.values.filter(function (d, i) {\n              // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n              // (e.g. x domain is manually set to reverse the x-axis)\n              if (extent[0] <= extent[1]) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              } else {\n                return lines.x()(d, i) >= extent[1] && lines.x()(d, i) <= extent[0];\n              }\n            });\n            pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n            var point = currentValues[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue !== null) {\n              lines.highlightPoint(i, pointIndex, true);\n            }\n\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: pointYValue,\n              color: color(series, series.seriesIndex),\n              data: point\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var defaultValueFormatter = function defaultValueFormatter(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n          };\n\n          interactiveLayer.tooltip.valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n            value: chart.x()(singlePoint, pointIndex),\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on('elementClick', function (e) {\n          var pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series) {\n            var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            var yPos = chart.yScale()(chart.y()(point, pointIndex));\n            allData.push({\n              point: point,\n              pointIndex: pointIndex,\n              pos: [pointXLocation, yPos],\n              seriesIndex: series.seriesIndex,\n              series: series\n            });\n          });\n          lines.dispatch.elementClick(allData);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          focusLinesWrap.transition().duration(duration).call(lines); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('lineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      if (!evt.series.disableTooltip) {\n        tooltip.data(evt).hidden(false);\n      }\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // Focus options, mostly passed onto focus model.\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focus.showXAxis();\n        },\n        set: function set(_) {\n          focus.showXAxis(_);\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focus.showYAxis();\n        },\n        set: function set(_) {\n          focus.showYAxis(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          lines.duration(duration);\n          focus.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          lines.color(color);\n          focus.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return lines.interpolate();\n        },\n        set: function set(_) {\n          lines.interpolate(_);\n          focus.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n          focus.xTickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n          focus.yTickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return lines.x();\n        },\n        set: function set(_) {\n          lines.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return lines.y();\n        },\n        set: function set(_) {\n          lines.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines.interactive(false);\n            lines.useVoronoi(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineWithFocusChart = function () {\n    return nv.models.lineChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  };\n\n  nv.models.linePlusBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        lines2 = nv.models.line(),\n        bars = nv.models.historicalBar(),\n        bars2 = nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        x2Axis = nv.models.axis(),\n        y1Axis = nv.models.axis(),\n        y2Axis = nv.models.axis(),\n        y3Axis = nv.models.axis(),\n        y4Axis = nv.models.axis(),\n        legend = nv.models.legend(),\n        brush = d3.svg.brush(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        marginTop = null,\n        margin2 = {\n      top: 0,\n      right: 30,\n      bottom: 20,\n      left: 60\n    },\n        width = null,\n        height = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.defaultColor(),\n        showLegend = true,\n        focusEnable = true,\n        focusShowAxisY = false,\n        focusShowAxisX = true,\n        focusHeight = 50,\n        extent,\n        brushExtent = null,\n        x,\n        x2,\n        y1,\n        y2,\n        y3,\n        y4,\n        noData = null,\n        dispatch = d3.dispatch('brush', 'stateChange', 'changeState'),\n        transitionDuration = 0,\n        state = nv.utils.state(),\n        defaultState = null,\n        legendLeftAxisHint = ' (left axis)',\n        legendRightAxisHint = ' (right axis)',\n        switchYAxisOrder = false;\n\n    lines.clipEdge(true);\n    lines2.interactive(false); // We don't want any points emitted for the focus chart's scatter graph.\n\n    lines2.pointActive(function (d) {\n      return false;\n    });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n    tooltip.headerEnabled(true).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function getBarsAxis() {\n      return switchYAxisOrder ? {\n        main: y2Axis,\n        focus: y4Axis\n      } : {\n        main: y1Axis,\n        focus: y3Axis\n      };\n    };\n\n    var getLinesAxis = function getLinesAxis() {\n      return switchYAxisOrder ? {\n        main: y1Axis,\n        focus: y3Axis\n      } : {\n        main: y2Axis,\n        focus: y4Axis\n      };\n    };\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var allDisabled = function allDisabled(data) {\n      return data.every(function (series) {\n        return series.disabled;\n      });\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focusHeight : 0),\n            availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        var dataBars = data.filter(function (d) {\n          return !d.disabled && d.bar;\n        });\n        var dataLines = data.filter(function (d) {\n          return !d.bar;\n        }); // removed the !d.disabled clause here to fix Issue #240\n\n        if (dataBars.length && !switchYAxisOrder) {\n          x = bars.xScale();\n        } else {\n          x = lines.xScale();\n        }\n\n        x2 = x2Axis.scale(); // select the scales and series based on the position of the yAxis\n\n        y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n        y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n        y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n        y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n        var series1 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        x.range([0, availableWidth]);\n        x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // this is the main chart\n\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-barsWrap');\n        focusEnter.append('g').attr('class', 'nv-linesWrap'); // context chart is where you can focus in\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n        contextEnter.append('g').attr('class', 'nv-x nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-barsWrap');\n        contextEnter.append('g').attr('class', 'nv-linesWrap');\n        contextEnter.append('g').attr('class', 'nv-brushBackground');\n        contextEnter.append('g').attr('class', 'nv-x nv-brush'); //============================================================\n        // Legend\n        //------------------------------------------------------------\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\n            if (switchYAxisOrder) {\n              series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n            } else {\n              series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n            }\n\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height(); // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //============================================================\n        // Context chart (focus chart) components\n        //------------------------------------------------------------\n        // hide or show the focus context chart\n\n        g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n        bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && data[i].bar;\n        }));\n        lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].bar;\n        }));\n        var bars2Wrap = g.select('.nv-context .nv-barsWrap').datum(dataBars.length ? dataBars : [{\n          values: []\n        }]);\n        var lines2Wrap = g.select('.nv-context .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n          values: []\n        }] : dataLines.filter(function (dataLine) {\n          return !dataLine.disabled;\n        }));\n        g.select('.nv-context').attr('transform', 'translate(0,' + (availableHeight1 + margin.bottom + margin2.top) + ')');\n        bars2Wrap.transition().call(bars2);\n        lines2Wrap.transition().call(lines2); // context (focus chart) axis controls\n\n        if (focusShowAxisX) {\n          x2Axis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight2, 0);\n\n          g.select('.nv-context .nv-x.nv-axis').attr('transform', 'translate(0,' + y3.range()[0] + ')');\n          g.select('.nv-context .nv-x.nv-axis').transition().call(x2Axis);\n        }\n\n        if (focusShowAxisY) {\n          y3Axis.scale(y3)._ticks(availableHeight2 / 36).tickSize(-availableWidth, 0);\n\n          y4Axis.scale(y4)._ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n\n          g.select('.nv-context .nv-y3.nv-axis').style('opacity', dataBars.length ? 1 : 0).attr('transform', 'translate(0,' + x2.range()[0] + ')');\n          g.select('.nv-context .nv-y2.nv-axis').style('opacity', dataLines.length ? 1 : 0).attr('transform', 'translate(' + x2.range()[1] + ',0)');\n          g.select('.nv-context .nv-y1.nv-axis').transition().call(y3Axis);\n          g.select('.nv-context .nv-y2.nv-axis').transition().call(y4Axis);\n        } // Setup Brush\n\n\n        brush.x(x2).on('brush', onBrush);\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect') //.attr('y', -5)\n        .attr('height', availableHeight2);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight2 / 3;\n          return 'M' + .5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + .5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x2(d[0]) - x2.range()[0],\n                rightWidth = x2.range()[1] - x2(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x2(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush() {\n          brushExtent = brush.empty() ? null : brush.extent();\n          extent = brush.empty() ? x2.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG(); // Prepare Main (Focus) Bars and Lines\n\n          bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && data[i].bar;\n          }));\n          lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && !data[i].bar;\n          }));\n          var focusBarsWrap = g.select('.nv-focus .nv-barsWrap').datum(!dataBars.length ? [{\n            values: []\n          }] : dataBars.map(function (d, i) {\n            return {\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1];\n              })\n            };\n          }));\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n            values: []\n          }] : dataLines.filter(function (dataLine) {\n            return !dataLine.disabled;\n          }).map(function (d, i) {\n            return {\n              area: d.area,\n              fillOpacity: d.fillOpacity,\n              strokeWidth: d.strokeWidth,\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              })\n            };\n          })); // Update Main (Focus) X Axis\n\n          if (dataBars.length && !switchYAxisOrder) {\n            x = bars.xScale();\n          } else {\n            x = lines.xScale();\n          }\n\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight1, 0);\n\n          xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n          g.select('.nv-x.nv-axis').transition().duration(transitionDuration).call(xAxis); // Update Main (Focus) Bars and Lines\n\n          focusBarsWrap.transition().duration(transitionDuration).call(bars);\n          focusLinesWrap.transition().duration(transitionDuration).call(lines); // Setup and Update Main (Focus) Y Axes\n\n          g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n          y1Axis.scale(y1)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)).tickSize(-availableWidth, 0);\n\n          y2Axis.scale(y2)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)); // Show the y2 rules only if y1 has none\n\n\n          if (!switchYAxisOrder) {\n            y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n          } else {\n            y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n          } // Calculate opacity of the axis\n\n\n          var barsOpacity = dataBars.length ? 1 : 0;\n          var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n          var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n          var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n          g.select('.nv-focus .nv-y1.nv-axis').style('opacity', y1Opacity);\n          g.select('.nv-focus .nv-y2.nv-axis').style('opacity', y2Opacity).attr('transform', 'translate(' + x.range()[1] + ',0)');\n          g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration).call(y1Axis);\n          g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration).call(y2Axis);\n        }\n\n        onBrush();\n      });\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.duration(100).valueFormatter(function (d, i) {\n        return getLinesAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.duration(0).valueFormatter(function (d, i) {\n        return getBarsAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focusHeight;\n        },\n        set: function set(_) {\n          focusHeight = _;\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focusShowAxisX;\n        },\n        set: function set(_) {\n          focusShowAxisX = _;\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focusShowAxisY;\n        },\n        set: function set(_) {\n          focusShowAxisY = _;\n        }\n      },\n      legendLeftAxisHint: {\n        get: function get() {\n          return legendLeftAxisHint;\n        },\n        set: function set(_) {\n          legendLeftAxisHint = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return margin2;\n        },\n        set: function set(_) {\n          margin2.top = _.top !== undefined ? _.top : margin2.top;\n          margin2.right = _.right !== undefined ? _.right : margin2.right;\n          margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n          margin2.left = _.left !== undefined ? _.left : margin2.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines.x(_);\n          lines2.x(_);\n          bars.x(_);\n          bars2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines.y(_);\n          lines2.y(_);\n          bars.y(_);\n          bars2.y(_);\n        }\n      },\n      switchYAxisOrder: {\n        get: function get() {\n          return switchYAxisOrder;\n        },\n        set: function set(_) {\n          // Switch the tick format for the yAxis\n          if (switchYAxisOrder !== _) {\n            var y1 = y1Axis;\n            y1Axis = y2Axis;\n            y2Axis = y1;\n            var y3 = y3Axis;\n            y3Axis = y4Axis;\n            y4Axis = y3;\n          }\n\n          switchYAxisOrder = _;\n          y1Axis.orient('left');\n          y2Axis.orient('right');\n          y3Axis.orient('left');\n          y4Axis.orient('right');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        clipEdge = true,\n        stacked = false,\n        stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n    ,\n        color = nv.utils.defaultColor(),\n        hideable = false,\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        duration = 500,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n    var last_datalength = 0;\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var nonStackableCount = 0; // This function defines the requirements for render complete\n\n        var endFn = function endFn(d, i) {\n          if (d.series === data.length - 1 && i === data[0].values.length - 1) return true;\n          return false;\n        };\n\n        if (hideable && data.length) hideable = [{\n          values: data[0].values.map(function (d) {\n            return {\n              x: d.x,\n              y: 0,\n              series: d.series,\n              size: 0.01\n            };\n          })\n        }];\n\n        if (stacked) {\n          var parsed = d3.layout.stack().offset(stackOffset).values(function (d) {\n            return d.values;\n          }).y(getY)(!data.length && hideable ? hideable : data);\n          parsed.forEach(function (series, i) {\n            // if series is non-stackable, use un-parsed data\n            if (series.nonStackable) {\n              data[i].nonStackableSeries = nonStackableCount++;\n              parsed[i] = data[i];\n            } else {\n              // don't stack this seires on top of the nonStackable seriees\n              if (i > 0 && parsed[i - 1].nonStackable) {\n                parsed[i].values.map(function (d, j) {\n                  d.y0 -= parsed[i - 1].values[j].y;\n                  d.y1 = d.y0 + d.y;\n                });\n              }\n            }\n          });\n          data = parsed;\n        } //add series index and key to each data point for reference\n\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked && data.length > 0) {\n          data[0].values.map(function (d, i) {\n            var posBase = 0,\n                negBase = 0;\n            data.map(function (d, idx) {\n              if (!data[idx].nonStackable) {\n                var f = d.values[i];\n                f.size = Math.abs(f.y);\n\n                if (f.y < 0) {\n                  f.y1 = negBase;\n                  negBase = negBase - f.size;\n                } else {\n                  f.y1 = f.size + posBase;\n                  posBase = posBase + f.size;\n                }\n              }\n            });\n          });\n        } // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d, idx) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1,\n              idx: idx\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          var domain = d.y; // increase the domain range if this series is stackable\n\n          if (stacked && !data[d.idx].nonStackable) {\n            if (d.y > 0) {\n              domain = d.y1;\n            } else {\n              domain = d.y1 + d.y;\n            }\n          }\n\n          return domain;\n        }).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        var exitTransition = renderWatch.transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration)).attr('y', function (d, i, j) {\n          var yVal = y0(0) || 0;\n\n          if (stacked) {\n            if (data[d.series] && !data[d.series].nonStackable) {\n              yVal = y0(d.y0);\n            }\n          }\n\n          return yVal;\n        }).attr('height', 0).remove();\n        if (exitTransition.delay) exitTransition.delay(function (d, i) {\n          var delay = i * (duration / (last_datalength + 1)) - i;\n          return delay;\n        });\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('rect.nv-bar').data(function (d) {\n          return hideable && !data.length ? hideable.values : d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('rect').attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('x', function (d, i, j) {\n          return stacked && !data[j].nonStackable ? 0 : j * x.rangeBand() / data.length;\n        }).attr('y', function (d, i, j) {\n          return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0;\n        }).attr('height', 0).attr('width', function (d, i, j) {\n          return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length);\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n        bars.style('fill', function (d, i, j) {\n          return color(d, j, i);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j, i);\n        }).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i, j) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i, j) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i, j) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        var barSelection = bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration)).delay(function (d, i) {\n          return i * duration / data[0].values.length;\n        });\n\n        if (stacked) {\n          barSelection.attr('y', function (d, i, j) {\n            var yVal = 0; // if stackable, stack it on top of the previous series\n\n            if (!data[j].nonStackable) {\n              yVal = y(d.y1);\n            } else {\n              if (getY(d, i) < 0) {\n                yVal = y(0);\n              } else {\n                if (y(0) - y(getY(d, i)) < -1) {\n                  yVal = y(0) - 1;\n                } else {\n                  yVal = y(getY(d, i)) || 0;\n                }\n              }\n            }\n\n            return yVal;\n          }).attr('height', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return Math.max(Math.abs(y(d.y + d.y0) - y(d.y0)), 0);\n            } else {\n              return Math.max(Math.abs(y(getY(d, i)) - y(0)), 0) || 0;\n            }\n          }).attr('x', function (d, i, j) {\n            var width = 0;\n\n            if (data[j].nonStackable) {\n              width = d.series * x.rangeBand() / data.length;\n\n              if (data.length !== nonStackableCount) {\n                width = data[j].nonStackableSeries * x.rangeBand() / (nonStackableCount * 2);\n              }\n            }\n\n            return width;\n          }).attr('width', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return x.rangeBand();\n            } else {\n              // if all series are nonStacable, take the full width\n              var width = x.rangeBand() / nonStackableCount; // otherwise, nonStackable graph will be only taking the half-width\n              // of the x rangeBand\n\n              if (data.length !== nonStackableCount) {\n                width = x.rangeBand() / (nonStackableCount * 2);\n              }\n\n              return width;\n            }\n          });\n        } else {\n          barSelection.attr('x', function (d, i) {\n            return d.series * x.rangeBand() / data.length;\n          }).attr('width', x.rangeBand() / data.length).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0;\n          }).attr('height', function (d, i) {\n            return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n          });\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy(); // keep track of the last data value length for transition calculations\n\n        if (data[0] && data[0].values) {\n          last_datalength = data[0].values.length;\n        }\n      });\n      renderWatch.renderEnd('multibar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      stackOffset: {\n        get: function get() {\n          return stackOffset;\n        },\n        set: function set(_) {\n          stackOffset = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      hideable: {\n        get: function get() {\n          return hideable;\n        },\n        set: function set(_) {\n          hideable = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        interactiveLayer = nv.interactiveGuideline(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = null,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        reduceXTicks = true // if false a tick will show for every data point\n    ,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250,\n        useInteractiveGuideline = false;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis.orient('bottom').tickPadding(7).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === 'bottom') {\n            legend.width(availableWidth - margin.right);\n            g.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else {\n            legend.width(availableWidth - controlWidth());\n            g.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n          xTicks.selectAll('line, text').style('opacity', 1);\n\n          if (staggerLabels) {\n            var getTranslate = function getTranslate(x, y) {\n              return \"translate(\" + x + \",\" + y + \")\";\n            };\n\n            var staggerUp = 5,\n                staggerDown = 17; //pixels to stagger by\n            // Issue #140\n\n            xTicks.selectAll(\"text\").attr('transform', function (d, i, j) {\n              return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown);\n            });\n            var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n            g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\").attr(\"transform\", function (d, i) {\n              return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp);\n            });\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n\n          if (reduceXTicks) xTicks.filter(function (d, i) {\n            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n          }).selectAll('text, line').style('opacity', 0);\n          if (rotateLabels) xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text').style('opacity', 1);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            if (e.pointXValue == undefined) return;\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                xValue,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              pointIndex = x.domain().indexOf(e.pointXValue);\n              var point = series.values[pointIndex];\n              if (point === undefined) return;\n              xValue = point.x;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = e.mouseX;\n              allData.push({\n                key: series.key,\n                value: chart.y()(point, pointIndex),\n                color: color(series, series.seriesIndex),\n                data: series.values[pointIndex]\n              });\n            });\n            interactiveLayer.tooltip.data({\n              value: xValue,\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            interactiveLayer.tooltip.hidden(true);\n          });\n        } else {\n          multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n            evt.value = chart.x()(evt.data);\n            evt['series'] = {\n              key: evt.data.key,\n              value: chart.y()(evt.data),\n              color: evt.color\n            };\n            tooltip.data(evt).hidden(false);\n          });\n          multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      renderWatch.renderEnd('multibarchart immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      reduceXTicks: {\n        get: function get() {\n          return reduceXTicks;\n        },\n        set: function set(_) {\n          reduceXTicks = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontal = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getYerr = function getYerr(d) {\n      return d.yErr;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        stacked = false,\n        showValues = false,\n        showBarLabels = false,\n        valuePadding = 60,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        valueFormat = d3.format(',.2f'),\n        delay = 1200,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        duration = 250,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0; //used to store previous scales\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        if (stacked) data = d3.layout.stack().offset('zero').values(function (d) {\n          return d.values;\n        }).y(getY)(data); //add series index and key to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked) data[0].values.map(function (d, i) {\n          var posBase = 0,\n              negBase = 0;\n          data.map(function (d) {\n            var f = d.values[i];\n            f.size = Math.abs(f.y);\n\n            if (f.y < 0) {\n              f.y1 = negBase - f.size;\n              negBase = negBase - f.size;\n            } else {\n              f.y1 = posBase;\n              posBase = posBase + f.size;\n            }\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableHeight], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y;\n        }).concat(forceY)));\n        if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]);else y.range(yRange || [0, availableWidth]);\n        x0 = x0 || x;\n        y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'multibarhorizontal: groups').style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        });\n        barsEnter.append('rect').attr('width', 0).attr('height', x.rangeBand() / (stacked ? 1 : data.length));\n        bars.on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n\n        if (getYerr(data[0], 0)) {\n          barsEnter.append('polyline');\n          bars.select('polyline').attr('fill', 'none').attr('points', function (d, i) {\n            var xerr = getYerr(d, i),\n                mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n            xerr = xerr.map(function (e) {\n              return y(e + (getY(d, i) < 0 ? 0 : getY(d, i))) - y(0);\n            });\n            var a = [[xerr[0], -mid], [xerr[0], mid], [xerr[0], 0], [xerr[1], 0], [xerr[1], -mid], [xerr[1], mid]];\n            return a.map(function (path) {\n              return path.join(',');\n            }).join(' ');\n          }).attr('transform', function (d, i) {\n            var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            return 'translate(0, ' + mid + ')';\n          });\n        }\n\n        barsEnter.append('text');\n\n        if (showValues && !stacked) {\n          bars.select('text').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'end' : 'start';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            var t = valueFormat(getY(d, i)),\n                yerr = getYerr(d, i);\n            if (yerr === undefined) return t;\n            if (!yerr.length) return t + '±' + valueFormat(Math.abs(yerr));\n            return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4;\n          });\n        } else {\n          bars.selectAll('text').text('');\n        }\n\n        if (showBarLabels && !stacked) {\n          barsEnter.append('text').classed('nv-bar-label', true);\n          bars.select('text.nv-bar-label').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'start' : 'end';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            return getX(d, i);\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text.nv-bar-label').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? y(0) - y(getY(d, i)) + 4 : -4;\n          });\n        } else {\n          bars.selectAll('text.nv-bar-label').text('');\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        if (stacked) bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          return 'translate(' + y(d.y1) + ',' + x(getX(d, i)) + ')';\n        }).select('rect').attr('width', function (d, i) {\n          return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) || 0;\n        }).attr('height', x.rangeBand());else bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          //TODO: stacked must be all positive or all negative, not both?\n          return 'translate(' + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + ',' + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        }).select('rect').attr('height', x.rangeBand() / data.length).attr('width', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('multibarHorizontal immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      yErr: {\n        get: function get() {\n          return getYerr;\n        },\n        set: function set(_) {\n          getYerr = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      // this shows the group name, seems pointless?\n      //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      valuePadding: {\n        get: function get() {\n          return valuePadding;\n        },\n        set: function set(_) {\n          valuePadding = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontalChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend().height(30),\n        controls = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlsPosition = 'top',\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        stacked = false,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n    xAxis.orient('left').tickPadding(5).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient('bottom').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        stacked = multibar.stacked();\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth - controlWidth());\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n          if (controlsPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')').call(controls);\n          } else if (controlsPosition === 'top') {\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksY(availableHeight / 24, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n          xTicks.selectAll('line, text');\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", y(0)).attr(\"x2\", y(0)).attr(\"y1\", 0).attr(\"y2\", -availableHeight); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          stacked = multibar.stacked();\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('multibar horizontal chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        key: evt.data.key,\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      controlsPosition: {\n        get: function get() {\n          return controlsPosition;\n        },\n        set: function set(_) {\n          controlsPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        var dataLines1 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 1;\n        });\n        var dataLines2 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 2;\n        });\n        var dataScatters1 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 1;\n        });\n        var dataScatters2 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 2;\n        });\n        var dataBars1 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 1;\n        });\n        var dataBars2 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 2;\n        });\n        var dataStack1 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 1;\n        });\n        var dataStack2 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 2;\n        }); // Display noData message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var series1 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 1;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 2;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]);\n        var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        gEnter.append('g').attr('class', 'stack1Wrap');\n        gEnter.append('g').attr('class', 'stack2Wrap');\n        gEnter.append('g').attr('class', 'bars1Wrap');\n        gEnter.append('g').attr('class', 'bars2Wrap');\n        gEnter.append('g').attr('class', 'scatters1Wrap');\n        gEnter.append('g').attr('class', 'scatters2Wrap');\n        gEnter.append('g').attr('class', 'lines1Wrap');\n        gEnter.append('g').attr('class', 'lines2Wrap');\n        gEnter.append('g').attr('class', 'legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        var g = wrap.select('g');\n        var color_array = data.map(function (d, i) {\n          return data[i].color || color(d, i);\n        }); // Legend\n\n        if (!showLegend) {\n          g.select('.legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          legend.color(color_array);\n          g.select('.legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n            series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        lines1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line';\n        }));\n        lines2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line';\n        }));\n        scatters1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter';\n        }));\n        scatters2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter';\n        }));\n        bars1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar';\n        }));\n        bars2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar';\n        }));\n        stack1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area';\n        }));\n        stack2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area';\n        }));\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var lines1Wrap = g.select('.lines1Wrap').datum(dataLines1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters1Wrap = g.select('.scatters1Wrap').datum(dataScatters1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars1Wrap = g.select('.bars1Wrap').datum(dataBars1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack1Wrap = g.select('.stack1Wrap').datum(dataStack1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var lines2Wrap = g.select('.lines2Wrap').datum(dataLines2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters2Wrap = g.select('.scatters2Wrap').datum(dataScatters2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars2Wrap = g.select('.bars2Wrap').datum(dataBars2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack2Wrap = g.select('.stack2Wrap').datum(dataStack2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var extraValue1BarStacked = [];\n\n        if (bars1.stacked() && dataBars1.length) {\n          var extraValue1BarStacked = dataBars1.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue1BarStacked.length > 0) extraValue1BarStacked = extraValue1BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars1.length) {\n          extraValue1BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        var extraValue2BarStacked = [];\n\n        if (bars2.stacked() && dataBars2.length) {\n          var extraValue2BarStacked = dataBars2.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue2BarStacked.length > 0) extraValue2BarStacked = extraValue2BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars2.length) {\n          extraValue2BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        lines1.yDomain(yScale1.domain());\n        scatters1.yDomain(yScale1.domain());\n        bars1.yDomain(yScale1.domain());\n        stack1.yDomain(yScale1.domain());\n        lines2.yDomain(yScale2.domain());\n        scatters2.yDomain(yScale2.domain());\n        bars2.yDomain(yScale2.domain());\n        stack2.yDomain(yScale2.domain());\n\n        if (dataStack1.length) {\n          d3.transition(stack1Wrap).call(stack1);\n        }\n\n        if (dataStack2.length) {\n          d3.transition(stack2Wrap).call(stack2);\n        }\n\n        if (dataBars1.length) {\n          d3.transition(bars1Wrap).call(bars1);\n        }\n\n        if (dataBars2.length) {\n          d3.transition(bars2Wrap).call(bars2);\n        }\n\n        if (dataLines1.length) {\n          d3.transition(lines1Wrap).call(lines1);\n        }\n\n        if (dataLines2.length) {\n          d3.transition(lines2Wrap).call(lines2);\n        }\n\n        if (dataScatters1.length) {\n          d3.transition(scatters1Wrap).call(scatters1);\n        }\n\n        if (dataScatters2.length) {\n          d3.transition(scatters2Wrap).call(scatters2);\n        }\n\n        xAxis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n        d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n\n        yAxis1._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y1.nv-axis')).call(yAxis1);\n\n        yAxis2._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y2.nv-axis')).call(yAxis2);\n        g.select('.nv-y1.nv-axis').classed('nv-disabled', series1.length ? false : true).attr('transform', 'translate(' + x.range()[0] + ',0)');\n        g.select('.nv-y2.nv-axis').classed('nv-disabled', series2.length ? false : true).attr('transform', 'translate(' + x.range()[1] + ',0)');\n        legend.dispatch.on('stateChange', function (newState) {\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching\n        //------------------------------------------------------------\n\n\n        function mouseover_line(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_scatter(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(100).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_stack(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.point['x'] = stack1.x()(evt.point);\n          evt.point['y'] = stack1.y()(evt.point);\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_bar(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = bars1.x()(evt.data);\n          evt['series'] = {\n            value: bars1.y()(evt.data),\n            color: evt.color,\n            key: evt.data.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function clearHighlights() {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.clearHighlights();\n            } catch (e) {}\n          }\n        }\n\n        function highlightPoint(serieIndex, pointIndex, b) {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.highlightPoint(serieIndex, pointIndex, b);\n            } catch (e) {}\n          }\n        }\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            clearHighlights();\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              var extent = x.domain();\n              var currentValues = series.values.filter(function (d, i) {\n                return chart.x()(d, i) >= extent[0] && chart.x()(d, i) <= extent[1];\n              });\n              pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n              var point = currentValues[pointIndex];\n              var pointYValue = chart.y()(point, pointIndex);\n\n              if (pointYValue !== null) {\n                highlightPoint(i, pointIndex, true);\n              }\n\n              if (point === undefined) return;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = x(chart.x()(point, pointIndex));\n              allData.push({\n                key: series.key,\n                value: pointYValue,\n                color: color(series, series.seriesIndex),\n                data: point,\n                yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n              });\n            });\n\n            var defaultValueFormatter = function defaultValueFormatter(d, i) {\n              var yAxis = allData[i].yAxis;\n              return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n            };\n\n            interactiveLayer.tooltip.headerFormatter(function (d, i) {\n              return xAxis.tickFormat()(d, i);\n            }).valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n              value: chart.x()(singlePoint, pointIndex),\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            clearHighlights();\n          });\n        } else {\n          lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          lines2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n          bars2.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      yDomain1: {\n        get: function get() {\n          return yDomain1;\n        },\n        set: function set(_) {\n          yDomain1 = _;\n        }\n      },\n      yDomain2: {\n        get: function get() {\n          return yDomain2;\n        },\n        set: function set(_) {\n          yDomain2 = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines1.x(_);\n          lines2.x(_);\n          scatters1.x(_);\n          scatters2.x(_);\n          bars1.x(_);\n          bars2.x(_);\n          stack1.x(_);\n          stack2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines1.y(_);\n          lines2.y(_);\n          scatters1.y(_);\n          scatters2.y(_);\n          stack1.y(_);\n          stack2.y(_);\n          bars1.y(_);\n          bars2.y(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n          lines1.useVoronoi(_);\n          lines2.useVoronoi(_);\n          stack1.useVoronoi(_);\n          stack2.useVoronoi(_);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines1.interactive(false);\n            lines1.useVoronoi(false);\n            lines2.interactive(false);\n            lines2.useVoronoi(false);\n            stack1.interactive(false);\n            stack1.useVoronoi(false);\n            stack2.interactive(false);\n            stack2.useVoronoi(false);\n            scatters1.interactive(false);\n            scatters2.interactive(false);\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function (model) {\n            model.duration(duration);\n          });\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.ohlcBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // ohlc bar width.\n\n        var w = availableWidth / data[0].values.length * .9; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + w / 2, availableWidth - w / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        ticks.enter().append('path').attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        }).attr('d', function (d, i) {\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('fill', function (d, i) {\n          return color[0];\n        }).attr('stroke', function (d, i) {\n          return color[0];\n        }).attr('x', 0).attr('y', function (d, i) {\n          return y(Math.max(0, getY(d, i)));\n        }).attr('height', function (d, i) {\n          return Math.abs(y(getY(d, i)) - y(0));\n        }); // the bar colors are controlled by CSS currently\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        d3.transition(ticks).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('d', function (d, i) {\n          var w = availableWidth / data[0].values.length * .9;\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-ohlcBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Code adapted from Jason Davies' \"Parallel Coordinates\"\n  // http://bl.ocks.org/jasondavies/1341281\n\n\n  nv.models.parallelCoordinates = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 0,\n      bottom: 10,\n      left: 0\n    },\n        width = null,\n        height = null,\n        availableWidth = null,\n        availableHeight = null,\n        x = d3.scale.ordinal(),\n        y = {},\n        undefinedValuesLabel = \"undefined values\",\n        dimensionData = [],\n        enabledDimensions = [],\n        dimensionNames = [],\n        displayBrush = true,\n        color = nv.utils.defaultColor(),\n        filters = [],\n        active = [],\n        dragging = [],\n        axisWithUndefinedValues = [],\n        lineTension = 1,\n        foreground,\n        background,\n        dimensions,\n        line = d3.svg.line(),\n        axis = d3.svg.axis(),\n        dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //Convert old data to new format (name, values)\n\n        if (data[0].values === undefined) {\n          var newData = [];\n          data.forEach(function (d) {\n            var val = {};\n            var key = Object.keys(d);\n            key.forEach(function (k) {\n              if (k !== \"name\") val[k] = d[k];\n            });\n            newData.push({\n              key: d.name,\n              values: val\n            });\n          });\n          data = newData;\n        }\n\n        var dataValues = data.map(function (d) {\n          return d.values;\n        });\n\n        if (active.length === 0) {\n          active = data;\n        }\n\n        ; //set all active before first brush call\n\n        dimensionNames = dimensionData.sort(function (a, b) {\n          return a.currentPosition - b.currentPosition;\n        }).map(function (d) {\n          return d.key;\n        });\n        enabledDimensions = dimensionData.filter(function (d) {\n          return !d.disabled;\n        }); // Setup Scales\n\n        x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) {\n          return d.key;\n        })); //Set as true if all values on an axis are missing.\n        // Extract the list of dimensions and create a scale for each.\n\n        var oldDomainMaxValue = {};\n        var displayMissingValuesline = false;\n        var currentTicks = [];\n        dimensionNames.forEach(function (d) {\n          var extent = d3.extent(dataValues, function (p) {\n            return +p[d];\n          });\n          var min = extent[0];\n          var max = extent[1];\n          var onlyUndefinedValues = false; //If there is no values to display on an axis, set the extent to 0\n\n          if (isNaN(min) || isNaN(max)) {\n            onlyUndefinedValues = true;\n            min = 0;\n            max = 0;\n          } //Scale axis if there is only one value\n\n\n          if (min === max) {\n            min = min - 1;\n            max = max + 1;\n          }\n\n          var f = filters.filter(function (k) {\n            return k.dimension == d;\n          });\n\n          if (f.length !== 0) {\n            //If there is only NaN values, keep the existing domain.\n            if (onlyUndefinedValues) {\n              min = y[d].domain()[0];\n              max = y[d].domain()[1];\n            } //If the brush extent is > max (< min), keep the extent value.\n            else if (!f[0].hasOnlyNaN && displayBrush) {\n                min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                max = max < f[0].extent[1] ? f[0].extent[1] : max;\n              } //If there is NaN values brushed be sure the brush extent is on the domain.\n              else if (f[0].hasNaN) {\n                  max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                  oldDomainMaxValue[d] = y[d].domain()[1];\n                  displayMissingValuesline = true;\n                }\n          } //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n          //The remaining 10% are used to display the missingValue line.\n\n\n          y[d] = d3.scale.linear().domain([min, max]).range([(availableHeight - 12) * 0.9, 0]);\n          axisWithUndefinedValues = [];\n          y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n        }); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        line.interpolate('cardinal').tension(lineTension);\n        axis.orient('left');\n        var axisDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd); //Add missing value line at the bottom of the chart\n\n        var missingValuesline, missingValueslineText;\n        var step = x.range()[1] - x.range()[0];\n        step = isNaN(step) ? x.range()[0] : step;\n\n        if (!isNaN(step)) {\n          var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n          missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n          missingValuesline.enter().append('line');\n          missingValuesline.exit().remove();\n          missingValuesline.attr(\"x1\", function (d) {\n            return d[0];\n          }).attr(\"y1\", function (d) {\n            return d[1];\n          }).attr(\"x2\", function (d) {\n            return d[2];\n          }).attr(\"y2\", function (d) {\n            return d[3];\n          }); //Add the text \"undefined values\" under the missing value line\n\n          missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n          missingValueslineText.append('text').data([undefinedValuesLabel]);\n          missingValueslineText.enter().append('text');\n          missingValueslineText.exit().remove();\n          missingValueslineText.attr(\"y\", availableHeight) //To have the text right align with the missingValues line, substract 92 representing the text size.\n          .attr(\"x\", availableWidth - 92 - step / 2).text(function (d) {\n            return d;\n          });\n        } // Add grey background lines for context.\n\n\n        background = wrap.select('.background').selectAll('path').data(data);\n        background.enter().append('path');\n        background.exit().remove();\n        background.attr('d', path); // Add blue foreground lines for focus.\n\n        foreground = wrap.select('.foreground').selectAll('path').data(data);\n        foreground.enter().append('path');\n        foreground.exit().remove();\n        foreground.attr('d', path).style(\"stroke-width\", function (d, i) {\n          if (isNaN(d.strokeWidth)) {\n            d.strokeWidth = 1;\n          }\n\n          return d.strokeWidth;\n        }).attr('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n        foreground.on(\"mouseover\", function (d, i) {\n          d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n          dispatch.elementMouseover({\n            label: d.name,\n            color: d.color || color(d, i),\n            values: d.values,\n            dimensions: enabledDimensions\n          });\n        });\n        foreground.on(\"mouseout\", function (d, i) {\n          d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n          dispatch.elementMouseout({\n            label: d.name,\n            index: i\n          });\n        });\n        foreground.on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        });\n        foreground.on('click', function (d) {\n          dispatch.elementClick({\n            id: d.id\n          });\n        }); // Add a group element for each dimension.\n\n        dimensions = g.selectAll('.dimension').data(enabledDimensions);\n        var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n        dimensions.attr('transform', function (d) {\n          return 'translate(' + x(d.key) + ',0)';\n        });\n        dimensionsEnter.append('g').attr('class', 'nv-axis'); // Add an axis and title.\n\n        dimensionsEnter.append('text').attr('class', 'nv-label').style(\"cursor\", \"move\").attr('dy', '-1em').attr('text-anchor', 'middle').on(\"mouseover\", function (d, i) {\n          dispatch.elementMouseover({\n            label: d.tooltip || d.key,\n            color: d.color\n          });\n        }).on(\"mouseout\", function (d, i) {\n          dispatch.elementMouseout({\n            label: d.tooltip\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        }).call(axisDrag);\n        dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n        dimensions.exit().remove();\n        dimensions.select('.nv-label').text(function (d) {\n          return d.key;\n        }); // Add and store a brush for each axis.\n\n        restoreBrush(displayBrush);\n        var actives = dimensionNames.filter(function (p) {\n          return !y[p].brush.empty();\n        }),\n            extents = actives.map(function (p) {\n          return y[p].brush.extent();\n        });\n        var formerActive = active.slice(0); //Restore active values\n\n        active = [];\n        foreground.style(\"display\", function (d) {\n          var isActive = actives.every(function (p, i) {\n            if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n              return true;\n            }\n\n            return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n          });\n          if (isActive) active.push(d);\n          return !isActive ? \"none\" : null;\n        });\n\n        if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n          dispatch.activeChanged(active);\n        } // Returns the path for a given data point.\n\n\n        function path(d) {\n          return line(enabledDimensions.map(function (p) {\n            //If value if missing, put the value on the missing value line\n            if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n              var domain = y[p.key].domain();\n              var range = y[p.key].range();\n              var min = domain[0] - (domain[1] - domain[0]) / 9; //If it's not already the case, allow brush to select undefined values\n\n              if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n                var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                y[p.key].brush.y(newscale);\n                axisWithUndefinedValues.push(p.key);\n              }\n\n              if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                return [x(p.key), y[p.key](min)];\n              }\n            } //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\n\n            if (missingValuesline !== undefined) {\n              if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                missingValuesline.style(\"display\", \"inline\");\n                missingValueslineText.style(\"display\", \"inline\");\n              } else {\n                missingValuesline.style(\"display\", \"none\");\n                missingValueslineText.style(\"display\", \"none\");\n              }\n            }\n\n            return [x(p.key), y[p.key](d.values[p.key])];\n          }));\n        }\n\n        function restoreBrush(visible) {\n          filters.forEach(function (f) {\n            //If filter brushed NaN values, keep the brush on the bottom of the axis.\n            var brushDomain = y[f.dimension].brush.y().domain();\n\n            if (f.hasOnlyNaN) {\n              f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n            }\n\n            if (f.hasNaN) {\n              f.extent[0] = brushDomain[0];\n            }\n\n            if (visible) y[f.dimension].brush.extent(f.extent);\n          });\n          dimensions.select('.nv-brushBackground').each(function (d) {\n            d3.select(this).call(y[d.key].brush);\n          }).selectAll('rect').attr('x', -8).attr('width', 16);\n          updateTicks();\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brushstart() {\n          //If brush aren't visible, show it before brushing again.\n          if (displayBrush === false) {\n            displayBrush = true;\n            restoreBrush(true);\n          }\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brush() {\n          actives = dimensionNames.filter(function (p) {\n            return !y[p].brush.empty();\n          });\n          extents = actives.map(function (p) {\n            return y[p].brush.extent();\n          });\n          filters = []; //erase current filters\n\n          actives.forEach(function (d, i) {\n            filters[i] = {\n              dimension: d,\n              extent: extents[i],\n              hasNaN: false,\n              hasOnlyNaN: false\n            };\n          });\n          active = []; //erase current active list\n\n          foreground.style('display', function (d) {\n            var isActive = actives.every(function (p, i) {\n              if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n              return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n            });\n            if (isActive) active.push(d);\n            return isActive ? null : 'none';\n          });\n          updateTicks();\n          dispatch.brush({\n            filters: filters,\n            active: active\n          });\n        }\n\n        function brushend() {\n          var hasActiveBrush = actives.length > 0 ? true : false;\n          filters.forEach(function (f) {\n            if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0) f.hasNaN = true;\n            if (f.extent[1] < y[f.dimension].domain()[0]) f.hasOnlyNaN = true;\n          });\n          dispatch.brushEnd(active, hasActiveBrush);\n        }\n\n        function updateTicks() {\n          dimensions.select('.nv-axis').each(function (d, i) {\n            var f = filters.filter(function (k) {\n              return k.dimension == d.key;\n            });\n            currentTicks[d.key] = y[d.key].domain(); //If brush are available, display brush extent\n\n            if (f.length != 0 && displayBrush) {\n              currentTicks[d.key] = [];\n              if (f[0].extent[1] > y[d.key].domain()[0]) currentTicks[d.key] = [f[0].extent[1]];\n              if (f[0].extent[0] >= y[d.key].domain()[0]) currentTicks[d.key].push(f[0].extent[0]);\n            }\n\n            d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n          });\n        }\n\n        function dragStart(d) {\n          dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n          background.attr(\"visibility\", \"hidden\");\n        }\n\n        function dragMove(d) {\n          dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n          foreground.attr(\"d\", path);\n          enabledDimensions.sort(function (a, b) {\n            return dimensionPosition(a.key) - dimensionPosition(b.key);\n          });\n          enabledDimensions.forEach(function (d, i) {\n            return d.currentPosition = i;\n          });\n          x.domain(enabledDimensions.map(function (d) {\n            return d.key;\n          }));\n          dimensions.attr(\"transform\", function (d) {\n            return \"translate(\" + dimensionPosition(d.key) + \")\";\n          });\n        }\n\n        function dragEnd(d, i) {\n          delete this.parentNode.__origin__;\n          delete dragging[d.key];\n          d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n          foreground.attr(\"d\", path);\n          background.attr(\"d\", path).attr(\"visibility\", null);\n          dispatch.dimensionsOrder(enabledDimensions);\n        }\n\n        function dimensionPosition(d) {\n          var v = dragging[d];\n          return v == null ? x(d) : v;\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      filters: {\n        get: function get() {\n          return filters;\n        },\n        set: function set(_) {\n          filters = _;\n        }\n      },\n      active: {\n        get: function get() {\n          return active;\n        },\n        set: function set(_) {\n          active = _;\n        }\n      },\n      lineTension: {\n        get: function get() {\n          return lineTension;\n        },\n        set: function set(_) {\n          lineTension = _;\n        }\n      },\n      undefinedValuesLabel: {\n        get: function get() {\n          return undefinedValuesLabel;\n        },\n        set: function set(_) {\n          undefinedValuesLabel = _;\n        }\n      },\n      // deprecated options\n      dimensions: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensions', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionNames: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionNames', 'use dimensionData instead');\n          dimensionNames = [];\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionFormats: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.format;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (f) {\n              dimensionData.push({\n                format: f\n              });\n            });\n          } else {\n            _.forEach(function (f, i) {\n              dimensionData[i].format = f;\n            });\n          }\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.parallelCoordinatesChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var parallelCoordinates = nv.models.parallelCoordinates();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var dimensionTooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showLegend = true,\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        dimensionData = [],\n        displayBrush = true,\n        defaultState = null,\n        noData = null,\n        nanValue = \"undefined\",\n        dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    }; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    };\n\n    tooltip.contentGenerator(function (data) {\n      var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\n      if (data.series.length !== 0) {\n        str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n        data.series.forEach(function (d) {\n          str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n        });\n        str = str + '</tbody>';\n      }\n\n      str = str + '</table>';\n      return str;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(parallelCoordinates);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(dimensionData), chart.update).getter(stateGetter(dimensionData)).update(); //set state.disabled\n\n        state.disabled = dimensionData.map(function (d) {\n          return !!d.disabled;\n        }); //Keep dimensions position in memory\n\n        dimensionData = dimensionData.map(function (d) {\n          d.disabled = !!d.disabled;\n          return d;\n        });\n        dimensionData.forEach(function (d, i) {\n          d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n          d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.select(\"rect\").attr(\"width\", availableWidth).attr(\"height\", availableHeight > 0 ? availableHeight : 0); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth).color(function (d) {\n            return \"rgb(188,190,192)\";\n          });\n          g.select('.nv-legendWrap').datum(dimensionData.sort(function (a, b) {\n            return a.originalPosition - b.originalPosition;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate( 0 ,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        parallelCoordinates.width(availableWidth).height(availableHeight).dimensionData(dimensionData).displayBrush(displayBrush);\n        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ').datum(data);\n        parallelCoordinatesWrap.transition().call(parallelCoordinates); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //Display reset brush button\n\n        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n          if (hasActiveBrush) {\n            displayBrush = true;\n            dispatch.brushEnd(active);\n          } else {\n            displayBrush = false;\n          }\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); //Update dimensions order and display reset sorting button\n\n        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n          dimensionData.sort(function (a, b) {\n            return a.currentPosition - b.currentPosition;\n          });\n          var isSorted = false;\n          dimensionData.forEach(function (d, i) {\n            d.currentPosition = i;\n            if (d.currentPosition !== d.originalPosition) isSorted = true;\n          });\n          dispatch.dimensionsOrder(dimensionData, isSorted);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            dimensionData.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('parraleleCoordinateChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var tp = {\n        key: evt.label,\n        color: evt.color,\n        series: []\n      };\n\n      if (evt.values) {\n        Object.keys(evt.values).forEach(function (d) {\n          var dim = evt.dimensions.filter(function (dd) {\n            return dd.key === d;\n          })[0];\n\n          if (dim) {\n            var v;\n\n            if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n              v = nanValue;\n            } else {\n              v = dim.format(evt.values[d]);\n            }\n\n            tp.series.push({\n              idx: dim.currentPosition,\n              key: d,\n              value: v,\n              color: dim.color\n            });\n          }\n        });\n        tp.series.sort(function (a, b) {\n          return a.idx - b.idx;\n        });\n      }\n\n      tooltip.data(tp).hidden(false);\n    });\n    parallelCoordinates.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.parallelCoordinates = parallelCoordinates;\n    chart.legend = legend;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nanValue: {\n        get: function get() {\n          return nanValue;\n        },\n        set: function set(_) {\n          nanValue = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          parallelCoordinates.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, parallelCoordinates);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pie = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 500,\n        height = 500,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        valueFormat = d3.format(',.2f'),\n        showLabels = true,\n        labelsOutside = false,\n        labelType = \"key\",\n        labelThreshold = .02 //if slice percentage is under this, don't show label\n    ,\n        hideOverlapLabels = false //Hide labels that don't fit in slice\n    ,\n        donut = false,\n        title = false,\n        growOnHover = true,\n        titleOffset = 0,\n        labelSunbeamLayout = false,\n        startAngle = false,\n        padAngle = false,\n        endAngle = false,\n        cornerRadius = 0,\n        donutRatio = 0.5,\n        duration = 250,\n        arcsRadius = [],\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd');\n\n    var arcs = [];\n    var arcsOver = []; //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom,\n            radius = Math.min(availableWidth, availableHeight) / 2,\n            arcsRadiusOuter = [],\n            arcsRadiusInner = [];\n        container = d3.select(this);\n\n        if (arcsRadius.length === 0) {\n          var outer = radius - radius / 10;\n          var inner = donutRatio * radius;\n\n          for (var i = 0; i < data[0].length; i++) {\n            arcsRadiusOuter.push(outer);\n            arcsRadiusInner.push(inner);\n          }\n        } else {\n          if (growOnHover) {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return (d.outer - d.outer / 10) * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return (d.inner - d.inner / 10) * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner - d.inner / 10;\n            }));\n          } else {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return d.outer * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return d.inner * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner;\n            }));\n          }\n        }\n\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pie nv-chart-' + id);\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n        gEnter.append('g').attr('class', 'nv-pieLabels');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n        g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')'); //\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        arcs = [];\n        arcsOver = [];\n\n        for (var i = 0; i < data[0].length; i++) {\n          var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n          var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n          if (startAngle !== false) {\n            arc.startAngle(startAngle);\n            arcOver.startAngle(startAngle);\n          }\n\n          if (endAngle !== false) {\n            arc.endAngle(endAngle);\n            arcOver.endAngle(endAngle);\n          }\n\n          if (donut) {\n            arc.innerRadius(arcsRadiusInner[i]);\n            arcOver.innerRadius(arcsRadiusInner[i]);\n          }\n\n          if (arc.cornerRadius && cornerRadius) {\n            arc.cornerRadius(cornerRadius);\n            arcOver.cornerRadius(cornerRadius);\n          }\n\n          arcs.push(arc);\n          arcsOver.push(arcOver);\n        } // Setup the Pie chart and choose the data element\n\n\n        var pie = d3.layout.pie().sort(null).value(function (d) {\n          return d.disabled ? 0 : getY(d);\n        }); // padAngle added in d3 3.5\n\n        if (pie.padAngle && padAngle) {\n          pie.padAngle(padAngle);\n        } // if title is specified and donut, put it in the middle\n\n\n        if (donut && title) {\n          g_pie.append(\"text\").attr('class', 'nv-pie-title');\n          wrap.select('.nv-pie-title').style(\"text-anchor\", \"middle\").text(function (d) {\n            return title;\n          }).style(\"font-size\", Math.min(availableWidth, availableHeight) * donutRatio * 2 / (title.length + 2) + \"px\").attr(\"dy\", \"0.35em\") // trick to vertically center text\n          .attr('transform', function (d, i) {\n            return 'translate(0, ' + titleOffset + ')';\n          });\n        }\n\n        var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n        var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n        slices.exit().remove();\n        pieLabels.exit().remove();\n        var ae = slices.enter().append('g');\n        ae.attr('class', 'nv-slice');\n        ae.on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(70).attr(\"d\", arcsOver[i]);\n          }\n\n          dispatch.elementMouseover({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n          });\n        });\n        ae.on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(50).attr(\"d\", arcs[i]);\n          }\n\n          dispatch.elementMouseout({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n        });\n        ae.on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        slices.attr('fill', function (d, i) {\n          return color(d.data, i);\n        });\n        slices.attr('stroke', function (d, i) {\n          return color(d.data, i);\n        });\n        var paths = ae.append('path').each(function (d) {\n          this._current = d;\n        });\n        slices.select('path').transition().duration(duration).attr('d', function (d, i) {\n          return arcs[i](d);\n        }).attrTween('d', arcTween);\n\n        if (showLabels) {\n          // This does the normal label\n          var labelsArc = [];\n\n          for (var i = 0; i < data[0].length; i++) {\n            labelsArc.push(arcs[i]);\n\n            if (labelsOutside) {\n              if (donut) {\n                labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n              }\n            } else if (!donut) {\n              labelsArc[i].innerRadius(0);\n            }\n          }\n\n          pieLabels.enter().append(\"g\").classed(\"nv-label\", true).each(function (d, i) {\n            var group = d3.select(this);\n            group.attr('transform', function (d, i) {\n              if (labelSunbeamLayout) {\n                d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n                d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n                var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n                if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                  rotateAngle -= 90;\n                } else {\n                  rotateAngle += 90;\n                }\n\n                return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n              } else {\n                d.outerRadius = radius + 10; // Set Outer Coordinate\n\n                d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                return 'translate(' + labelsArc[i].centroid(d) + ')';\n              }\n            });\n            group.append('rect').style('stroke', '#fff').style('fill', '#fff').attr(\"rx\", 3).attr(\"ry\", 3);\n            group.append('text').style('text-anchor', labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n            .style('fill', '#000');\n          });\n          var labelLocationHash = {};\n          var avgHeight = 14;\n          var avgWidth = 140;\n\n          var createHashKey = function createHashKey(coordinates) {\n            return Math.floor(coordinates[0] / avgWidth) * avgWidth + ',' + Math.floor(coordinates[1] / avgHeight) * avgHeight;\n          };\n\n          var getSlicePercentage = function getSlicePercentage(d) {\n            return (d.endAngle - d.startAngle) / (2 * Math.PI);\n          };\n\n          pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n            if (labelSunbeamLayout) {\n              d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n              d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n              var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n              if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                rotateAngle -= 90;\n              } else {\n                rotateAngle += 90;\n              }\n\n              return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n            } else {\n              d.outerRadius = radius + 10; // Set Outer Coordinate\n\n              d.innerRadius = radius + 15; // Set Inner Coordinate\n\n              /*\n              Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n              Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n              Adjust the label's y-position to remove the overlap.\n              */\n\n              var center = labelsArc[i].centroid(d);\n              var percent = getSlicePercentage(d);\n\n              if (d.value && percent >= labelThreshold) {\n                var hashKey = createHashKey(center);\n\n                if (labelLocationHash[hashKey]) {\n                  center[1] -= avgHeight;\n                }\n\n                labelLocationHash[createHashKey(center)] = true;\n              }\n\n              return 'translate(' + center + ')';\n            }\n          });\n          pieLabels.select(\".nv-label text\").style('text-anchor', function (d, i) {\n            //center the text on it's origin or begin/end if orthogonal aligned\n            return labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle';\n          }).text(function (d, i) {\n            var percent = getSlicePercentage(d);\n            var label = '';\n            if (!d.value || percent < labelThreshold) return '';\n\n            if (typeof labelType === 'function') {\n              label = labelType(d, i, {\n                'key': getX(d.data),\n                'value': getY(d.data),\n                'percent': valueFormat(percent)\n              });\n            } else {\n              switch (labelType) {\n                case 'key':\n                  label = getX(d.data);\n                  break;\n\n                case 'value':\n                  label = valueFormat(getY(d.data));\n                  break;\n\n                case 'percent':\n                  label = d3.format('%')(percent);\n                  break;\n              }\n            }\n\n            return label;\n          });\n\n          if (hideOverlapLabels) {\n            pieLabels.each(function (d, i) {\n              if (!this.getBBox) return;\n              var bb = this.getBBox(),\n                  center = labelsArc[i].centroid(d);\n              var topLeft = {\n                x: center[0] + bb.x,\n                y: center[1] + bb.y\n              };\n              var topRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y\n              };\n              var bottomLeft = {\n                x: topLeft.x,\n                y: topLeft.y + bb.height\n              };\n              var bottomRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y + bb.height\n              };\n              d.visible = nv.utils.pointIsInArc(topLeft, d, arc) && nv.utils.pointIsInArc(topRight, d, arc) && nv.utils.pointIsInArc(bottomLeft, d, arc) && nv.utils.pointIsInArc(bottomRight, d, arc);\n            }).style('display', function (d) {\n              return d.visible ? null : 'none';\n            });\n          }\n        } // Computes the angle of an arc, converting from radians to degrees.\n\n\n        function angle(d) {\n          var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n          return a > 90 ? a - 180 : a;\n        }\n\n        function arcTween(a, idx) {\n          a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n          a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n          if (!donut) a.innerRadius = 0;\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function (t) {\n            return arcs[idx](i(t));\n          };\n        }\n      });\n      renderWatch.renderEnd('pie immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      arcsRadius: {\n        get: function get() {\n          return arcsRadius;\n        },\n        set: function set(_) {\n          arcsRadius = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      title: {\n        get: function get() {\n          return title;\n        },\n        set: function set(_) {\n          title = _;\n        }\n      },\n      titleOffset: {\n        get: function get() {\n          return titleOffset;\n        },\n        set: function set(_) {\n          titleOffset = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      hideOverlapLabels: {\n        get: function get() {\n          return hideOverlapLabels;\n        },\n        set: function set(_) {\n          hideOverlapLabels = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      endAngle: {\n        get: function get() {\n          return endAngle;\n        },\n        set: function set(_) {\n          endAngle = _;\n        }\n      },\n      startAngle: {\n        get: function get() {\n          return startAngle;\n        },\n        set: function set(_) {\n          startAngle = _;\n        }\n      },\n      padAngle: {\n        get: function get() {\n          return padAngle;\n        },\n        set: function set(_) {\n          padAngle = _;\n        }\n      },\n      cornerRadius: {\n        get: function get() {\n          return cornerRadius;\n        },\n        set: function set(_) {\n          cornerRadius = _;\n        }\n      },\n      donutRatio: {\n        get: function get() {\n          return donutRatio;\n        },\n        set: function set(_) {\n          donutRatio = _;\n        }\n      },\n      labelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n        }\n      },\n      labelSunbeamLayout: {\n        get: function get() {\n          return labelSunbeamLayout;\n        },\n        set: function set(_) {\n          labelSunbeamLayout = _;\n        }\n      },\n      donut: {\n        get: function get() {\n          return donut;\n        },\n        set: function set(_) {\n          donut = _;\n        }\n      },\n      growOnHover: {\n        get: function get() {\n          return growOnHover;\n        },\n        set: function set(_) {\n          growOnHover = _;\n        }\n      },\n      // depreciated after 1.7.1\n      pieLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // depreciated after 1.7.1\n      donutLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // deprecated after 1.7.1\n      labelFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n          nv.deprecated('labelFormat', 'use valueFormat instead');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n          margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n          margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n          margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      labelType: {\n        get: function get() {\n          return labelType;\n        },\n        set: function set(_) {\n          labelType = _ || 'key';\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pieChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showTooltipPercent = false,\n        showLegend = true,\n        legendPosition = \"top\",\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return pie.valueFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    }; //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(pie);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-pieWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === \"top\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          } else if (legendPosition === \"right\") {\n            var legendWidth = nv.models.legend().width();\n\n            if (availableWidth / 2 < legendWidth) {\n              legendWidth = availableWidth / 2;\n            }\n\n            legend.height(availableHeight).key(pie.x());\n            legend.width(legendWidth);\n            availableWidth -= legend.width();\n            wrap.select('.nv-legendWrap').datum(data).call(legend).attr('transform', 'translate(' + availableWidth + ',0)');\n          } else if (legendPosition === \"bottom\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + availableHeight + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        pie.width(availableWidth).height(availableHeight);\n        var pieWrap = g.select('.nv-pieWrap').datum([data]);\n        d3.transition(pieWrap).call(pie); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('pieChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    pie.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    pie.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    pie.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          legend.color(color);\n          pie.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          pie.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sankey = function () {\n    'use strict'; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function layout(iterations) {\n      computeNodeLinks();\n      computeNodeValues();\n      computeNodeBreadths();\n      computeNodeDepths(iterations);\n    };\n\n    var relayout = function relayout() {\n      computeLinkDepths();\n    }; // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\n\n    var link = function link() {\n      var curvature = .5;\n\n      function link(d) {\n        var x0 = d.source.x + d.source.dx,\n            x1 = d.target.x,\n            xi = d3.interpolateNumber(x0, x1),\n            x2 = xi(curvature),\n            x3 = xi(1 - curvature),\n            y0 = d.source.y + d.sy + d.dy / 2,\n            y1 = d.target.y + d.ty + d.dy / 2;\n        var linkPath = 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;\n        return linkPath;\n      }\n\n      link.curvature = function (_) {\n        if (!arguments.length) return curvature;\n        curvature = +_;\n        return link;\n      };\n\n      return link;\n    }; // Y-position of the middle of a node.\n\n\n    var center = function center(node) {\n      return node.y + node.dy / 2;\n    }; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n\n\n    function computeNodeLinks() {\n      nodes.forEach(function (node) {\n        // Links that have this node as source.\n        node.sourceLinks = []; // Links that have this node as target.\n\n        node.targetLinks = [];\n      });\n      links.forEach(function (link) {\n        var source = link.source,\n            target = link.target;\n        if (typeof source === 'number') source = link.source = nodes[link.source];\n        if (typeof target === 'number') target = link.target = nodes[link.target];\n        source.sourceLinks.push(link);\n        target.targetLinks.push(link);\n      });\n    } // Compute the value (size) of each node by summing the associated links.\n\n\n    function computeNodeValues() {\n      nodes.forEach(function (node) {\n        node.value = Math.max(d3.sum(node.sourceLinks, value), d3.sum(node.targetLinks, value));\n      });\n    } // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n\n\n    function computeNodeBreadths() {\n      //\n      var remainingNodes = nodes,\n          nextNodes,\n          x = 0; // Work from left to right.\n      // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n      //\n\n      while (remainingNodes.length && x < nodes.length) {\n        nextNodes = [];\n        remainingNodes.forEach(function (node) {\n          node.x = x;\n          node.dx = nodeWidth;\n          node.sourceLinks.forEach(function (link) {\n            if (nextNodes.indexOf(link.target) < 0) {\n              nextNodes.push(link.target);\n            }\n          });\n        });\n        remainingNodes = nextNodes;\n        ++x; //\n      } // Optionally move pure sinks always to the right.\n\n\n      if (sinksRight) {\n        moveSinksRight(x);\n      }\n\n      scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n      nodes.forEach(function (node) {\n        if (!node.targetLinks.length) {\n          node.x = d3.min(node.sourceLinks, function (d) {\n            return d.target.x;\n          }) - 1;\n        }\n      });\n    }\n\n    function moveSinksRight(x) {\n      nodes.forEach(function (node) {\n        if (!node.sourceLinks.length) {\n          node.x = x - 1;\n        }\n      });\n    }\n\n    function scaleNodeBreadths(kx) {\n      nodes.forEach(function (node) {\n        node.x *= kx;\n      });\n    } // Compute the depth (y-position) for each node.\n\n\n    function computeNodeDepths(iterations) {\n      // Group nodes by breath.\n      var nodesByBreadth = d3.nest().key(function (d) {\n        return d.x;\n      }).sortKeys(d3.ascending).entries(nodes).map(function (d) {\n        return d.values;\n      }); //\n\n      initializeNodeDepth();\n      resolveCollisions();\n      computeLinkDepths();\n\n      for (var alpha = 1; iterations > 0; --iterations) {\n        relaxRightToLeft(alpha *= .99);\n        resolveCollisions();\n        computeLinkDepths();\n        relaxLeftToRight(alpha);\n        resolveCollisions();\n        computeLinkDepths();\n      }\n\n      function initializeNodeDepth() {\n        // Calculate vertical scaling factor.\n        var ky = d3.min(nodesByBreadth, function (nodes) {\n          return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n        });\n        nodesByBreadth.forEach(function (nodes) {\n          nodes.forEach(function (node, i) {\n            node.y = i;\n            node.dy = node.value * ky;\n          });\n        });\n        links.forEach(function (link) {\n          link.dy = link.value * ky;\n        });\n      }\n\n      function relaxLeftToRight(alpha) {\n        nodesByBreadth.forEach(function (nodes, breadth) {\n          nodes.forEach(function (node) {\n            if (node.targetLinks.length) {\n              // Value-weighted average of the y-position of source node centers linked to this node.\n              var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedSource(link) {\n          return (link.source.y + link.sy + link.dy / 2) * link.value;\n        }\n      }\n\n      function relaxRightToLeft(alpha) {\n        nodesByBreadth.slice().reverse().forEach(function (nodes) {\n          nodes.forEach(function (node) {\n            if (node.sourceLinks.length) {\n              // Value-weighted average of the y-positions of target nodes linked to this node.\n              var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedTarget(link) {\n          return (link.target.y + link.ty + link.dy / 2) * link.value;\n        }\n      }\n\n      function resolveCollisions() {\n        nodesByBreadth.forEach(function (nodes) {\n          var node,\n              dy,\n              y0 = 0,\n              n = nodes.length,\n              i; // Push any overlapping nodes down.\n\n          nodes.sort(ascendingDepth);\n\n          for (i = 0; i < n; ++i) {\n            node = nodes[i];\n            dy = y0 - node.y;\n            if (dy > 0) node.y += dy;\n            y0 = node.y + node.dy + nodePadding;\n          } // If the bottommost node goes outside the bounds, push it back up.\n\n\n          dy = y0 - nodePadding - size[1];\n\n          if (dy > 0) {\n            y0 = node.y -= dy; // Push any overlapping nodes back up.\n\n            for (i = n - 2; i >= 0; --i) {\n              node = nodes[i];\n              dy = node.y + node.dy + nodePadding - y0;\n              if (dy > 0) node.y -= dy;\n              y0 = node.y;\n            }\n          }\n        });\n      }\n\n      function ascendingDepth(a, b) {\n        return a.y - b.y;\n      }\n    } // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n\n\n    function computeLinkDepths() {\n      nodes.forEach(function (node) {\n        node.sourceLinks.sort(ascendingTargetDepth);\n        node.targetLinks.sort(ascendingSourceDepth);\n      });\n      nodes.forEach(function (node) {\n        var sy = 0,\n            ty = 0;\n        node.sourceLinks.forEach(function (link) {\n          link.sy = sy;\n          sy += link.dy;\n        });\n        node.targetLinks.forEach(function (link) {\n          link.ty = ty;\n          ty += link.dy;\n        });\n      });\n\n      function ascendingSourceDepth(a, b) {\n        return a.source.y - b.source.y;\n      }\n\n      function ascendingTargetDepth(a, b) {\n        return a.target.y - b.target.y;\n      }\n    } // Value property accessor.\n\n\n    function value(x) {\n      return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = +_;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      nodes: {\n        get: function get() {\n          return nodes;\n        },\n        set: function set(_) {\n          nodes = _;\n        }\n      },\n      links: {\n        get: function get() {\n          return links;\n        },\n        set: function set(_) {\n          links = _;\n        }\n      },\n      size: {\n        get: function get() {\n          return size;\n        },\n        set: function set(_) {\n          size = _;\n        }\n      },\n      sinksRight: {\n        get: function get() {\n          return sinksRight;\n        },\n        set: function set(_) {\n          sinksRight = _;\n        }\n      },\n      layout: {\n        get: function get() {\n          layout(32);\n        },\n        set: function set(_) {\n          layout(_);\n        }\n      },\n      relayout: {\n        get: function get() {\n          relayout();\n        },\n        set: function set(_) {}\n      },\n      center: {\n        get: function get() {\n          return center();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            center = _;\n          }\n        }\n      },\n      link: {\n        get: function get() {\n          return link();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            link = _;\n          }\n\n          return link();\n        }\n      }\n    });\n    nv.utils.initOptions(sankey);\n    return sankey;\n  };\n\n  nv.models.sankeyChart = function () {\n    \"use strict\"; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        sankey = nv.models.sankey(),\n        width = 600,\n        height = 400,\n        nodeWidth = 36,\n        nodePadding = 40,\n        units = 'units',\n        center = undefined; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f'); // zero decimal places\n\n    var format = function format(d) {\n      return formatNumber(d) + ' ' + units;\n    };\n\n    var color = d3.scale.category20();\n\n    var linkTitle = function linkTitle(d) {\n      return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n\n    var nodeFillColor = function nodeFillColor(d) {\n      return d.color = color(d.name.replace(/ .*/, ''));\n    };\n\n    var nodeStrokeColor = function nodeStrokeColor(d) {\n      return d3.rgb(d.color).darker(2);\n    };\n\n    var nodeTitle = function nodeTitle(d) {\n      return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function showError(element, message) {\n      element.append('text').attr('x', 0).attr('y', 0).attr('class', 'nvd3-sankey-chart-error').attr('text-anchor', 'middle').text(message);\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var testData = {\n          nodes: [{\n            'node': 1,\n            'name': 'Test 1'\n          }, {\n            'node': 2,\n            'name': 'Test 2'\n          }, {\n            'node': 3,\n            'name': 'Test 3'\n          }, {\n            'node': 4,\n            'name': 'Test 4'\n          }, {\n            'node': 5,\n            'name': 'Test 5'\n          }, {\n            'node': 6,\n            'name': 'Test 6'\n          }],\n          links: [{\n            'source': 0,\n            'target': 1,\n            'value': 2295\n          }, {\n            'source': 0,\n            'target': 5,\n            'value': 1199\n          }, {\n            'source': 1,\n            'target': 2,\n            'value': 1119\n          }, {\n            'source': 1,\n            'target': 5,\n            'value': 1176\n          }, {\n            'source': 2,\n            'target': 3,\n            'value': 487\n          }, {\n            'source': 2,\n            'target': 5,\n            'value': 632\n          }, {\n            'source': 3,\n            'target': 4,\n            'value': 301\n          }, {\n            'source': 3,\n            'target': 5,\n            'value': 186\n          }]\n        }; // Error handling\n\n        var isDataValid = false;\n        var dataAvailable = false; // check if data is valid\n\n        if ((typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 && (typeof data['links'] === 'object' && data['links'].length) >= 0) {\n          isDataValid = true;\n        } // check if data is available\n\n\n        if (data['nodes'] && data['nodes'].length > 0 && data['links'] && data['links'].length > 0) {\n          dataAvailable = true;\n        } // show error\n\n\n        if (!isDataValid) {\n          console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n          console.info('Valid data format is: ', testData, JSON.stringify(testData));\n          showError(selection, 'Error loading chart, data is invalid');\n          return false;\n        } // TODO use nv.utils.noData\n\n\n        if (!dataAvailable) {\n          showError(selection, 'No data available');\n          return false;\n        } // No errors, continue\n        // append the svg canvas to the page\n\n\n        var svg = selection.append('svg').attr('width', width).attr('height', height).append('g').attr('class', 'nvd3 nv-wrap nv-sankeyChart'); // Set the sankey diagram properties\n\n        sankey.nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n        var path = sankey.link();\n        sankey.nodes(data.nodes).links(data.links).layout(32).center(center); // add in the links\n\n        var link = svg.append('g').selectAll('.link').data(data.links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', function (d) {\n          return Math.max(1, d.dy);\n        }).sort(function (a, b) {\n          return b.dy - a.dy;\n        }); // add the link titles\n\n        link.append('title').text(linkTitle); // add in the nodes\n\n        var node = svg.append('g').selectAll('.node').data(data.nodes).enter().append('g').attr('class', 'node').attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        }).call(d3.behavior.drag().origin(function (d) {\n          return d;\n        }).on('dragstart', function () {\n          this.parentNode.appendChild(this);\n        }).on('drag', dragmove)); // add the rectangles for the nodes\n\n        node.append('rect').attr('height', function (d) {\n          return d.dy;\n        }).attr('width', sankey.nodeWidth()).style('fill', nodeFillColor).style('stroke', nodeStrokeColor).append('title').text(nodeTitle); // add in the title for the nodes\n\n        node.append('text').attr('x', -6).attr('y', function (d) {\n          return d.dy / 2;\n        }).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(function (d) {\n          return d.name;\n        }).filter(function (d) {\n          return d.x < width / 2;\n        }).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start'); // the function for moving the nodes\n\n        function dragmove(d) {\n          d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')');\n          sankey.relayout();\n          link.attr('d', path);\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      units: {\n        get: function get() {\n          return units;\n        },\n        set: function set(_) {\n          units = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      format: {\n        get: function get() {\n          return format;\n        },\n        set: function set(_) {\n          format = _;\n        }\n      },\n      linkTitle: {\n        get: function get() {\n          return linkTitle;\n        },\n        set: function set(_) {\n          linkTitle = _;\n        }\n      },\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = _;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      center: {\n        get: function get() {\n          return center;\n        },\n        set: function set(_) {\n          center = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      nodeStyle: {\n        get: function get() {\n          return {};\n        },\n        set: function set(_) {\n          nodeFillColor = _.fillColor !== undefined ? _.fillColor : nodeFillColor;\n          nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n          nodeTitle = _.title !== undefined ? _.title : nodeTitle;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatter = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor() // chooses color\n    ,\n        pointBorderColor = null,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        z = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value\n    ,\n        getSize = function getSize(d) {\n      return d.size || 1;\n    } // accessor to get the point size\n    ,\n        getShape = function getShape(d) {\n      return d.shape || 'circle';\n    } // accessor to get point shape\n    ,\n        forceX = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        forceY = [] // List of numbers to Force into the Y scale\n    ,\n        forceSize = [] // List of numbers to Force into the Size scale\n    ,\n        interactive = true // If true, plots a voronoi overlay for advanced point intersection\n    ,\n        pointActive = function pointActive(d) {\n      return !d.notActive;\n    } // any points that return false will be filtered out\n    ,\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n    ,\n        clipEdge = false // if true, masks points within x and y scale\n    ,\n        clipVoronoi = true // if true, masks each point with a circle... can turn off to slightly increase performance\n    ,\n        showVoronoi = false // display the voronoi areas\n    ,\n        clipRadius = function clipRadius() {\n      return 25;\n    } // function to get the radius for voronoi point clips\n    ,\n        xDomain = null // Override x domain (skips the calculation from data)\n    ,\n        yDomain = null // Override y domain\n    ,\n        xRange = null // Override x range\n    ,\n        yRange = null // Override y range\n    ,\n        sizeDomain = null // Override point size domain\n    ,\n        sizeRange = null,\n        singlePoint = false,\n        dispatch = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd'),\n        useVoronoi = true,\n        duration = 250,\n        interactiveUpdateDelay = 300,\n        showLabels = false; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0,\n        z0 // used to store previous scales\n    ,\n        xDom,\n        yDom // used to store previous domains\n    ,\n        width0,\n        height0,\n        timeoutID,\n        needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        _sizeRange_def = [16, 256],\n        _cache = {}; //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      val = _cache[key] = _cache[key] || {};\n      return val;\n    }\n\n    function delCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      delete _cache[key];\n    }\n\n    function getDiffs(d) {\n      var i,\n          key,\n          val,\n          cache = getCache(d),\n          diffs = false;\n\n      for (i = 1; i < arguments.length; i += 2) {\n        key = arguments[i];\n        val = arguments[i + 1](d[0], d[1]);\n\n        if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n          cache[key] = val;\n          diffs = true;\n        }\n      }\n\n      return diffs;\n    }\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n\n        var logScale = typeof chart.yScale().base === \"function\"; // Only log scale has a method \"base()\"\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain && sizeDomain ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n        d3.merge(data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              size: getSize(d, i)\n            };\n          });\n        }));\n        x.domain(xDomain || d3.extent(seriesData.map(function (d) {\n          return d.x;\n        }).concat(forceX)));\n        if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n        else x.range(xRange || [0, availableWidth]);\n\n        if (logScale) {\n          var min = d3.min(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;\n          }));\n          y.clamp(true).domain(yDomain || d3.extent(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;else return min * 0.1;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        } else {\n          y.domain(yDomain || d3.extent(seriesData.map(function (d) {\n            return d.y;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        }\n\n        z.domain(sizeDomain || d3.extent(seriesData.map(function (d) {\n          return d.size;\n        }).concat(forceSize))).range(sizeRange || _sizeRange_def); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n\n        if (isNaN(x.domain()[0])) {\n          x.domain([-1, 1]);\n        }\n\n        if (isNaN(y.domain()[0])) {\n          y.domain([-1, 1]);\n        }\n\n        x0 = x0 || x;\n        y0 = y0 || y;\n        z0 = z0 || z;\n        var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n        width0 = width0 || width;\n        height0 = height0 || height;\n        var sizeDiff = width0 !== width || height0 !== height; // Domain Diffs\n\n        xDom = xDom || [];\n        var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n        xDom = x.domain();\n        yDom = yDom || [];\n        domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n        yDom = y.domain(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.classed('nv-single-point', singlePoint);\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-point-paths');\n        wrapEnter.append('g').attr('class', 'nv-point-clips');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect').attr('transform', 'translate( -10, -10)');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth + 20).attr('height', availableHeight > 0 ? availableHeight + 20 : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n        function updateInteractiveLayer() {\n          // Always clear needs-update flag regardless of whether or not\n          // we will actually do anything (avoids needless invocations).\n          needsUpdate = false;\n          if (!interactive) return false; // inject series and point index for reference into voronoi\n\n          if (useVoronoi === true) {\n            // nuke all voronoi paths on reload and recreate them\n            wrap.select('.nv-point-paths').selectAll('path').remove();\n            var vertices = d3.merge(data.map(function (group, groupIndex) {\n              return group.values.map(function (point, pointIndex) {\n                // *Adding noise to make duplicates very unlikely\n                // *Injecting series and point index for reference\n                // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                var pX = getX(point, pointIndex);\n                var pY = getY(point, pointIndex);\n                return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4, nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4, groupIndex, pointIndex, point];\n              }).filter(function (pointArray, pointIndex) {\n                return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n              });\n            }));\n            if (vertices.length == 0) return false; // No active points, we're done\n\n            if (vertices.length < 3) {\n              // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n              vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n              vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n            } // keep voronoi sections from going more than 10 outside of graph\n            // to avoid overlap with other things like legend etc\n\n\n            var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n\n            var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n\n            vertices = vertices.sort(function (a, b) {\n              return a[0] - b[0] || a[1] - b[1];\n            });\n\n            for (var i = 0; i < vertices.length - 1;) {\n              if (Math.abs(vertices[i][0] - vertices[i + 1][0]) < epsilon && Math.abs(vertices[i][1] - vertices[i + 1][1]) < epsilon) {\n                vertices.splice(i + 1, 1);\n              } else {\n                i++;\n              }\n            }\n\n            var voronoi = d3.geom.voronoi(vertices).map(function (d, i) {\n              return {\n                'data': bounds.clip(d),\n                'series': vertices[i][2],\n                'point': vertices[i][3]\n              };\n            });\n            var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n            var vPointPaths = pointPaths.enter().append(\"svg:path\").attr(\"d\", function (d) {\n              if (!d || !d.data || d.data.length === 0) return 'M 0 0';else return \"M\" + d.data.join(\",\") + \"Z\";\n            }).attr(\"id\", function (d, i) {\n              return \"nv-path-\" + i;\n            }).attr(\"clip-path\", function (d, i) {\n              return \"url(#nv-clip-\" + id + \"-\" + i + \")\";\n            }); // good for debugging point hover issues\n\n            if (showVoronoi) {\n              vPointPaths.style(\"fill\", d3.rgb(230, 230, 230)).style('fill-opacity', 0.4).style('stroke-opacity', 1).style(\"stroke\", d3.rgb(200, 200, 200));\n            }\n\n            if (clipVoronoi) {\n              // voronoi sections are already set to clip,\n              // just create the circles with the IDs they expect\n              wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\n              var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n              var vPointClips = pointClips.enter().append(\"svg:clipPath\").attr(\"id\", function (d, i) {\n                return \"nv-clip-\" + id + \"-\" + i;\n              }).append(\"svg:circle\").attr('cx', function (d) {\n                return d[0];\n              }).attr('cy', function (d) {\n                return d[1];\n              }).attr('r', clipRadius);\n            }\n\n            var mouseEventCallback = function mouseEventCallback(el, d, mDispatch) {\n              if (needsUpdate) return 0;\n              var series = data[d.series];\n              if (series === undefined) return;\n              var point = series.values[d.point];\n              point['color'] = color(series, d.series); // standardize attributes for tooltip.\n\n              point['x'] = getX(point);\n              point['y'] = getY(point); // can't just get box of event node since it's actually a voronoi polygon\n\n              var box = container.node().getBoundingClientRect();\n              var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n              var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n              var pos = {\n                left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n              };\n              mDispatch({\n                point: point,\n                series: series,\n                pos: pos,\n                relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: d.point,\n                event: d3.event,\n                element: el\n              });\n            };\n\n            pointPaths.on('click', function (d) {\n              mouseEventCallback(this, d, dispatch.elementClick);\n            }).on('dblclick', function (d) {\n              mouseEventCallback(this, d, dispatch.elementDblClick);\n            }).on('mouseover', function (d) {\n              mouseEventCallback(this, d, dispatch.elementMouseover);\n            }).on('mouseout', function (d, i) {\n              mouseEventCallback(this, d, dispatch.elementMouseout);\n            });\n          } else {\n            // add event handlers to points instead voronoi paths\n            wrap.select('.nv-groups').selectAll('.nv-group').selectAll('.nv-point') //.data(dataWithPoints)\n            //.style('pointer-events', 'auto') // recativate events, disabled by css\n            .on('click', function (d, i) {\n              //nv.log('test', d, i);\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              var element = this;\n              dispatch.elementClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                event: d3.event,\n                element: element\n              });\n            }).on('dblclick', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementDblClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i\n              });\n            }).on('mouseover', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseover({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            }).on('mouseout', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseout({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            });\n          }\n        }\n\n        needsUpdate = true;\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('nv-noninteractive', !interactive).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'scatter: groups').style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.pointBorderColor || pointBorderColor || color(d, i);\n        }).style('stroke-opacity', 1).style('fill-opacity', .5); // create the points, maintaining their IDs from the original data set\n\n        var points = groups.selectAll('path.nv-point').data(function (d) {\n          return d.values.map(function (point, pointIndex) {\n            return [point, pointIndex];\n          }).filter(function (pointArray, pointIndex) {\n            return pointActive(pointArray[0], pointIndex);\n          });\n        });\n        points.enter().append('path').attr('class', function (d) {\n          return 'nv-point nv-point-' + d[1];\n        }).style('fill', function (d) {\n          return d.color;\n        }).style('stroke', function (d) {\n          return d.color;\n        }).attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n        }).attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        }));\n        points.exit().each(delCache).remove();\n        groups.exit().selectAll('path.nv-point').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }).remove(); //============================================================\n        // Point Update Optimisation Notes\n        //------------------------------------------------------------\n        // The following update selections are filtered with getDiffs\n        // (defined at the top of this file) this brings a performance\n        // benefit for charts with large data sets that accumulate a\n        // subset of changes or additions over time.\n        //\n        // Uneccesary and expensive DOM calls are avoided by culling\n        // unchanged points from the selection in exchange for the\n        // cheaper overhead of caching and diffing each point first.\n        //\n        // Due to the way D3 and NVD3 work, other global changes need\n        // to be considered in addition to local point properties.\n        // This is a potential source of bugs (if any of the global\n        // changes that possibly affect points are missed).\n        // Update Point Positions [x, y]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'x', getX, 'y', getY) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }); // Update Point Appearance [shape, size]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'shape', getShape, 'size', getSize) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        })); // add label a label to scatter chart\n\n        if (showLabels) {\n          var titles = groups.selectAll('.nv-label').data(function (d) {\n            return d.values.map(function (point, pointIndex) {\n              return [point, pointIndex];\n            }).filter(function (pointArray, pointIndex) {\n              return pointActive(pointArray[0], pointIndex);\n            });\n          });\n          titles.enter().append('text').style('fill', function (d, i) {\n            return d.color;\n          }).style('stroke-opacity', 0).style('fill-opacity', 1).attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n          }).text(function (d, i) {\n            return d[0].label;\n          });\n          titles.exit().remove();\n          groups.exit().selectAll('path.nv-label').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          }).remove();\n          titles.each(function (d) {\n            d3.select(this).classed('nv-label', true).classed('nv-label-' + d[1], false).classed('hover', false);\n          });\n          titles.watchTransition(renderWatch, 'scatter labels').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          });\n        } // Delay updating the invisible interactive layer for smoother animation\n\n\n        if (interactiveUpdateDelay) {\n          clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\n          timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay);\n        } else {\n          updateInteractiveLayer();\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy();\n        z0 = z.copy();\n        width0 = width;\n        height0 = height;\n      });\n      renderWatch.renderEnd('scatter immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart); // utility function calls provided by this chart\n\n    chart._calls = new function () {\n      this.clearHighlights = function () {\n        nv.dom.write(function () {\n          container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n        });\n        return null;\n      };\n\n      this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n        nv.dom.write(function () {\n          container.select('.nv-groups').selectAll(\".nv-series-\" + seriesIndex).selectAll(\".nv-point-\" + pointIndex).classed(\"hover\", isHoverOver);\n        });\n      };\n    }(); // trigger calls from events too\n\n    dispatch.on('elementMouseover.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, true);\n    });\n    dispatch.on('elementMouseout.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, false);\n    });\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      pointScale: {\n        get: function get() {\n          return z;\n        },\n        set: function set(_) {\n          z = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      pointDomain: {\n        get: function get() {\n          return sizeDomain;\n        },\n        set: function set(_) {\n          sizeDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      pointRange: {\n        get: function get() {\n          return sizeRange;\n        },\n        set: function set(_) {\n          sizeRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      forcePoint: {\n        get: function get() {\n          return forceSize;\n        },\n        set: function set(_) {\n          forceSize = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      pointActive: {\n        get: function get() {\n          return pointActive;\n        },\n        set: function set(_) {\n          pointActive = _;\n        }\n      },\n      padDataOuter: {\n        get: function get() {\n          return padDataOuter;\n        },\n        set: function set(_) {\n          padDataOuter = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      clipVoronoi: {\n        get: function get() {\n          return clipVoronoi;\n        },\n        set: function set(_) {\n          clipVoronoi = _;\n        }\n      },\n      clipRadius: {\n        get: function get() {\n          return clipRadius;\n        },\n        set: function set(_) {\n          clipRadius = _;\n        }\n      },\n      showVoronoi: {\n        get: function get() {\n          return showVoronoi;\n        },\n        set: function set(_) {\n          showVoronoi = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactiveUpdateDelay: {\n        get: function get() {\n          return interactiveUpdateDelay;\n        },\n        set: function set(_) {\n          interactiveUpdateDelay = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      pointBorderColor: {\n        get: function get() {\n          return pointBorderColor;\n        },\n        set: function set(_) {\n          pointBorderColor = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      pointSize: {\n        get: function get() {\n          return getSize;\n        },\n        set: function set(_) {\n          getSize = d3.functor(_);\n        }\n      },\n      pointShape: {\n        get: function get() {\n          return getShape;\n        },\n        set: function set(_) {\n          getShape = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n\n          if (useVoronoi === false) {\n            clipVoronoi = false;\n          }\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatterChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        distX = nv.models.distribution(),\n        distY = nv.models.distribution(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 75\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        container = null,\n        color = nv.utils.defaultColor(),\n        x = scatter.xScale(),\n        y = scatter.yScale(),\n        showDistX = false,\n        showDistY = false,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        noData = null,\n        duration = 250,\n        showLabels = false;\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickPadding(10);\n    distX.axis('x');\n    distY.axis('y');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      if (showDistX) renderWatch.models(distX);\n      if (showDistY) renderWatch.models(distY);\n      selection.each(function (data) {\n        var that = this;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          renderWatch.renderEnd('scatter immediate');\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = scatter.xScale();\n        y = scatter.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g'); // background for pointer events\n\n        gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n        gEnter.append('g').attr('class', 'nv-distWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Legend\n\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = availableWidth;\n          legend.width(legendWidth);\n          wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0' + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          d.color = d.color || color(d, i);\n          return d.color;\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        })).showLabels(showLabels);\n        wrap.select('.nv-scatterWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })).call(scatter);\n        wrap.select('.nv-regressionLinesWrap').attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n        var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines').data(function (d) {\n          return d;\n        });\n        regWrap.enter().append('g').attr('class', 'nv-regLines');\n        var regLine = regWrap.selectAll('.nv-regLine').data(function (d) {\n          return [d];\n        });\n        regLine.enter().append('line').attr('class', 'nv-regLine').style('stroke-opacity', 0); // don't add lines unless we have slope and intercept to use\n\n        regLine.filter(function (d) {\n          return d.intercept && d.slope;\n        }).watchTransition(renderWatch, 'scatterPlusLineChart: regline').attr('x1', x.range()[0]).attr('x2', x.range()[1]).attr('y1', function (d, i) {\n          return y(x.domain()[0] * d.slope + d.intercept);\n        }).attr('y2', function (d, i) {\n          return y(x.domain()[1] * d.slope + d.intercept);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j);\n        }).style('stroke-opacity', function (d, i) {\n          return d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined' ? 0 : 1;\n        }); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Setup Distribution\n\n\n        if (showDistX) {\n          distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionX');\n          g.select('.nv-distributionX').attr('transform', 'translate(0,' + y.range()[0] + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distX);\n        }\n\n        if (showDistY) {\n          distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionY');\n          g.select('.nv-distributionY').attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size()) + ',0)').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distY);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\n        scatter.dispatch.on('elementMouseout.tooltip', function (evt) {\n          tooltip.hidden(true);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', 0);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', distY.size());\n        });\n        scatter.dispatch.on('elementMouseover.tooltip', function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.relativePos[1] - availableHeight);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.relativePos[0] + distX.size());\n          tooltip.data(evt).hidden(false);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('scatter with line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      container: {\n        get: function get() {\n          return container;\n        },\n        set: function set(_) {\n          container = _;\n        }\n      },\n      showDistX: {\n        get: function get() {\n          return showDistX;\n        },\n        set: function set(_) {\n          showDistX = _;\n        }\n      },\n      showDistY: {\n        get: function get() {\n          return showDistY;\n        },\n        set: function set(_) {\n          showDistY = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          distX.color(color);\n          distY.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparkline = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        animate = true,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.getColor(['#000']),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        showMinMaxPoints = true,\n        showCurrentPoint = true,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var paths = wrap.selectAll('path').data(function (d) {\n          return [d];\n        });\n        paths.enter().append('path');\n        paths.exit().remove();\n        paths.style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).attr('d', d3.svg.line().x(function (d, i) {\n          return x(getX(d, i));\n        }).y(function (d, i) {\n          return y(getY(d, i));\n        })); // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\n        var points = wrap.selectAll('circle.nv-point').data(function (data) {\n          var yValues = data.map(function (d, i) {\n            return getY(d, i);\n          });\n\n          function pointIndex(index) {\n            if (index != -1) {\n              var result = data[index];\n              result.pointIndex = index;\n              return result;\n            } else {\n              return null;\n            }\n          }\n\n          var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n              minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n              currentPoint = pointIndex(yValues.length - 1);\n          return [showMinMaxPoints ? minPoint : null, showMinMaxPoints ? maxPoint : null, showCurrentPoint ? currentPoint : null].filter(function (d) {\n            return d != null;\n          });\n        });\n        points.enter().append('circle');\n        points.exit().remove();\n        points.attr('cx', function (d, i) {\n          return x(getX(d, d.pointIndex));\n        }).attr('cy', function (d, i) {\n          return y(getY(d, d.pointIndex));\n        }).attr('r', 2).attr('class', function (d, i) {\n          return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' : getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue';\n        });\n      });\n      renderWatch.renderEnd('sparkline immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      animate: {\n        get: function get() {\n          return animate;\n        },\n        set: function set(_) {\n          animate = _;\n        }\n      },\n      showMinMaxPoints: {\n        get: function get() {\n          return showMinMaxPoints;\n        },\n        set: function set(_) {\n          showMinMaxPoints = _;\n        }\n      },\n      showCurrentPoint: {\n        get: function get() {\n          return showCurrentPoint;\n        },\n        set: function set(_) {\n          showCurrentPoint = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparklinePlus = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n    var margin = {\n      top: 15,\n      right: 100,\n      bottom: 10,\n      left: 50\n    },\n        width = null,\n        height = null,\n        x,\n        y,\n        index = [],\n        paused = false,\n        xTickFormat = d3.format(',r'),\n        yTickFormat = d3.format(',.2f'),\n        showLastValue = true,\n        alignValue = true,\n        rightAlignValue = false,\n        noData = null,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sparkline);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); // Setup Scales\n\n        x = sparkline.xScale();\n        y = sparkline.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-sparklineWrap');\n        gEnter.append('g').attr('class', 'nv-valueWrap');\n        gEnter.append('g').attr('class', 'nv-hoverArea');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        var sparklineWrap = g.select('.nv-sparklineWrap');\n        sparkline.width(availableWidth).height(availableHeight);\n        sparklineWrap.call(sparkline);\n\n        if (showLastValue) {\n          var valueWrap = g.select('.nv-valueWrap');\n          var value = valueWrap.selectAll('.nv-currentValue').data([currentValue]);\n          value.enter().append('text').attr('class', 'nv-currentValue').attr('dx', rightAlignValue ? -8 : 8).attr('dy', '.9em').style('text-anchor', rightAlignValue ? 'end' : 'start');\n          value.attr('x', availableWidth + (rightAlignValue ? margin.right : 0)).attr('y', alignValue ? function (d) {\n            return y(d);\n          } : 0).style('fill', sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue));\n        }\n\n        gEnter.select('.nv-hoverArea').append('rect').on('mousemove', sparklineHover).on('click', function () {\n          paused = !paused;\n        }).on('mouseout', function () {\n          index = [];\n          updateValueLine();\n        });\n        g.select('.nv-hoverArea rect').attr('transform', function (d) {\n          return 'translate(' + -margin.left + ',' + -margin.top + ')';\n        }).attr('width', availableWidth + margin.left + margin.right).attr('height', availableHeight + margin.top); //index is currently global (within the chart), may or may not keep it that way\n\n        function updateValueLine() {\n          if (paused) return;\n          var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n          var hoverEnter = hoverValue.enter().append('g').attr('class', 'nv-hoverValue').style('stroke-opacity', 0).style('fill-opacity', 0);\n          hoverValue.exit().transition().duration(250).style('stroke-opacity', 0).style('fill-opacity', 0).remove();\n          hoverValue.attr('transform', function (d) {\n            return 'translate(' + x(sparkline.x()(data[d], d)) + ',0)';\n          }).transition().duration(250).style('stroke-opacity', 1).style('fill-opacity', 1);\n          if (!index.length) return;\n          hoverEnter.append('line').attr('x1', 0).attr('y1', -margin.top).attr('x2', 0).attr('y2', availableHeight);\n          hoverEnter.append('text').attr('class', 'nv-xValue').attr('x', -6).attr('y', -margin.top).attr('text-anchor', 'end').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-xValue').text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n          hoverEnter.append('text').attr('class', 'nv-yValue').attr('x', 6).attr('y', -margin.top).attr('text-anchor', 'start').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-yValue').text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n        }\n\n        function sparklineHover() {\n          if (paused) return;\n          var pos = d3.mouse(this)[0] - margin.left;\n\n          function getClosestIndex(data, x) {\n            var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n            var closestIndex = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                distance = Math.abs(sparkline.x()(data[i], i) - x);\n                closestIndex = i;\n              }\n            }\n\n            return closestIndex;\n          }\n\n          index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n          updateValueLine();\n        }\n      });\n      renderWatch.renderEnd('sparklinePlus immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xTickFormat;\n        },\n        set: function set(_) {\n          xTickFormat = _;\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yTickFormat;\n        },\n        set: function set(_) {\n          yTickFormat = _;\n        }\n      },\n      showLastValue: {\n        get: function get() {\n          return showLastValue;\n        },\n        set: function set(_) {\n          showLastValue = _;\n        }\n      },\n      alignValue: {\n        get: function get() {\n          return alignValue;\n        },\n        set: function set(_) {\n          alignValue = _;\n        }\n      },\n      rightAlignValue: {\n        get: function get() {\n          return rightAlignValue;\n        },\n        set: function set(_) {\n          rightAlignValue = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedArea = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        color = nv.utils.defaultColor() // a function that computes the color\n    ,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        style = 'stack',\n        offset = 'zero',\n        order = 'default',\n        interpolate = 'linear' // controls the line interpolation\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        scatter = nv.models.scatter(),\n        duration = 250,\n        dispatch = d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout', 'renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout');\n\n    scatter.pointSize(2.2) // default size\n    .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        var dataRaw = data; // Injecting point index into each point because d3.layout.stack().out does not give index\n\n        data.forEach(function (aseries, i) {\n          aseries.seriesIndex = i;\n          aseries.values = aseries.values.map(function (d, j) {\n            d.index = j;\n            d.seriesIndex = i;\n            return d;\n          });\n        });\n        var dataFiltered = data.filter(function (series) {\n          return !series.disabled;\n        });\n        data = d3.layout.stack().order(order).offset(offset).values(function (d) {\n          return d.values;\n        }) //TODO: make values customizeable in EVERY model in this fashion\n        .x(getX).y(getY).out(function (d, y0, y) {\n          d.display = {\n            y: y,\n            y0: y0\n          };\n        })(dataFiltered); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-areaWrap');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // If the user has not specified forceY, make sure 0 is included in the domain\n        // Otherwise, use user-specified values for forceY\n\n        if (scatter.forceY().length == 0) {\n          scatter.forceY().push(0);\n        }\n\n        scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) {\n          if (d.display !== undefined) {\n            return d.display.y + d.display.y0;\n          }\n        }).color(data.map(function (d, i) {\n          d.color = d.color || color(d, d.seriesIndex);\n          return d.color;\n        }));\n        var scatterWrap = g.select('.nv-scatterWrap').datum(data);\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var area = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y + d.display.y0);\n        }).interpolate(interpolate);\n        var zeroArea = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y0);\n        });\n        var path = g.select('.nv-areaWrap').selectAll('path.nv-area').data(function (d) {\n          return d;\n        });\n        path.enter().append('path').attr('class', function (d, i) {\n          return 'nv-area nv-area-' + i;\n        }).attr('d', function (d, i) {\n          return zeroArea(d.values, d.seriesIndex);\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.areaMouseover({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaMouseout({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('click', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaClick({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        });\n        path.exit().remove();\n        path.style('fill', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        });\n        path.watchTransition(renderWatch, 'stackedArea path').attr('d', function (d, i) {\n          return area(d.values, i);\n        }); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        scatter.dispatch.on('elementMouseover.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n        });\n        scatter.dispatch.on('elementMouseout.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n        }); //Special offset functions\n\n        chart.d3_stackedOffset_stackPercent = function (stackData) {\n          var n = stackData.length,\n              //How many series\n          m = stackData[0].length,\n              //how many points per series\n          i,\n              j,\n              o,\n              y0 = [];\n\n          for (j = 0; j < m; ++j) {\n            //Looping through all points\n            for (i = 0, o = 0; i < dataRaw.length; i++) {\n              //looping through all series\n              o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n            }\n\n            if (o) for (i = 0; i < n; i++) {\n              //(total y value of all series at point in time i) != 0\n              stackData[i][j][1] /= o;\n            } else {\n              //(total y value of all series at point in time i) == 0\n              for (i = 0; i < n; i++) {\n                stackData[i][j][1] = 0;\n              }\n            }\n          }\n\n          for (j = 0; j < m; ++j) {\n            y0[j] = 0;\n          }\n\n          return y0;\n        };\n      });\n      renderWatch.renderEnd('stackedArea immediate');\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n\n    chart.interpolate = function (_) {\n      if (!arguments.length) return interpolate;\n      interpolate = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      scatter.duration(duration);\n      return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      offset: {\n        get: function get() {\n          return offset;\n        },\n        set: function set(_) {\n          offset = _;\n        }\n      },\n      order: {\n        get: function get() {\n          return order;\n        },\n        set: function set(_) {\n          order = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      style: {\n        get: function get() {\n          return style;\n        },\n        set: function set(_) {\n          style = _;\n\n          switch (style) {\n            case 'stack':\n              chart.offset('zero');\n              chart.order('default');\n              break;\n\n            case 'stream':\n              chart.offset('wiggle');\n              chart.order('inside-out');\n              break;\n\n            case 'stream-center':\n              chart.offset('silhouette');\n              chart.order('inside-out');\n              break;\n\n            case 'expand':\n              chart.offset('expand');\n              chart.order('default');\n              break;\n\n            case 'stack_percent':\n              chart.offset(chart.d3_stackedOffset_stackPercent);\n              chart.order('default');\n              break;\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.stackedArea());\n    var margin = {\n      top: 10,\n      right: 25,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        focusEnable = false,\n        useInteractiveGuideline = false,\n        showTotalInTooltip = true,\n        totalLabel = 'TOTAL',\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = 250,\n        controlOptions = ['Stacked', 'Stream', 'Expanded'],\n        controlLabels = {},\n        duration = 250;\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    });\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          style: stacked.style()\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.style !== undefined) style = state.style;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(stacked);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = stacked.xScale();\n        y = stacked.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-stackedWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive'); // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = showControls && legendPosition === 'top' ? availableWidth - controlWidth : availableWidth;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            // constant from axis.js, plus some margin for better layout\n            var xAxisHeight = (showXAxis ? 12 : 0) + 10;\n            margin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            var legendTop = availableHeight + xAxisHeight;\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + legendTop + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && margin.top != legend.height()) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.stacked || 'Stacked',\n            metaKey: 'Stacked',\n            disabled: stacked.style() != 'stack',\n            style: 'stack'\n          }, {\n            key: controlLabels.stream || 'Stream',\n            metaKey: 'Stream',\n            disabled: stacked.style() != 'stream',\n            style: 'stream'\n          }, {\n            key: controlLabels.expanded || 'Expanded',\n            metaKey: 'Expanded',\n            disabled: stacked.style() != 'expand',\n            style: 'expand'\n          }, {\n            key: controlLabels.stack_percent || 'Stack %',\n            metaKey: 'Stack_Percent',\n            disabled: stacked.style() != 'stack_percent',\n            style: 'stack_percent'\n          }];\n          controlWidth = controlOptions.length / 3 * 260;\n          controlsData = controlsData.filter(function (d) {\n            return controlOptions.indexOf(d.metaKey) !== -1;\n          });\n          controls.width(controlWidth).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).call(controls);\n          var requiredTop = Math.max(controls.height(), showLegend && legendPosition === 'top' ? legend.height() : 0);\n\n          if (margin.top != requiredTop) {\n            margin.top = requiredTop;\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n          }\n\n          g.select('.nv-controlsWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        stacked.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          var ticks;\n\n          if (stacked.offset() === 'wiggle') {\n            ticks = 0;\n          } else {\n            ticks = nv.utils.calcTicksY(availableHeight / 36, data);\n          }\n\n          yAxis.scale(y)._ticks(ticks).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n              var currentFormat = yAxis.tickFormat();\n              if (!oldYTickFormat || currentFormat !== percentFormatter) oldYTickFormat = currentFormat; //Forces the yAxis to use percentage in 'expand' mode.\n\n              yAxis.tickFormat(percentFormatter);\n            } else {\n              if (oldYTickFormat) {\n                yAxis.tickFormat(oldYTickFormat);\n                oldYTickFormat = null;\n              }\n            }\n\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(0).call(yAxis);\n          }\n        } //============================================================\n        // Update Focus\n        //============================================================\n\n\n        if (!focusEnable) {\n          stackedWrap.transition().call(stacked);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        stacked.dispatch.on('areaClick.toggle', function (e) {\n          if (data.filter(function (d) {\n            return !d.disabled;\n          }).length === 1) data.forEach(function (d) {\n            d.disabled = false;\n          });else data.forEach(function (d, i) {\n            d.disabled = i != e.seriesIndex;\n          });\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n          stacked.style(d.style);\n          state.style = stacked.style();\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          stacked.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [],\n              valueSum = 0,\n              allNullValues = true,\n              atleastOnePoint = false;\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue != null && pointYValue > 0) {\n              stacked.highlightPoint(i, pointIndex, true);\n              atleastOnePoint = true;\n            } // Draw at least one point if all values are zero.\n\n\n            if (i === data.length - 1 && !atleastOnePoint) {\n              stacked.highlightPoint(i, pointIndex, true);\n            }\n\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\n            var tooltipValue = stacked.style() == 'expand' ? point.display.y : chart.y()(point, pointIndex);\n            allData.push({\n              key: series.key,\n              value: tooltipValue,\n              color: color(series, series.seriesIndex),\n              point: point\n            });\n\n            if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n              valueSum += tooltipValue;\n              allNullValues = false;\n            }\n\n            ;\n          });\n          allData.reverse(); //Highlight the tooltip entry based on which stack the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var yDistMax = Infinity,\n                indexToHighlight = null;\n            allData.forEach(function (series, i) {\n              //To handle situation where the stacked area chart is negative, we need to use absolute values\n              //when checking if the mouse Y value is within the stack area.\n              yValue = Math.abs(yValue);\n              var stackedY0 = Math.abs(series.point.display.y0);\n              var stackedY = Math.abs(series.point.display.y);\n\n              if (yValue >= stackedY0 && yValue <= stackedY + stackedY0) {\n                indexToHighlight = i;\n                return;\n              }\n            });\n            if (indexToHighlight != null) allData[indexToHighlight].highlight = true;\n          } //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\n\n          if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n            allData.push({\n              key: totalLabel,\n              value: valueSum,\n              total: true\n            });\n          }\n\n          var xValue = chart.x()(singlePoint, pointIndex);\n          var valueFormatter = interactiveLayer.tooltip.valueFormatter(); // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\n          if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n            if (!oldValueFormatter) {\n              oldValueFormatter = valueFormatter;\n            } //Forces the tooltip to use percentage in 'expand' mode.\n\n\n            valueFormatter = d3.format(\".1%\");\n          } else {\n            if (oldValueFormatter) {\n              valueFormatter = oldValueFormatter;\n              oldValueFormatter = null;\n            }\n          }\n\n          interactiveLayer.tooltip.valueFormatter(valueFormatter).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          stacked.clearHighlights();\n        });\n        /* Update `main' graph on brush update. */\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.style !== 'undefined') {\n            stacked.style(e.style);\n            style = e.style;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return stacked.x()(d, i) >= extent[0] && stacked.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          stackedWrap.transition().duration(duration).call(stacked); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('stacked Area chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    stacked.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.point['x'] = stacked.x()(evt.point);\n      evt.point['y'] = stacked.y()(evt.point);\n      tooltip.data(evt).hidden(false);\n    });\n    stacked.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      controlOptions: {\n        get: function get() {\n          return controlOptions;\n        },\n        set: function set(_) {\n          controlOptions = _;\n        }\n      },\n      showTotalInTooltip: {\n        get: function get() {\n          return showTotalInTooltip;\n        },\n        set: function set(_) {\n          showTotalInTooltip = _;\n        }\n      },\n      totalLabel: {\n        get: function get() {\n          return totalLabel;\n        },\n        set: function set(_) {\n          totalLabel = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          focus.margin.top = _.top !== undefined ? _.top : focus.margin.top;\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          stacked.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          stacked.color(color);\n          focus.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return stacked.x();\n        },\n        set: function set(_) {\n          stacked.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return stacked.y();\n        },\n        set: function set(_) {\n          stacked.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = !!_;\n          chart.interactive(!_);\n          chart.useVoronoi(!_);\n          stacked.scatter.interactive(!_);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaWithFocusChart = function () {\n    return nv.models.stackedAreaChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  }; // based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\n\n  nv.models.sunburst = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 600,\n        height = 600,\n        mode = \"count\",\n        modes = {\n      count: function count(d) {\n        return 1;\n      },\n      value: function value(d) {\n        return d.value || d.size;\n      },\n      size: function size(d) {\n        return d.value || d.size;\n      }\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        showLabels = false,\n        labelFormat = function labelFormat(d) {\n      if (mode === 'count') {\n        return d.name + ' #' + d.value;\n      } else {\n        return d.name + ' ' + (d.value || d.size);\n      }\n    },\n        labelThreshold = 0.02,\n        sort = function sort(d1, d2) {\n      return d1.name > d2.name;\n    },\n        key = function key(d, i) {\n      if (d.parent !== undefined) {\n        return d.name + '-' + d.parent.name + '-' + i;\n      } else {\n        return d.name;\n      }\n    },\n        groupColorByParent = true,\n        duration = 500,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd'); //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n    var partition = d3.layout.partition().sort(sort);\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n    var arc = d3.svg.arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    }).innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    }).outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n\n    function rotationToAvoidUpsideDown(d) {\n      var centerAngle = computeCenterAngle(d);\n\n      if (centerAngle > 90) {\n        return 180;\n      } else {\n        return 0;\n      }\n    }\n\n    function computeCenterAngle(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var centerAngle = (startAngle + endAngle) / 2 * (180 / Math.PI) - 90;\n      return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var size = endAngle - startAngle;\n      return size > labelThreshold;\n    } // When zooming: interpolate the scales.\n\n\n    function arcTweenZoom(e, i) {\n      var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n          yd = d3.interpolate(y.domain(), [node.y, 1]),\n          yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n      if (i === 0) {\n        return function () {\n          return arc(e);\n        };\n      } else {\n        return function (t) {\n          x.domain(xd(t));\n          y.domain(yd(t)).range(yr(t));\n          return arc(e);\n        };\n      }\n\n      ;\n    }\n\n    function arcTweenUpdate(d) {\n      var ipo = d3.interpolate({\n        x: d.x0,\n        dx: d.dx0,\n        y: d.y0,\n        dy: d.dy0\n      }, d);\n      return function (t) {\n        var b = ipo(t);\n        d.x0 = b.x;\n        d.dx0 = b.dx;\n        d.y0 = b.y;\n        d.dy0 = b.dy;\n        return arc(b);\n      };\n    }\n\n    function updatePrevPosition(node) {\n      var k = key(node);\n      if (!prevPositions[k]) prevPositions[k] = {};\n      var pP = prevPositions[k];\n      pP.dx = node.dx;\n      pP.x = node.x;\n      pP.dy = node.dy;\n      pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n      nodes.forEach(function (n) {\n        var k = key(n);\n        var pP = prevPositions[k]; //console.log(k,n,pP);\n\n        if (pP) {\n          n.dx0 = pP.dx;\n          n.x0 = pP.x;\n          n.dy0 = pP.dy;\n          n.y0 = pP.y;\n        } else {\n          n.dx0 = n.dx;\n          n.x0 = n.x;\n          n.dy0 = n.dy;\n          n.y0 = n.y;\n        }\n\n        updatePrevPosition(n);\n      });\n    }\n\n    function zoomClick(d) {\n      var labels = container.selectAll('text');\n      var path = container.selectAll('path'); // fade out all text elements\n\n      labels.transition().attr(\"opacity\", 0); // to allow reference to the new center node\n\n      node = d;\n      path.transition().duration(duration).attrTween(\"d\", arcTweenZoom).each('end', function (e) {\n        // partially taken from here: http://bl.ocks.org/metmajer/5480307\n        // check if the animated element's data e lies within the visible angle span given in d\n        if (e.x >= d.x && e.x < d.x + d.dx) {\n          if (e.depth >= d.depth) {\n            // get a selection of the associated text element\n            var parentNode = d3.select(this.parentNode);\n            var arcText = parentNode.select('text'); // fade in the text element and recalculate positions\n\n            arcText.transition().duration(duration).text(function (e) {\n              return labelFormat(e);\n            }).attr(\"opacity\", function (d) {\n              if (labelThresholdMatched(d)) {\n                return 1;\n              } else {\n                return 0;\n              }\n            }).attr(\"transform\", function () {\n              var width = this.getBBox().width;\n              if (e.depth === 0) return \"translate(\" + width / 2 * -1 + \",0)\";else if (e.depth === d.depth) {\n                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n              } else {\n                var centerAngle = computeCenterAngle(e);\n                var rotation = rotationToAvoidUpsideDown(e);\n\n                if (rotation === 0) {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + 5) + ',0)';\n                } else {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                }\n              }\n            });\n          }\n        }\n      });\n    } //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        radius = Math.min(availableWidth, availableHeight) / 2;\n        y.range([0, radius]); // Setup containers and skeleton of chart\n\n        var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\n        if (!wrap[0][0]) {\n          wrap = container.append('g').attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id).attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        } else {\n          wrap.attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        }\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        partition.value(modes[mode] || modes[\"count\"]); //reverse the drawing order so that the labels of inner\n        //arcs are drawn on top of the outer arcs.\n\n        var nodes = partition.nodes(data[0]).reverse();\n        storeRetrievePrevPositions(nodes);\n        var cG = wrap.selectAll('.arc-container').data(nodes, key); //handle new datapoints\n\n        var cGE = cG.enter().append(\"g\").attr(\"class\", 'arc-container');\n        cGE.append(\"path\").attr(\"d\", arc).style(\"fill\", function (d) {\n          if (d.color) {\n            return d.color;\n          } else if (groupColorByParent) {\n            return color((d.children ? d : d.parent).name);\n          } else {\n            return color(d.name);\n          }\n        }).style(\"stroke\", \"#FFF\").on(\"click\", function (d, i) {\n          zoomClick(d);\n          dispatch.elementClick({\n            data: d,\n            index: i\n          });\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true).style('opacity', 0.8);\n          dispatch.elementMouseover({\n            data: d,\n            color: d3.select(this).style(\"fill\"),\n            percent: computeNodePercentage(d)\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false).style('opacity', 1);\n          dispatch.elementMouseout({\n            data: d\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d\n          });\n        }); ///Iterating via each and selecting based on the this\n        ///makes it work ... a cG.selectAll('path') doesn't.\n        ///Without iteration the data (in the element) didn't update.\n\n        cG.each(function (d) {\n          d3.select(this).select('path').transition().duration(duration).attrTween('d', arcTweenUpdate);\n        });\n\n        if (showLabels) {\n          //remove labels first and add them back\n          cG.selectAll('text').remove(); //this way labels are on top of newly added arcs\n\n          cG.append('text').text(function (e) {\n            return labelFormat(e);\n          }).transition().duration(duration).attr(\"opacity\", function (d) {\n            if (labelThresholdMatched(d)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }).attr(\"transform\", function (d) {\n            var width = this.getBBox().width;\n\n            if (d.depth === 0) {\n              return \"rotate(0)translate(\" + width / 2 * -1 + \",0)\";\n            } else {\n              var centerAngle = computeCenterAngle(d);\n              var rotation = rotationToAvoidUpsideDown(d);\n\n              if (rotation === 0) {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + 5) + ',0)';\n              } else {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n              }\n            }\n          });\n        } //zoom out to the center when the data is updated.\n\n\n        zoomClick(nodes[nodes.length - 1]); //remove unmatched elements ...\n\n        cG.exit().transition().duration(duration).attr('opacity', 0).each('end', function (d) {\n          var k = key(d);\n          prevPositions[k] = undefined;\n        }).remove();\n      });\n      renderWatch.renderEnd('sunburst immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(_) {\n          mode = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      groupColorByParent: {\n        get: function get() {\n          return groupColorByParent;\n        },\n        set: function set(_) {\n          groupColorByParent = !!_;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = !!_;\n        }\n      },\n      labelFormat: {\n        get: function get() {\n          return labelFormat;\n        },\n        set: function set(_) {\n          labelFormat = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      sort: {\n        get: function get() {\n          return sort;\n        },\n        set: function set(_) {\n          sort = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return key;\n        },\n        set: function set(_) {\n          key = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sunburstChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showTooltipPercent = false,\n        id = Math.round(Math.random() * 100000),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d) {\n      return d;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sunburst);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin);\n        var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = container; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        sunburst.width(availableWidth).height(availableHeight).margin(margin);\n        container.call(sunburst);\n      });\n      renderWatch.renderEnd('sunburstChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.series = {\n        key: evt.data.name,\n        value: evt.data.value || evt.data.size,\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    sunburst.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    sunburst.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          sunburst.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          sunburst.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n          sunburst.margin(margin);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.version = \"1.8.6\";\n})();"],"sourceRoot":""}