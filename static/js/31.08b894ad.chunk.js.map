{"version":3,"sources":["Components/MainCard/index.js","Utils/index.js","Pages/ConfirmedDeliveries/ConfirmedDeliveries.js"],"names":["MainCard","state","isOption","_this","props","anotherOption","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","_this2","this","cardClass","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","alignRight","Toggle","id","Menu","as","Item","onClick","prevState","href","DEMO","BLANK_LINK","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","Header","Title","title","concat","Object","_Users_obinnajeze_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","position","top","left","right","width","windowWidth","height","windowHeight","join","style","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","in","Body","children","paginated","_hoc_Aux__WEBPACK_IMPORTED_MODULE_11__","Component","windowSize","__webpack_require__","d","__webpack_exports__","formatNumberAsCurency","parseDeliveryStatus","_config__WEBPACK_IMPORTED_MODULE_0__","num","isNaN","parseFloat","toFixed","toString","replace","status","config","DELIVERY_INITIATED","DELIVERY_ITEM_PICKED","DELIVERY_STARTED","DELIVERY_COMPLETED","ConfirmedDeliveries","_Users_obinnajeze_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_obinnajeze_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_obinnajeze_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","renderTableRows","deliveries","deliveriesPayload","map","singleDelivery","react__WEBPACK_IMPORTED_MODULE_5___default","key","scope","name","amount","moment","created_at","format","receiver_name","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","variant","page","attemptFetchDeliveries","DELIVERY_RECOVERY_INITIATED","_Components_MainCard__WEBPACK_IMPORTED_MODULE_12__","react_loading_overlay__WEBPACK_IMPORTED_MODULE_17___default","active","deliveriesFetching","spinner","striped","responsive","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","float","size","First","Prev","Next","Last","connect","dispatch","data","DeliveryActions","fetchingDeliveriesRequest"],"mappings":"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","file":"static/js/31.08b894ad.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\nimport windowSize from 'react-window-size';\nimport Aux from \"../../hoc/_Aux\";\nimport DEMO from \"../../store/constant\";\n\nclass MainCard extends Component {\n    state = {\n        isOption: this.props.isOption,\n        anotherOption: this.props.anotherOption,\n        fullCard: false,\n        collapseCard: false,\n        loadCard: false,\n        cardRemove: false\n    };\n\n    cardReloadHandler = () => {\n        this.setState({loadCard: true});\n        setInterval(() => {\n            this.setState({loadCard: false});\n        }, 6000);\n    };\n\n    cardRemoveHandler = () => {\n        this.setState({cardRemove: true});\n    };\n\n    render() {\n\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader, paginated;\n        let card = '';\n        let cardClass = [];\n\n        if (this.state.isOption) {\n            cardHeaderRight = (\n                <div className=\"card-header-right\">\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n                            <i className=\"feather icon-more-horizontal\"/>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\n                                <i className='feather icon-refresh-cw'/>\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\n                                <i className='feather icon-trash'/>\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n            );\n        }\n\n        // card without the remove option\n        if (this.state.anotherOption) {\n            cardHeaderRight = (\n                <div className=\"card-header-right\">\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\n                            <i className=\"feather icon-more-horizontal\"/>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\n                            </Dropdown.Item>\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\n                                <i className='feather icon-refresh-cw'/>\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\n                            </Dropdown.Item>\n                            {/* <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\n                                <i className='feather icon-trash'/>\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\n                            </Dropdown.Item> */}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </div>\n            );\n        }\n\n        cardHeader = (\n            <Card.Header>\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\n                {cardHeaderRight}\n            </Card.Header>\n        );\n\n        if (this.state.fullCard) {\n            cardClass = [...cardClass, 'full-card'];\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\n        }\n\n        if (this.state.loadCard) {\n            cardClass = [...cardClass, 'card-load'];\n            loader = (\n                <div className=\"card-loader\">\n                    <i className=\"pct-loader1 anim-rotate\"/>\n                </div>\n            );\n        }\n\n        if (this.state.cardRemove) {\n            cardClass = [...cardClass, 'd-none'];\n        }\n\n        if (this.props.cardClass) {\n            cardClass = [...cardClass, this.props.cardClass];\n        }\n\n        card = (\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\n                {cardHeader}\n                <Collapse in={!this.state.collapseCard}>\n                    <div>\n                        <Card.Body>\n                            {this.props.children}\n                        </Card.Body>\n                    </div>\n                </Collapse>\n                {loader}\n                {paginated}     \n            </Card>\n        );\n\n    \n        return (\n            <Aux>\n                {card}\n            </Aux>\n        );\n    }\n}\n\nexport default windowSize(MainCard);\n","import config from '../config'\nexport function formatNumberAsCurency (num){\n    if (!isNaN(num)){\n        num = parseFloat(num);\n        num = num.toFixed(2);\n    }\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n}\n\nexport function parseDeliveryStatus(status) {\n    switch (status) {\n        case config.DELIVERY_INITIATED:\n            return \"Pending\";\n        case config.DELIVERY_ITEM_PICKED:\n            return \"Picked Up\";\n        case config.DELIVERY_STARTED:\n            return \"In Transit\";\n        case  config.DELIVERY_COMPLETED:\n            return \"Completed\";\n        default:\n            return \"Unknown status\"\n    }\n}","import React, {Component} from 'react';\nimport {Row, Col, Table, Badge, Pagination} from 'react-bootstrap';\n\nimport Aux from \"../../hoc/_Aux\";\nimport Card from \"../../Components/MainCard\";\nimport {connect} from \"react-redux\";\nimport DeliveryActions from \"../../Redux/DeliveryRedux\";\nimport PropTypes from \"prop-types\";\nimport config from '../../config'\nimport moment from \"moment\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport {formatNumberAsCurency, parseDeliveryStatus} from \"../../Utils\";\nimport DEMO from \"../../store/constant\";\n\nclass ConfirmedDeliveries extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            page: 1\n        }\n    }\n    static propTypes = {\n        attemptFetchDeliveries: PropTypes.func.isRequired,\n    }\n\n\n    componentDidMount() {\n        this.props.attemptFetchDeliveries({\n            page: this.state.page,\n            status: config.DELIVERY_RECOVERY_INITIATED\n        })\n    }\n    renderTableRows = () => {\n        const { deliveriesPayload } = this.props.deliveries;\n        return deliveriesPayload.map((singleDelivery) => {\n            return (\n                <tr key={singleDelivery.id}>\n                    <th scope=\"row\">{singleDelivery.id}</th>\n                    <td>{singleDelivery.name}</td>\n                    <td>&#8358; {formatNumberAsCurency(singleDelivery.amount)}</td>\n                    <td>{moment(singleDelivery.created_at).format('llll')}</td>\n                    <td>{singleDelivery.receiver_name}</td>\n                    <td><Badge variant=\"warning\">{parseDeliveryStatus(singleDelivery.status)}</Badge></td>\n                    <td><a href={DEMO.BLANK_LINK}>View</a></td>\n                </tr>\n            );\n        });\n    }\n    render() {\n        const pagStyle = {\n            float: \"right\"\n        };\n        const { deliveries } = this.props;\n        return (\n            <Aux>\n                <Row>\n                    <Col>\n                        <Card title='Confirmed Deliveries' anotherOption>\n                            <LoadingOverlay\n                                active={deliveries.deliveriesFetching}\n                                spinner\n                            >\n                                <Table striped responsive>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Item</th>\n                                        <th>Amount</th>\n                                        <th>Date</th>\n                                        <th>Receiver</th>\n                                        <th>Status</th>\n                                        <th>Action</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.renderTableRows()}\n                                    </tbody>\n                                </Table>\n                            </LoadingOverlay>\n                            <Pagination style={pagStyle} size=\"sm\">\n                                <Pagination.First />\n                                    <Pagination.Prev />\n                                        <Pagination.Item>\n                                            1 of 10 pages\n                                        </Pagination.Item>\n                                    <Pagination.Next />\n                                <Pagination.Last />\n                            </Pagination>\n\n                        </Card>\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        deliveries: state.deliveries\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        attemptFetchDeliveries: (data) => dispatch(DeliveryActions.fetchingDeliveriesRequest(data))\n    }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmedDeliveries)"],"sourceRoot":""}