{"version":3,"sources":["config.js","Redux/DeliveryRedux.js","Components/ScrollToTop/index.js","route.js","Pages/RootPage.js","serviceWorker.js","Services/FixtureApi.js","Services/Api.js","Sagas/LoginSaga.js","Sagas/DeliverySaga.js","Sagas/index.js","Redux/index.js","index.js","Redux/CreateStore.js","Redux/LoginRedux.js","Components/Loader/index.js","hoc/_Aux/index.js","Redux/NavigationRedux.js"],"names":["__webpack_exports__","defaultPath","basename","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","debug","authTokenLocalStorage","baseUrl","DELIVERY_INITIATED","DELIVERY_ITEM_PICKED","DELIVERY_STARTED","DELIVERY_COMPLETED","DELIVERY_RECOVERY_INITIATED","DELIVERY_RECOVERY_COMPLETED","createActions","fetchingDeliveriesRequest","fetchingDeliveriesSuccess","fetchingDeliveriesFailure","fetchingDeliveryRequest","fetchingDeliverySuccess","fetchingDeliveryFailure","Types","Creators","DeliveryTypes","INITIAL_STATE","Immutable","deliveriesData","deliveriesPayload","deliveriesError","deliveriesFetching","deliveryFetching","deliveryError","deliveryPayload","delivery","customer","DeliverySelectors","getData","state","_ref","merge","_ref2","_ref3","_ref4","_ref5","reducer","createReducer","_createReducer","Object","_Users_osinakayah_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","FETCHING_DELIVERIES_REQUEST","FETCHING_DELIVERIES_SUCCESS","FETCHING_DELIVERIES_FAILURE","FETCHING_DELIVERY_REQUEST","FETCHING_DELIVERY_SUCCESS","FETCHING_DELIVERY_FAILURE","ScrollToTop","prevProps","this","props","location","window","scrollTo","children","React","Component","withRouter","route","path","exact","name","component","lazy","Promise","all","__webpack_require__","e","then","bind","AdminLayout","Loadable","loader","loading","Loader","App","menu","routes","map","index","react_default","a","createElement","react_router","key","render","_Aux","Components_ScrollToTop","react","fallback","Boolean","hostname","match","FixtureApi","postLogin","email","password","headers","authorization","ok","data","id","fullname","user_type","created_at","updated_at","error","getFetchingDeliveries","page","status","require","getFetchingDelivery","getFetchingCustomers","getFetchingCustomer","Api","token","arguments","length","undefined","api","apisauce","create","baseURL","config","Authorization","post","get","concat","postLoginSaga","action","response","regenerator_default","wrap","_context","prev","next","call","sent","reactLocalStorage","set","put","LoginActions","loginSuccess","ToastsStore","loginFailure","stop","_marked","getFetchingDeliveriesSaga","getFetchingDeliverySaga","DeliveryActions","DeliverySaga_marked","deliveryData","_context2","console","log","_marked2","root","FixtureAPI","API","takeLatest","LoginTypes","LOGIN_REQUEST","Sagas_marked","app","es","store","rootReducer","rootSaga","middleware","enhancers","sagaMiddleware","createSagaMiddleware","sagaMonitor","push","applyMiddleware","apply","createStore","compose","run","configureSore","combineReducers","nav","login","deliveries","react_router_dom","RootPage","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","loginRequest","payload","fetching","LoginSelectors","LOGIN_SUCCESS","LOGIN_FAILURE","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","className","Aux","collapseToggle","fullScreen","fullScreenExit","changeLayout","navContentLeave","navCollapseLeave","NavigationTypes","_Users_osinakayah_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","isOpen","isTrigger","isFullScreen","NavigationSelectors","open","trigger","type","triggerIndex","indexOf","filter","item","_Users_osinakayah_WebstormProjects_orula_admin_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE"],"mappings":"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","file":"static/js/main.1782e2a7.chunk.js","sourcesContent":["export default {\r\n    defaultPath: '/dashboard/default',\r\n    basename: '/orula/admin/default', // only at build time to set, like /datta-able\r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-light', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6,\r\n    debug: true,\r\n    authTokenLocalStorage: 'authTokenLocalStorage',\r\n    baseUrl:'http://localhost:3000/api/v1/',\r\n\r\n    DELIVERY_INITIATED: 0,\r\n    DELIVERY_ITEM_PICKED: 1,\r\n    DELIVERY_STARTED: 3,\r\n    DELIVERY_COMPLETED: 4,\r\n\r\n    DELIVERY_RECOVERY_INITIATED: 10,\r\n    DELIVERY_RECOVERY_COMPLETED:14\r\n};\r\n","import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n    fetchingDeliveriesRequest: ['deliveriesData'],\n    fetchingDeliveriesSuccess: ['deliveriesPayload'],\n    fetchingDeliveriesFailure: ['deliveriesError'],\n\n    fetchingDeliveryRequest: ['deliveryData'],\n    fetchingDeliverySuccess: ['deliveryPayload'],\n    fetchingDeliveryFailure: ['deliveryError']\n\n\n})\n\nexport const DeliveryTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n    deliveriesData: null,\n    deliveriesPayload: [],\n    deliveriesError: null,\n    deliveriesFetching: false,\n\n    deliveryFetching: false,\n    deliveryError: null,\n    deliveryPayload: {\n        delivery: {},\n        customer:{}\n    }\n})\n\n/* ------------- Selectors ------------- */\n\nexport const DeliverySelectors = {\n    getData: state => state\n}\n\n/* ------------- Reducers ------------- */\n\nexport const fetchingDeliveriesRequest = (state, {deliveriesData}) => {\n    return state.merge({deliveriesData, deliveriesFetching: true, deliveriesError: null})\n}\nexport const fetchingDeliveriesSuccess = (state, {deliveriesPayload}) => {\n    return state.merge({deliveriesPayload, deliveriesFetching: false, deliveriesError: null})\n}\nexport const fetchingDeliveriesFailure = (state, {deliveriesError}) => {\n    return state.merge({deliveriesError, deliveriesFetching: false})\n}\n\nexport const fetchingDeliveryRequest = state => state.merge({deliveryFetching: true, deliveryError: null})\nexport const fetchingDeliverySuccess = (state, {deliveryPayload} ) => state.merge({deliveryPayload, deliveryFetching: false, deliveryError: null})\nexport const fetchingDeliveryFailure = (state, {deliveryError} ) => state.merge({deliveryError, deliveryFetching: false, deliveryPayload: {}})\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n    [Types.FETCHING_DELIVERIES_REQUEST]: fetchingDeliveriesRequest,\n    [Types.FETCHING_DELIVERIES_SUCCESS]: fetchingDeliveriesSuccess,\n    [Types.FETCHING_DELIVERIES_FAILURE]: fetchingDeliveriesFailure,\n    [Types.FETCHING_DELIVERY_REQUEST]: fetchingDeliveryRequest,\n    [Types.FETCHING_DELIVERY_SUCCESS]: fetchingDeliverySuccess,\n    [Types.FETCHING_DELIVERY_FAILURE]: fetchingDeliveryFailure\n})\n","import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\r\n\r\nconst SignUp = React.lazy(() => import('./Pages/Authentication/SignUp/SignUp1'));\r\nconst Signin = React.lazy(() => import('./Pages/Authentication/SignIn/SignIn1'));\r\n\r\nconst route = [\r\n    { path: '/auth/signup', exact: true, name: 'Signup', component: SignUp },\r\n    { path: '/auth/signin', exact: true, name: 'Sign In', component: Signin }\r\n];\r\n\r\nexport default route;","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from '../Components/Loader/index'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from '../Components/ScrollToTop/index';\nimport routes from \"../route\";\n\nconst AdminLayout = Loadable({\n    loader: () => import('./AdminLayout/index'),\n    loading: Loader\n});\n\nclass App extends Component {\n    render() {\n        const menu = routes.map((route, index) => {\n            return (route.component) ? (\n                <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    render={props => (\n                        <route.component {...props} />\n                    )} />\n            ) : (null);\n        });\n\n        return (\n            <Aux>\n                <ScrollToTop>\n                    <Suspense fallback={<Loader/>}>\n                        <Switch>\n                            {menu}\n                            <Route path=\"/\" component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </ScrollToTop>\n            </Aux>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n    // Functions return fixtures\n    postLogin: ({email, password}) => {\n        if (password === 'secret') {\n            return {\n                headers:{\n                    authorization: \"testHeader\"\n                },\n                ok: true,\n                data : {\n                    id: 1,\n                    fullname: \"John Doe\",\n                    email: email,\n                    user_type: 3,\n                    created_at: \"2019-07-20T16:25:10.758Z\",\n                    updated_at: \"2019-07-20T16:25:10.758Z\"\n                }\n            }\n        }\n        return {\n            ok: false,\n            data: {\n                error: \"Something went wrong\"\n            }\n        }\n\n    },\n    getFetchingDeliveries: ({page, status}) => {\n        if (page > 0 ) {\n            return {\n                ok: true,\n                data: require('../Fixtures/deliveries.json')\n            }\n        }\n        return {\n            ok: false,\n            data: {\n                error: \"Something went wrong\"\n            }\n        }\n    },\n    getFetchingDelivery: ({id}) => {\n        if (id > 0) {\n            return {\n                ok: true,\n                data: require('../Fixtures/delivery.json')\n            }\n        }\n        return {\n            ok: false,\n            data: {\n                error: \"Something went wrong\"\n            }\n        }\n    },\n    getFetchingCustomers: ({page, status}) => {\n        if (page > 0) {\n            return {\n                ok: true,\n                data: require('../Fixtures/customers.json')\n            }\n        }\n        return {\n            ok: false,\n            data: {\n                error: \"Something went wrong\"\n            }\n        }\n    },\n    getFetchingCustomer: ({id}) => {\n        if (id > 0) {\n            return {\n                ok: true,\n                data: require('../Fixtures/customer.json')\n            }\n        }\n        return {\n            ok: false,\n            data: {\n                error: \"Something went wrong\"\n            }\n        }\n    },\n\n}","// a library to wrap and simplify api calls\nimport apisauce from 'apisauce'\nimport config from '../config'\n\n\n// our \"constructor\"\nconst create = (token = null) => {\n    // ------\n    // STEP 1\n    // ------\n    //\n    // Create and configure an apisauce-based api object.\n    //\n    const api = apisauce.create({\n        // base URL is read from the \"constructor\"\n        baseURL: config.baseUrl,\n        headers: { Authorization: token },\n    })\n\n    const postLogin = (data) => {\n        return api.post('auth/login', data);\n    }\n\n    const getFetchingDeliveries = (data) => {\n        return api.get(`deliveries?status=${data.status}&page=${data.page}`)\n    }\n    const getFetchingDelivery = (data) => {\n        return api.get(`deliveries/${data.id}`)\n    }\n    const getFetchingCustomers = (data) => {\n        return api.get(`customers?status=${data.status}&page=${data.page}`)\n    }\n    const getFetchingCustomer = (data) => {\n        return api.get(`customers/${data.id}`)\n    }\n\n    return {\n        postLogin,\n        getFetchingDeliveries,\n        getFetchingDelivery,\n        getFetchingCustomers,\n        getFetchingCustomer\n    }\n}\n\n// let's return back our create method as the default.\nexport default {\n    create\n}\n","import LoginActions from '../Redux/LoginRedux'\nimport { call, put } from 'redux-saga/effects'\nimport {ToastsStore} from \"react-toasts\";\nimport {reactLocalStorage} from 'reactjs-localstorage';\nimport config from '../config';\n\nexport  function *postLoginSaga(api, action) {\n    const { data } = action;\n\n    const response = yield call(api.postLogin, data);\n\n    if (response.ok) {\n        reactLocalStorage.set(config.authTokenLocalStorage, response.headers.authorization);\n\n        yield put(LoginActions.loginSuccess(response.data))\n        window.location = 'https://osinakayah.github.io/orula_admin_frontend/'\n    }\n    else {\n        ToastsStore.error(response.data.error);\n        yield put(LoginActions.loginFailure(response.data.error))\n    }\n}","import DeliveryActions from '../Redux/DeliveryRedux'\nimport { call, put } from 'redux-saga/effects'\nimport {ToastsStore} from \"react-toasts\";\n\nexport  function *getFetchingDeliveriesSaga(api, action) {\n\n    const { deliveriesData } = action;\n\n\n    const response = yield call(api.getFetchingDeliveries, deliveriesData);\n\n    if (response.ok) {\n        yield put(DeliveryActions.fetchingDeliveriesSuccess(response.data))\n    }\n    else {\n        ToastsStore.error(response.data.error);\n        yield put(DeliveryActions.fetchingDeliveriesFailure(response.data.error))\n    }\n}\n\nexport function *getFetchingDeliverySaga(api, action) {\n    console.log(action)\n    const { deliveryData } = action;\n    const response = yield call(api.getFetchingDelivery, deliveryData);\n\n    if (response.ok) {\n        yield put(DeliveryActions.fetchingDeliverySuccess(response.data))\n    }\n    else {\n        yield put(DeliveryActions.fetchingDeliveryFailure(response.data.error))\n    }\n}","import { all, takeLatest } from 'redux-saga/effects'\nimport config from '../config'\nimport FixtureAPI from '../Services/FixtureApi'\nimport API from '../Services/Api'\nimport {reactLocalStorage} from 'reactjs-localstorage';\n\n//----------------Types----------------------\nimport { LoginTypes } from \"../Redux/LoginRedux\";\nimport { DeliveryTypes } from \"../Redux/DeliveryRedux\";\n\n//-------------------Sagas-------------------\nimport { postLoginSaga } from \"./LoginSaga\";\nimport { getFetchingDeliveriesSaga, getFetchingDeliverySaga } from \"./DeliverySaga\";\n\n// ----------------API--------------\nconst api = config.debug ? FixtureAPI : API.create(reactLocalStorage.get(config.authTokenLocalStorage))\n\n/* ------------- Connect Types To Sagas ------------- */\nexport default function * root() {\n    yield all([\n        takeLatest(LoginTypes.LOGIN_REQUEST, postLoginSaga, api),\n        takeLatest(DeliveryTypes.FETCHING_DELIVERIES_REQUEST, getFetchingDeliveriesSaga, api),\n        takeLatest(DeliveryTypes.FETCHING_DELIVERY_REQUEST, getFetchingDeliverySaga, api),\n    ]);\n}\n","import { combineReducers } from 'redux'\nimport configureSore from './CreateStore';\nimport rootSaga from '../Sagas';\n\nexport default () => {\n    const rootReducer = combineReducers({\n        nav: require('./NavigationRedux').reducer,\n        login: require('./LoginRedux').reducer,\n        deliveries: require('./DeliveryRedux').reducer\n    })\n\n    return configureSore(rootReducer, rootSaga);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// import App from './App/index';\nimport App from './Pages/RootPage'\nimport * as serviceWorker from './serviceWorker';\nimport config from './config';\n\nimport createStore from './Redux'\n\nconst app = (\n    <Provider store={createStore()}>\n        <BrowserRouter basename={config.basename}>\n            {/* basename=\"/datta-able\" */}\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nexport default (rootReducer, rootSaga) => {\n    const middleware = []\n    const enhancers = []\n\n\n    const sagaMiddleware = createSagaMiddleware({sagaMonitor: null});\n\n    middleware.push(sagaMiddleware);\n    enhancers.push(applyMiddleware(...middleware));\n\n\n    const store = createStore(rootReducer, compose(...enhancers))\n\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n}","import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n    loginRequest: ['data'],\n    loginSuccess: ['payload'],\n    loginFailure: ['error'],\n})\n\nexport const LoginTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n    payload: null,\n    error: null,\n    fetching: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const LoginSelectors = {\n    getData: state => state\n}\n\n/* ------------- Reducers ------------- */\n\nexport const loginRequest = (state) => {\n    return state.merge({fetching: true, payload:null, error: null})\n}\nexport const loginSuccess = (state, {payload}) => {\n    return state.merge({payload, fetching: false, error: null})\n}\nexport const loginFailure = (state, {error}) => {\n    return state.merge({error, fetching: false})\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n    [Types.LOGIN_REQUEST]: loginRequest,\n    [Types.LOGIN_SUCCESS]: loginSuccess,\n    [Types.LOGIN_FAILURE]: loginFailure,\n})\n","import React from 'react';\n\nconst index = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default index;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\nimport config from \"../config\";\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n    collapseMenu: null,\n    collapseToggle: ['menu'],\n    fullScreen: null,\n    fullScreenExit: null,\n    changeLayout: ['data'],\n    navContentLeave: null,\n    navCollapseLeave: ['menu'],\n})\n\nexport const NavigationTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n    isOpen: [], //for active default menu\n    isTrigger: [], //for active default menu, set blank for horizontal\n    ...config,\n    isFullScreen: false, // static can't change\n})\n\n/* ------------- Selectors ------------- */\n\nexport const NavigationSelectors = {\n    getData: state => state\n}\n\n/* ------------- Reducers ------------- */\n\nexport const collapseMenu = state => {\n    const collapseMenu = !state.collapseMenu;\n    return state.merge({collapseMenu})\n}\nexport const collapseToggle = (state, action) => {\n    let open = state.isOpen;\n    let trigger = state.isTrigger;\n    if (action.menu.type === 'sub') {\n\n\n        const triggerIndex = trigger.indexOf(action.menu.id);\n        if (triggerIndex > -1) {\n            open = open.filter(item => item !== action.menu.id);\n            trigger = trigger.filter(item => item !== action.menu.id);\n        }\n\n        if (triggerIndex === -1) {\n            open = [...open, action.menu.id];\n            trigger = [...trigger, action.menu.id];\n        }\n    } else {\n        open = state.isOpen;\n        const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\n        trigger = (triggerIndex === -1) ? [action.menu.id] : [];\n        open = (triggerIndex === -1) ? [action.menu.id] : [];\n    }\n    return state.merge({isOpen: open, isTrigger: trigger});\n}\nexport const navCollapseLeave = (state, action) => {\n    if (action.menu.type === 'sub') {\n        let open = state.isOpen;\n        let trigger = state.isTrigger;\n\n        const triggerIndex = trigger.indexOf(action.menu.id);\n        if (triggerIndex > -1) {\n            open = open.filter(item => item !== action.menu.id);\n            trigger = trigger.filter(item => item !== action.menu.id);\n        }\n        return state.merge({isOpen: open, isTrigger: trigger})\n    }\n    return state;\n}\n\nexport const navContentLeave = state => {\n    return state.merge({isOpen: [], isTrigger:[]});\n}\n\nexport const fullScreen = (state) => {\n    const isFullScreen = !state.isFullScreen;\n    return state.merge({isFullScreen});\n}\n\nexport const fullScreenExit = state => state.merge({isFullScreen: false});\n\nexport const changeLayout = (state, {layout}) => {\n    return state.merge({layout});\n}\n\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n    [Types.COLLAPSE_MENU]: collapseMenu,\n    [Types.COLLAPSE_TOGGLE]: collapseToggle,\n    [Types.FULL_SCREEN]: fullScreen,\n\n    [Types.FULL_SCREEN_EXIT]: fullScreenExit,\n    [Types.CHANGE_LAYOUT]: changeLayout,\n\n    [Types.NAV_CONTENT_LEAVE]: navCollapseLeave,\n    [Types.NAV_COLLAPSE_LEAVE]: navContentLeave,\n})\n"],"sourceRoot":""}