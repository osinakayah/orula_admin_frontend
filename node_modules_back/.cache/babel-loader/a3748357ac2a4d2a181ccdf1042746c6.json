{"ast":null,"code":"import _defineProperty from \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _createReducer;\n\nimport { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\nimport config from \"../config\";\n/* ------------- Types and Action Creators ------------- */\n\nvar _createActions = createActions({\n  collapseMenu: null,\n  collapseToggle: ['menu'],\n  fullScreen: null,\n  fullScreenExit: null,\n  changeLayout: ['data'],\n  navContentLeave: null,\n  navCollapseLeave: ['menu']\n}),\n    Types = _createActions.Types,\n    Creators = _createActions.Creators;\n\nexport var NavigationTypes = Types;\nexport default Creators;\n/* ------------- Initial State ------------- */\n\nexport var INITIAL_STATE = Immutable(_objectSpread({\n  isOpen: [],\n  //for active default menu\n  isTrigger: []\n}, config, {\n  isFullScreen: false // static can't change\n\n}));\n/* ------------- Selectors ------------- */\n\nexport var NavigationSelectors = {\n  getData: function getData(state) {\n    return state;\n  }\n  /* ------------- Reducers ------------- */\n\n};\nexport var collapseMenu = function collapseMenu(state) {\n  var collapseMenu = !state.collapseMenu;\n  return state.merge({\n    collapseMenu: collapseMenu\n  });\n};\nexport var collapseToggle = function collapseToggle(state, action) {\n  var open = state.isOpen;\n  var trigger = state.isTrigger;\n\n  if (action.menu.type === 'sub') {\n    var triggerIndex = trigger.indexOf(action.menu.id);\n\n    if (triggerIndex > -1) {\n      open = open.filter(function (item) {\n        return item !== action.menu.id;\n      });\n      trigger = trigger.filter(function (item) {\n        return item !== action.menu.id;\n      });\n    }\n\n    if (triggerIndex === -1) {\n      open = [].concat(_toConsumableArray(open), [action.menu.id]);\n      trigger = [].concat(_toConsumableArray(trigger), [action.menu.id]);\n    }\n  } else {\n    open = state.isOpen;\n\n    var _triggerIndex = state.isTrigger.indexOf(action.menu.id);\n\n    trigger = _triggerIndex === -1 ? [action.menu.id] : [];\n    open = _triggerIndex === -1 ? [action.menu.id] : [];\n  }\n\n  return state.merge({\n    isOpen: open,\n    isTrigger: trigger\n  });\n};\nexport var navCollapseLeave = function navCollapseLeave(state, action) {\n  if (action.menu.type === 'sub') {\n    var open = state.isOpen;\n    var trigger = state.isTrigger;\n    var triggerIndex = trigger.indexOf(action.menu.id);\n\n    if (triggerIndex > -1) {\n      open = open.filter(function (item) {\n        return item !== action.menu.id;\n      });\n      trigger = trigger.filter(function (item) {\n        return item !== action.menu.id;\n      });\n    }\n\n    return state.merge({\n      isOpen: open,\n      isTrigger: trigger\n    });\n  }\n\n  return state;\n};\nexport var navContentLeave = function navContentLeave(state) {\n  return state.merge({\n    isOpen: [],\n    isTrigger: []\n  });\n};\nexport var fullScreen = function fullScreen(state) {\n  var isFullScreen = !state.isFullScreen;\n  return state.merge({\n    isFullScreen: isFullScreen\n  });\n};\nexport var fullScreenExit = function fullScreenExit(state) {\n  return state.merge({\n    isFullScreen: false\n  });\n};\nexport var changeLayout = function changeLayout(state, _ref) {\n  var layout = _ref.layout;\n  return state.merge({\n    layout: layout\n  });\n};\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport var reducer = createReducer(INITIAL_STATE, (_createReducer = {}, _defineProperty(_createReducer, Types.COLLAPSE_MENU, collapseMenu), _defineProperty(_createReducer, Types.COLLAPSE_TOGGLE, collapseToggle), _defineProperty(_createReducer, Types.FULL_SCREEN, fullScreen), _defineProperty(_createReducer, Types.FULL_SCREEN_EXIT, fullScreenExit), _defineProperty(_createReducer, Types.CHANGE_LAYOUT, changeLayout), _defineProperty(_createReducer, Types.NAV_CONTENT_LEAVE, navCollapseLeave), _defineProperty(_createReducer, Types.NAV_COLLAPSE_LEAVE, navContentLeave), _createReducer));","map":{"version":3,"sources":["/Users/osinakayah/WebstormProjects/orula_admin_frontend/src/Redux/NavigationRedux.js"],"names":["createReducer","createActions","Immutable","config","collapseMenu","collapseToggle","fullScreen","fullScreenExit","changeLayout","navContentLeave","navCollapseLeave","Types","Creators","NavigationTypes","INITIAL_STATE","isOpen","isTrigger","isFullScreen","NavigationSelectors","getData","state","merge","action","open","trigger","menu","type","triggerIndex","indexOf","id","filter","item","layout","reducer","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE"],"mappings":"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","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\nimport config from \"../config\";\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n    collapseMenu: null,\n    collapseToggle: ['menu'],\n    fullScreen: null,\n    fullScreenExit: null,\n    changeLayout: ['data'],\n    navContentLeave: null,\n    navCollapseLeave: ['menu'],\n})\n\nexport const NavigationTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n    isOpen: [], //for active default menu\n    isTrigger: [], //for active default menu, set blank for horizontal\n    ...config,\n    isFullScreen: false, // static can't change\n})\n\n/* ------------- Selectors ------------- */\n\nexport const NavigationSelectors = {\n    getData: state => state\n}\n\n/* ------------- Reducers ------------- */\n\nexport const collapseMenu = state => {\n    const collapseMenu = !state.collapseMenu;\n    return state.merge({collapseMenu})\n}\nexport const collapseToggle = (state, action) => {\n    let open = state.isOpen;\n    let trigger = state.isTrigger;\n    if (action.menu.type === 'sub') {\n\n\n        const triggerIndex = trigger.indexOf(action.menu.id);\n        if (triggerIndex > -1) {\n            open = open.filter(item => item !== action.menu.id);\n            trigger = trigger.filter(item => item !== action.menu.id);\n        }\n\n        if (triggerIndex === -1) {\n            open = [...open, action.menu.id];\n            trigger = [...trigger, action.menu.id];\n        }\n    } else {\n        open = state.isOpen;\n        const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\n        trigger = (triggerIndex === -1) ? [action.menu.id] : [];\n        open = (triggerIndex === -1) ? [action.menu.id] : [];\n    }\n    return state.merge({isOpen: open, isTrigger: trigger});\n}\nexport const navCollapseLeave = (state, action) => {\n    if (action.menu.type === 'sub') {\n        let open = state.isOpen;\n        let trigger = state.isTrigger;\n\n        const triggerIndex = trigger.indexOf(action.menu.id);\n        if (triggerIndex > -1) {\n            open = open.filter(item => item !== action.menu.id);\n            trigger = trigger.filter(item => item !== action.menu.id);\n        }\n        return state.merge({isOpen: open, isTrigger: trigger})\n    }\n    return state;\n}\n\nexport const navContentLeave = state => {\n    return state.merge({isOpen: [], isTrigger:[]});\n}\n\nexport const fullScreen = (state) => {\n    const isFullScreen = !state.isFullScreen;\n    return state.merge({isFullScreen});\n}\n\nexport const fullScreenExit = state => state.merge({isFullScreen: false});\n\nexport const changeLayout = (state, {layout}) => {\n    return state.merge({layout});\n}\n\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n    [Types.COLLAPSE_MENU]: collapseMenu,\n    [Types.COLLAPSE_TOGGLE]: collapseToggle,\n    [Types.FULL_SCREEN]: fullScreen,\n\n    [Types.FULL_SCREEN_EXIT]: fullScreenExit,\n    [Types.CHANGE_LAYOUT]: changeLayout,\n\n    [Types.NAV_CONTENT_LEAVE]: navCollapseLeave,\n    [Types.NAV_COLLAPSE_LEAVE]: navContentLeave,\n})\n"]},"metadata":{},"sourceType":"module"}