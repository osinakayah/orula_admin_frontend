{"ast":null,"code":"import _classCallCheck from \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/osinakayah/WebstormProjects/orula_admin_frontend/src/Demo/UIElements/Basic/Button.js\";\nimport React from 'react';\nimport { Row, Col, Button, OverlayTrigger, Tooltip, ButtonToolbar, Dropdown, DropdownButton, SplitButton } from 'react-bootstrap';\nimport Aux from \"../../../hoc/_Aux\";\nimport Card from \"../../../Components/MainCard\";\nimport UcFirst from \"../../../Components/UcFirst\";\n\nvar BasicButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasicButton, _React$Component);\n\n  function BasicButton() {\n    _classCallCheck(this, BasicButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BasicButton).apply(this, arguments));\n  }\n\n  _createClass(BasicButton, [{\n    key: \"render\",\n    value: function render() {\n      var buttonVariants = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n      var buttonOptions = [{\n        variant: 'primary',\n        icon: 'feather icon-thumbs-up'\n      }, {\n        variant: 'secondary',\n        icon: 'feather icon-camera'\n      }, {\n        variant: 'success',\n        icon: 'feather icon-check-circle'\n      }, {\n        variant: 'danger',\n        icon: 'feather icon-slash'\n      }, {\n        variant: 'warning',\n        icon: 'feather icon-alert-triangle'\n      }, {\n        variant: 'info',\n        icon: 'feather icon-info'\n      }];\n      var basicButtons = buttonVariants.map(function (variant, idx) {\n        return React.createElement(OverlayTrigger, {\n          key: idx,\n          overlay: React.createElement(Tooltip, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, variant),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(UcFirst, {\n          text: variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        })));\n      });\n      var outlineButtons = buttonVariants.map(function (variant, idx) {\n        return React.createElement(OverlayTrigger, {\n          key: idx,\n          overlay: React.createElement(Tooltip, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, 'outline-' + variant),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: 'outline-' + variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(UcFirst, {\n          text: variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })));\n      });\n      var squareButtons = buttonVariants.map(function (variant, idx) {\n        return React.createElement(Button, {\n          key: idx,\n          className: \"btn-square\",\n          variant: variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(UcFirst, {\n          text: variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      });\n      var basicDropdownButton = buttonOptions.map(function (button) {\n        var title = React.createElement(UcFirst, {\n          text: button.variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n        return React.createElement(DropdownButton, {\n          title: title,\n          variant: button.variant,\n          id: \"dropdown-variants-\".concat(button.variant),\n          key: button.variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Another action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Something else hear\"));\n      });\n      var splitDropdownButton = buttonOptions.map(function (button) {\n        var title = React.createElement(UcFirst, {\n          text: button.variant,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n        return React.createElement(SplitButton, {\n          title: title,\n          variant: button.variant,\n          id: \"dropdown-split-variants-\".concat(button.variant),\n          key: button.variant,\n          className: \"mr-2 mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Dropdown.Item, {\n          eventKey: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Another action\"), React.createElement(Dropdown.Item, {\n          eventKey: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Something else hear\"), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(Dropdown.Item, {\n          eventKey: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Separated link\"));\n      });\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"use \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"variant=\\\"*\\\"\"), \" props in component \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Button\"), \" to get various button\"), basicButtons, React.createElement(OverlayTrigger, {\n        overlay: React.createElement(Tooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"link\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Link\"))), React.createElement(Card, {\n        title: \"Outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"use \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"variant=\\\"outline-*\\\"\"), \" props in component \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Button\"), \" to get various outline button\"), outlineButtons), React.createElement(Card, {\n        title: \"Square Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"use \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"className=\\\"btn-square\\\"\"), \" props in component \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Button\"), \" to get square button\"), squareButtons))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Basic Dropdown Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, basicDropdownButton)), React.createElement(Card, {\n        title: \"Split Dropdown Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, splitDropdownButton)))));\n    }\n  }]);\n\n  return BasicButton;\n}(React.Component);\n\nexport default BasicButton;","map":{"version":3,"sources":["/Users/osinakayah/WebstormProjects/orula_admin_frontend/src/Demo/UIElements/Basic/Button.js"],"names":["React","Row","Col","Button","OverlayTrigger","Tooltip","ButtonToolbar","Dropdown","DropdownButton","SplitButton","Aux","Card","UcFirst","BasicButton","buttonVariants","buttonOptions","variant","icon","basicButtons","map","idx","outlineButtons","squareButtons","basicDropdownButton","button","title","splitDropdownButton","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    ButtonToolbar,\r\n    Dropdown,\r\n    DropdownButton,\r\n    SplitButton\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../Components/MainCard\";\r\nimport UcFirst from \"../../../Components/UcFirst\";\r\n\r\nclass BasicButton extends React.Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonOptions = [\r\n            {variant: 'primary', icon:'feather icon-thumbs-up'},\r\n            {variant: 'secondary', icon:'feather icon-camera'},\r\n            {variant: 'success', icon:'feather icon-check-circle'},\r\n            {variant: 'danger', icon:'feather icon-slash'},\r\n            {variant: 'warning', icon:'feather icon-alert-triangle'},\r\n            {variant: 'info', icon:'feather icon-info'}\r\n        ];\r\n\r\n        const basicButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\r\n                <Button variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const outlineButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\r\n                <Button variant={'outline-'+variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square' variant={variant}><UcFirst text={variant} /></Button>);\r\n\r\n\r\n        const basicDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Default\">\r\n                            <p>use <code>variant=\"*\"</code> props in component <code>Button</code> to get various button</p>\r\n                            {basicButtons}\r\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\r\n                                <Button variant=\"link\">Link</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                        <Card title=\"Outline\">\r\n                            <p>use <code>variant=\"outline-*\"</code> props in component <code>Button</code> to get various outline button</p>\r\n                            {outlineButtons}\r\n                        </Card>\r\n                        <Card title=\"Square Button\">\r\n                            <p>use <code>className=\"btn-square\"</code> props in component <code>Button</code> to get square button</p>\r\n                            {squareButtons}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Basic Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicButton;\r\n"]},"metadata":{},"sourceType":"module"}