"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const indicative_rules_1 = require("indicative-rules");
const indicative_compiler_1 = require("indicative-compiler");
const CacheManager_1 = require("../CacheManager");
const config_1 = require("./config");
const cacheManager = new CacheManager_1.CacheManager();
function getExecutor(schema, messages, config) {
    if (!config.cacheKey) {
        const compiler = new indicative_compiler_1.ValidatorCompiler(schema, messages, indicative_rules_1.validations);
        return new indicative_compiler_1.ValidatorExecutor(compiler.compile());
    }
    const compiledSchema = cacheManager.get(config.cacheKey);
    if (!compiledSchema) {
        const compiler = new indicative_compiler_1.ValidatorCompiler(schema, messages, indicative_rules_1.validations);
        cacheManager.set(config.cacheKey, compiler.compile());
    }
    return new indicative_compiler_1.ValidatorExecutor(cacheManager.get(config.cacheKey));
}
exports.validate = (data, schema, messages, config) => {
    config = Object.assign({}, config_1.config, config);
    return getExecutor(schema, messages || {}, config).exec(data, config.formatter, config, true, config.removeAdditional);
};
exports.validateAll = (data, schema, messages, config) => {
    config = Object.assign({}, config_1.config, config);
    return getExecutor(schema, messages || {}, config).exec(data, config.formatter, config, false, config.removeAdditional);
};
