import * as React from "react";
export interface ITriggerProps<T> {
    onClick: () => void;
    ref: (v: T) => void;
}
export interface IReactToPrintProps {
    trigger: <T>() => React.ReactElement<ITriggerProps<T>>;
    content: () => React.ReactInstance;
    copyStyles?: boolean;
    onBeforePrint?: () => void;
    onAfterPrint?: () => void;
    pageStyle?: string;
    bodyClass?: string;
}
export default class ReactToPrint extends React.Component<IReactToPrintProps> {
    triggerRef: React.RefObject<HTMLElement>;
    linkTotal: number;
    linksLoaded: Element[];
    linksErrored: Element[];
    removeWindow: (target: any) => void;
    triggerPrint: (target: any) => void;
    handlePrint: () => void;
    setRef: (ref: any) => void;
    render(): React.ReactElement<ITriggerProps<{}>>;
}
